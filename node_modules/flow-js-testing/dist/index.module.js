import{flowConfig as e}from"@onflow/fcl-config";import{config as n}from"@onflow/config";import r from"fs";import t from"path";import*as o from"@onflow/fcl";import{ec as a}from"elliptic";import{SHA3 as c}from"sha3";import*as i from"rlp";import*as s from"@onflow/types";import{getEnvironment as u,reportMissingImports as l,replaceImportAddresses as d,reportMissing as f}from"flow-cadut";var m=function e(n,r,t){if("string"==typeof r)return e(n,r.split("/"),t);if(!r.length)return n;try{var o=r[0],a=r.slice(1);return e(n[o],a,t)}catch(e){return t}},g=function(r,t,o,a){n().put(r,t||m(e(),o,a))},h=function(e){try{return Promise.resolve(n().get(e))}catch(e){return Promise.reject(e)}},v=function(e,r){void 0===r&&(r=8080);try{return g("PRIVATE_KEY",process.env.PK,"accounts/emulator-account/keys"),g("SERVICE_ADDRESS",process.env.SERVICE_ADDRESS,"accounts/emulator-account/address","f8d6e0586b0a20c7"),n().put("accessNode.api","http://localhost:"+r),g("BASE_PATH",process.env.BASE_PATH,"resolve/basePath",e),Promise.resolve()}catch(e){return Promise.reject(e)}};function p(){return(p=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var r=arguments[n];for(var t in r)Object.prototype.hasOwnProperty.call(r,t)&&(e[t]=r[t])}return e}).apply(this,arguments)}var P=/(\s*import\s*)([\w\d]+)(\s+from\s*)([\w\d".\\/]+)/g,A=function(e){return e.split(/\s/).map(function(e){return e.replace(/\s/g,"")}).filter(function(e){return e.length>0&&"import"!==e&&"from"!==e})},M=function(e,n){return e[n[0]]=n[1],e},y=function(e){return e&&0!==e.length?e.split("\n").filter(function(e){return e.includes("import")}).map(A).reduce(M,{}):{}},b=function(e,n,r){return void 0===r&&(r=!0),e.replace(P,function(e,t,o,a,c){var i=r?o:c;return""+t+o+" from "+(n instanceof Function?n(i):n[i])})},S={FlowToken:"0x0ae53cb6e3f42a79",FungibleToken:"0xee82856bf20e2aa6",FlowFees:"0xe5a8b7f23e8b548f",FlowStorageFees:"0xf8d6e0586b0a20c7"},w={"0xe5a8b7f23e8b548f":"0xe5a8b7f23e8b548f","0xf8d6e0586b0a20c7":"0xf8d6e0586b0a20c7","0x0ae53cb6e3f42a79":"0x0ae53cb6e3f42a79","0xee82856bf20e2aa6":"0xee82856bf20e2aa6"},T=function(e,r){void 0===r&&(r="./transactions/");try{return Promise.resolve(n().get("BASE_PATH")).then(function(n){return t.resolve(n,r+"/"+e+".cdc")})}catch(e){return Promise.reject(e)}},x=function(e,n,t){void 0===n&&(n={}),void 0===t&&(t=!1);var o=function(e){return r.readFileSync(e,"utf8")}(e);return n?b(o,p({},t?w:S,n)):o},k=function(e){var n=e.name,r=e.addressMap;try{return Promise.resolve(T(n,"./contracts/")).then(function(e){return x(e,r)})}catch(e){return Promise.reject(e)}},j=function(e){var n=e.name,r=e.addressMap;try{return Promise.resolve(T(n,"./transactions/")).then(function(e){return x(e,r)})}catch(e){return Promise.reject(e)}},F=function(e){var n=e.name,r=e.addressMap;try{return Promise.resolve(T(n,"./scripts/")).then(function(e){return x(e,r)})}catch(e){return Promise.reject(e)}},E=function(e){return null==e?null:e.replace(/^0x/,"")},R=function(e){return null==e?null:"0x"+E(e)},C=new a("p256"),B=function(e,r){return void 0===r&&(r=0),function(t){void 0===t&&(t={});try{return Promise.resolve(n().get("SERVICE_ADDRESS")).then(function(a){return Promise.resolve(n().get("PRIVATE_KEY")).then(function(n){return e=E(e||a),p({},t,{tempId:e+"-"+r,addr:o.sansPrefix(e),keyId:r,signingFunction:function(t){try{return Promise.resolve({keyId:r,addr:R(e),signature:(o=n,a=t.message,i=C.keyFromPrivate(Buffer.from(o,"hex")).sign(function(e){var n=new c(256);return n.update(Buffer.from(e,"hex")),n.digest()}(a)),s=i.r.toArrayLike(Buffer,"be",32),u=i.s.toArrayLike(Buffer,"be",32),Buffer.concat([s,u]).toString("hex"))})}catch(e){return Promise.reject(e)}var o,a,i,s,u}})})})}catch(e){return Promise.reject(e)}}},I=function(e,n){var r=e[e.length-1];return e.slice(0,-1).map(function(e){return n(e,r)})},D=function(e){return e.reduce(function(e,n){var r=I(n,function(e,n){return o.arg(e,n)});return[].concat(e,r)},[])},_=function(e){return function(n){try{var r,t,o,a,c,i=function(){return{code:r,signers:o,args:a}};if("object"==typeof(h=n[0])&&null!==h){var s=n[0],u=s.name,l=s.addressMap,d=s.code,f=s.args,m=s.signers;if(!u&&!d)throw Error("Both `name` and `code` are missing. Provide either of them");t=u,c=l||{},r=d,o=m,a=f}else t=n[0],o=n[2],c=n[1]||{};var g=function(){if(t)return Promise.resolve(("script"===e?F:j)({name:t,addressMap:c})).then(function(e){r=e})}();return Promise.resolve(g&&g.then?g.then(i):i())}catch(e){return Promise.reject(e)}var h}},H=function(){try{var e=arguments,n=_("tx");return Promise.resolve(n([].slice.call(e))).then(function(e){var n=e.code,r=e.args,t=e.signers,a=B(),c=[o.transaction(n),o.payer(a),o.proposer(a),o.limit(999)];if(t){var i=t.map(function(e){return B(e)});c.push(o.authorizations(i))}else c.push(o.authorizations([a]));return r&&c.push(o.args(D(r))),Promise.resolve(o.send(c)).then(function(e){return Promise.resolve(o.tx(e).onceExecuted())})})}catch(e){return Promise.reject(e)}},L=function(){try{var e=arguments,n=_("script");return Promise.resolve(n([].slice.call(e))).then(function(e){var n=e.args,r=[o.script(e.code)];return n&&r.push(o.args(D(n))),Promise.resolve(o.send(r)).then(function(e){return o.decode(e)})})}catch(e){return Promise.reject(e)}},K="\n  pub contract FlowManager {\n\n    pub event AccountAdded(address: Address)\n\n    pub struct Mapper {\n        pub let accounts: {String: Address}\n\n        pub fun getAddress(_ name: String): Address? {\n            return self.accounts[name]\n        }\n\n        pub fun setAddress(_ name: String, address: Address){\n            self.accounts[name] = address\n            emit FlowManager.AccountAdded(address: address)\n        }\n\n        init(){\n            self.accounts = {}\n        }\n    }\n\n    pub let accountManagerStorage: StoragePath\n    pub let contractManagerStorage: StoragePath\n    pub let accountManagerPath: PublicPath\n    pub let contractManagerPath: PublicPath\n\n    init(){\n        let accountManager = Mapper()\n        let contractManager = Mapper()\n\n        self.accountManagerStorage = /storage/testSuitAccountManager\n        self.contractManagerStorage = /storage/testSuitContractManager\n\n        self.accountManagerPath = /public/testSuitAccountManager\n        self.contractManagerPath = /public/testSuitContractManager\n        \n        // Destroy previously stored values\n        self.account.load<Mapper>(from: self.accountManagerStorage)\n        self.account.load<Mapper>(from: self.contractManagerStorage)\n\n        self.account.save(accountManager, to: self.accountManagerStorage)\n        self.account.save(contractManager, to: self.contractManagerStorage)\n\n        self.account.link<&Mapper>(self.accountManagerPath, target: self.accountManagerStorage)\n        self.account.link<&Mapper>(self.contractManagerPath, target: self.contractManagerStorage)\n    }\n}\n \n",V="\n  import FlowManager from 0x01\n\npub fun main(){\n    // the body can be empty. The script will throw error if FlowManager is not\n    // added to service address\n}\n\n",G="\n  import FlowManager from 0x01\n\npub fun main(name: String, managerAccount: Address):Address? {\n    let manager = getAccount(managerAccount)\n    let linkPath = FlowManager.accountManagerPath\n    let accountManager = manager\n                        .getCapability(linkPath)\n                        .borrow<&FlowManager.Mapper>()!\n\n    return accountManager.getAddress(name)\n\n}\n",O='\n  // This script reads the balance field of an account\'s FlowToken Balance\n\nimport FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport ExampleToken from 0xTOKENADDRESS\n\npub fun main(account: Address): UFix64 {\n    let acct = getAccount(account)\n    let vaultRef = acct.getCapability(/public/exampleTokenBalance)!.borrow<&ExampleToken.Vault{FungibleToken.Balance}>()\n        ?? panic("Could not borrow Balance reference to the Vault")\n\n    return vaultRef.balance\n}\n',z="\n  import FlowManager from 0x01\n\npub fun main(name: String, managerAccount: Address):Address? {\n    let manager = getAccount(managerAccount)\n    let linkPath = FlowManager.contractManagerPath\n    let contractManager = manager\n                        .getCapability(linkPath)\n                        .borrow<&FlowManager.Mapper>()!\n\n    return contractManager.getAddress(name)\n\n}\n",N="\n  import FlowManager from 0x01\n\ntransaction (_ name: String, pubKey: String, manager: Address) {\n    prepare( admin: AuthAccount) {\n        let newAccount = AuthAccount(payer:admin)\n        newAccount.addPublicKey(pubKey.decodeHex())\n\n        let linkPath = FlowManager.accountManagerPath\n        let accountManager = getAccount(manager)\n                            .getCapability(linkPath)!\n                            .borrow<&FlowManager.Mapper>()!\n        \n        // Create a record in account database\n        let address = newAccount.address\n        accountManager.setAddress(name, address: address)\n    }\n}\n \n",U=function(e){void 0===e&&(e={});try{return Promise.resolve(u()).then(function(n){var r=p({},n,e);return l(N,r,"createAccount =>"),d(N,r)})}catch(e){return Promise.reject(e)}},Y="\n  import FlowManager from 0x01\n\ntransaction(name:String, code: String, manager: Address ##ARGS-WITH-TYPES##) {\n    prepare(acct: AuthAccount){\n        let decoded = code.decodeHex()\n        acct.contracts.add(\n           name: name,\n           code: decoded,\n           ##ARGS-LIST##\n        )\n\n        let linkPath = FlowManager.contractManagerPath\n        let contractManager = getAccount(manager)\n                    .getCapability(linkPath)!\n                    .borrow<&FlowManager.Mapper>()!\n\n        let address = acct.address\n        contractManager.setAddress(name, address: address)\n    }\n}\n",W=function(e){void 0===e&&(e={});try{return Promise.resolve(u()).then(function(n){var r=p({},n,e);return l(Y,r,"deployContract =>"),d(Y,r)})}catch(e){return Promise.reject(e)}},q='\n  transaction ( code: String ) {\n    prepare( admin: AuthAccount) {\n        admin.contracts.add(\n           name: "FlowManager",\n           code: code.decodeHex(),\n        )\n   }\n}\n\n',J=function(e){void 0===e&&(e={});try{return Promise.resolve(u()).then(function(n){var r=p({},n,e);return l(q,r,"initManager =>"),d(q,r)})}catch(e){return Promise.reject(e)}},Q='\n  import FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport ExampleToken from 0xTOKENADDRESS\n\ntransaction(recipient: Address, amount: UFix64) {\n    let tokenAdmin: &ExampleToken.Administrator\n    let tokenReceiver: &{FungibleToken.Receiver}\n\n    prepare(signer: AuthAccount) {\n        self.tokenAdmin = signer\n        .borrow<&ExampleToken.Administrator>(from: /storage/exampleTokenAdmin)\n        ?? panic("Signer is not the token admin")\n\n        self.tokenReceiver = getAccount(recipient)\n        .getCapability(/public/exampleTokenReceiver)!\n        .borrow<&{FungibleToken.Receiver}>()\n        ?? panic("Unable to borrow receiver reference")\n    }\n\n    execute {\n        let minter <- self.tokenAdmin.createNewMinter(allowedAmount: amount)\n        let mintedVault <- minter.mintTokens(amount: amount)\n\n        self.tokenReceiver.deposit(from: <-mintedVault)\n\n        destroy minter\n    }\n}\n\n',X=function(e){void 0===e&&(e={});try{return Promise.resolve(u()).then(function(n){var r=p({},n,e);return l(Q,r,"mintTokens =>"),d(Q,r)})}catch(e){return Promise.reject(e)}},Z="\n  import FlowManager from 0x01\n\ntransaction(name: String, address: Address) {\n    prepare(signer: AuthAccount){\n        let linkPath = FlowManager.contractManagerPath\n        let contractManager = signer\n                                .getCapability(linkPath)!\n                                .borrow<&FlowManager.Mapper>()!\n        contractManager.setAddress(name, address: address)\n    }\n}\n",$=function(e){void 0===e&&(e={});try{return Promise.resolve(u()).then(function(n){var r=p({},n,e);return l(Z,r,"registerContract =>"),d(Z,r)})}catch(e){return Promise.reject(e)}},ee="\n  transaction{\n    prepare(acct: AuthAccount){\n        log(acct.address)\n    }\n}\n",ne=function(e){void 0===e&&(e={});try{return Promise.resolve(u()).then(function(n){var r=p({},n,e);return l(ee,r,"scratch =>"),d(ee,r)})}catch(e){return Promise.reject(e)}},re="\n  import FlowManager from 0x01\n\ntransaction(name:String, code: String, manager: Address ##ARGS-WITH-TYPES##) {\n    prepare(acct: AuthAccount){\n        let decoded = code.decodeHex()\n\n        if acct.contracts.get(name: name) == nil {\n          acct.contracts.add(name: name, code: decoded)\n        } else {\n          acct.contracts.update__experimental(name: name, code: decoded)\n        }\n\n        let linkPath = FlowManager.contractManagerPath\n        let contractManager = getAccount(manager)\n                    .getCapability(linkPath)!\n                    .borrow<&FlowManager.Mapper>()!\n\n        let address = acct.address\n        contractManager.setAddress(name, address: address)\n    }\n}\n\n",te=function(e){void 0===e&&(e={});try{return Promise.resolve(u()).then(function(n){var r=p({},n,e);return l(re,r,"updateContract =>"),d(re,r)})}catch(e){return Promise.reject(e)}},oe={createAccount:function e(n){var r=n.addressMap,t=void 0===r?{}:r,o=n.args,a=void 0===o?[]:o,c=n.signers,i=void 0===c?[]:c;try{return Promise.resolve(U(t)).then(function(n){return f("arguments",a.length,3,e),f("signers",i.length,1,e),H({code:n,args:a,signers:i})})}catch(e){return Promise.reject(e)}},createAccountTemplate:U,deployContract:function e(n){var r=n.addressMap,t=void 0===r?{}:r,o=n.args,a=void 0===o?[]:o,c=n.signers,i=void 0===c?[]:c;try{return Promise.resolve(W(t)).then(function(n){return f("arguments",a.length,3,e),f("signers",i.length,1,e),H({code:n,args:a,signers:i})})}catch(e){return Promise.reject(e)}},deployContractTemplate:W,initManager:function e(n){var r=n.addressMap,t=void 0===r?{}:r,o=n.args,a=void 0===o?[]:o,c=n.signers,i=void 0===c?[]:c;try{return Promise.resolve(J(t)).then(function(n){return f("arguments",a.length,1,e),f("signers",i.length,1,e),H({code:n,args:a,signers:i})})}catch(e){return Promise.reject(e)}},initManagerTemplate:J,mintTokens:function e(n){var r=n.addressMap,t=void 0===r?{}:r,o=n.args,a=void 0===o?[]:o,c=n.signers,i=void 0===c?[]:c;try{return Promise.resolve(X(t)).then(function(n){return f("arguments",a.length,2,e),f("signers",i.length,1,e),H({code:n,args:a,signers:i})})}catch(e){return Promise.reject(e)}},mintTokensTemplate:X,registerContract:function e(n){var r=n.addressMap,t=void 0===r?{}:r,o=n.args,a=void 0===o?[]:o,c=n.signers,i=void 0===c?[]:c;try{return Promise.resolve($(t)).then(function(n){return f("arguments",a.length,2,e),f("signers",i.length,1,e),H({code:n,args:a,signers:i})})}catch(e){return Promise.reject(e)}},registerContractTemplate:$,scratch:function e(n){var r=n.addressMap,t=void 0===r?{}:r,o=n.args,a=void 0===o?[]:o,c=n.signers,i=void 0===c?[]:c;try{return Promise.resolve(ne(t)).then(function(n){return f("arguments",a.length,0,e),f("signers",i.length,1,e),H({code:n,args:a,signers:i})})}catch(e){return Promise.reject(e)}},scratchTemplate:ne,updateContract:function e(n){var r=n.addressMap,t=void 0===r?{}:r,o=n.args,a=void 0===o?[]:o,c=n.signers,i=void 0===c?[]:c;try{return Promise.resolve(te(t)).then(function(n){return f("arguments",a.length,3,e),f("signers",i.length,1,e),H({code:n,args:a,signers:i})})}catch(e){return Promise.reject(e)}},updateContractTemplate:te},ae=oe,ce={ExampleToken:S.FlowToken},ie=function(e){return e[0].toLowerCase()+e.slice(1)},se=function(e){try{return Promise.resolve(function(e){try{return Promise.resolve(function(e){void 0===e&&(e={});try{return Promise.resolve(u()).then(function(n){var r=p({},n,e);return l(O,r,"getBalance =>"),d(O,r)})}catch(e){return Promise.reject(e)}}(ce)).then(function(n){return n.replace(/(ExampleToken)/gi,function(n){return"ExampleToken"===n?e:ie(e)})})}catch(e){return Promise.reject(e)}}("FlowToken")).then(function(n){var r=b(n,S);return L({code:r,args:[[e,s.Address]]})})}catch(e){return Promise.reject(e)}},ue=function(e,n){try{return Promise.resolve(function(e){try{return Promise.resolve(ae.mintTokensTemplate(ce)).then(function(n){return n.replace(/(ExampleToken)/gi,function(n){return"ExampleToken"===n?e:ie(e)})})}catch(e){return Promise.reject(e)}}("FlowToken")).then(function(r){var t=b(r,S);return H({code:t,args:[[e,s.Address],[n,s.UFix64]]})})}catch(e){return Promise.reject(e)}},le=function(){try{return Promise.resolve(n().get("SERVICE_ADDRESS")).then(R)}catch(e){return Promise.reject(e)}},de=function(){try{return Promise.resolve(le()).then(function(e){return Promise.resolve(function(e){void 0===e&&(e={});try{return Promise.resolve(u()).then(function(n){var r=p({},n,e);return l(V,r,"checkManager =>"),d(V,r)})}catch(e){return Promise.reject(e)}}({FlowManager:e})).then(function(e){var n=function(n,r){try{var t=Promise.resolve(L({code:e})).then(function(){})}catch(e){return r()}return t&&t.then?t.then(void 0,r):t}(0,function(){return Promise.resolve(function(){try{return Promise.resolve(ae.initManagerTemplate()).then(function(e){return Promise.resolve(function(e){void 0===e&&(e={});try{return Promise.resolve(u()).then(function(n){var r=p({},n,e);return l(K,r,"FlowManager =>"),d(K,r)})}catch(e){return Promise.reject(e)}}()).then(function(n){var r=ve(n);return Promise.resolve(H({code:e,args:[[r,s.String]]})).then(function(){})})})}catch(e){return Promise.reject(e)}}()).then(function(){})});return n&&n.then?n.then(function(){return le()}):le()})})}catch(e){return Promise.reject(e)}};function fe(e,n){try{var r=e()}catch(e){return n(e)}return r&&r.then?r.then(void 0,n):r}var me=function(e){try{var r=e||"deployment-account-"+(Math.random()*Math.pow(10,8)).toFixed(0);return Promise.resolve(de()).then(function(e){function t(){var t=function(){if(null===o){var t=fe(function(){return Promise.resolve(ae.createAccountTemplate(a)).then(function(t){return Promise.resolve(function(){try{var e=C.keyFromPrivate,r=Buffer,t=r.from;return Promise.resolve(n().get("PRIVATE_KEY")).then(function(n){var o=e.call(C,t.call(r,n,"hex")).getPublic("hex").replace(/^04/,"");return i.encode([Buffer.from(o,"hex"),2,3,1e3]).toString("hex")})}catch(e){return Promise.reject(e)}}()).then(function(n){return Promise.resolve(H({code:t,args:[[r,n,s.String],[e,s.Address]]})).then(function(e){var n=e.events.find(function(e){return e.type.includes("AccountAdded")});o=n.data.address})})})},function(e){console.error(e)});if(t&&t.then)return t.then(function(){})}}();return t&&t.then?t.then(function(){return o}):o}var o,a={FlowManager:e},c=fe(function(){return Promise.resolve(function(e){void 0===e&&(e={});try{return Promise.resolve(u()).then(function(n){var r=p({},n,e);return l(G,r,"getAccountAddress =>"),d(G,r)})}catch(e){return Promise.reject(e)}}(a)).then(function(n){return Promise.resolve(L({code:n,args:[[r,s.String],[e,s.Address]]})).then(function(e){o=e})})},function(e){console.error("failed to get account address:",e)});return c&&c.then?c.then(t):t()})}catch(e){return Promise.reject(e)}},ge=oe.updateContractTemplate,he=oe.deployContractTemplate,ve=function(e){return Buffer.from(e,"utf8").toString("hex")},pe=function(e){try{var n=function(e){return Promise.resolve(k({name:t,addressMap:o})).then(function(n){return Pe({to:e,code:n,name:t,args:a,update:i})})},r=e.to,t=e.name,o=e.addressMap,a=e.args,c=e.update,i=void 0!==c&&c;return Promise.resolve(r?n(r):Promise.resolve(me()).then(n))}catch(e){return Promise.reject(e)}},Pe=function(e){try{var n=function(e){return Promise.resolve(le()).then(function(n){var r=ve(t),i={FlowManager:n};return Promise.resolve(c?ge(i):he(i)).then(function(t){var c=[[o,r,s.String],[n,s.Address]];if(a){c=c.concat(a);var i=0,u=[],l=a.reduce(function(e,n){var r=I(n,function(e,n){var r="abcdefghijklmnopqrstuvwxyz"[i];return i+=1,u.push(r),r+":"+n.label});return[].concat(e,r)},[]);t=(t=t.replace("##ARGS-WITH-TYPES##",", "+l)).replace("##ARGS-LIST##",u)}else t=(t=t.replace("##ARGS-WITH-TYPES##","")).replace("##ARGS-LIST##","");return H({code:t,args:c,signers:[e]})})})},r=e.to,t=e.code,o=e.name,a=e.args,c=e.update;return Promise.resolve(r?n(r):Promise.resolve(me()).then(n))}catch(e){return Promise.reject(e)}},Ae=function(e,n){void 0===n&&(n=!1);try{if(n){var r=S[e];if(void 0!==r)return Promise.resolve(r)}return Promise.resolve(de()).then(function(n){var r,t={FlowManager:n},o=function(o,a){try{var c=Promise.resolve(function(e){void 0===e&&(e={});try{return Promise.resolve(u()).then(function(n){var r=p({},n,e);return l(z,r,"getContractAddress =>"),d(z,r)})}catch(e){return Promise.reject(e)}}(t)).then(function(t){return Promise.resolve(L({code:t,args:[[e,s.String],[n,s.Address]]})).then(function(e){r=e})})}catch(e){return a(e)}return c&&c.then?c.then(void 0,a):c}(0,function(e){console.error("failed to get account address:",e)});return o&&o.then?o.then(function(){return r}):r})}catch(e){return Promise.reject(e)}},Me=global.expect,ye=function(e){try{var n,r=function(r){return n?r:Promise.resolve(e)},t=function(){if("function"==typeof e)return n=1,Promise.resolve(e())}();return Promise.resolve(t&&t.then?t.then(r):r(t))}catch(e){return Promise.reject(e)}},be=function(e){try{var n=ye(e);return Promise.resolve(Me(n).resolves.not.toBe(null)).then(function(){return Promise.resolve(Me(n).resolves.not.toThrow()).then(function(){return n.then(function(e){var n=e.errorMessage;Me(e.status).toBe(4),Me(n).toBe("")}),n})})}catch(e){return Promise.reject(e)}},Se=function(e){try{var n=ye(e);return Promise.resolve(Me(n).resolves.not.toThrow()).then(function(){return n})}catch(e){return Promise.reject(e)}},we=function(e){try{var n=ye(e);return Promise.resolve(Me(n).rejects.not.toBe(null)).then(function(){})}catch(e){return Promise.reject(e)}},Te=function(e){try{var n=ye(e);return Promise.resolve(Me(n).rejects.not.toBe(null)).then(function(){return Promise.resolve(Me(n).rejects.toThrow()).then(function(){})})}catch(e){return Promise.reject(e)}},xe=require("child_process").spawn,ke=new(function(){function e(){this.initialized=!1,this.logging=!0}var n=e.prototype;return n.setLogging=function(e){this.logging=e},n.log=function(e,n){void 0===n&&(n="log"),this.logging&&console[n](e)},n.start=function(e,n){void 0===e&&(e=8080),void 0===n&&(n=!1);try{var r=this,t=e-8080+3569;return r.logging=n,r.process=xe("flow",["emulator","-v","--http-port",e,"--port",t]),Promise.resolve(new Promise(function(e,n){r.process.stdout.on("data",function(n){r.log("LOG: "+n),n.includes("Starting HTTP server")&&(r.log("EMULATOR IS UP! Listening for events!"),r.initialized=!0,e(!0))}),r.process.stderr.on("data",function(e){r.log("stderr: "+e,"error"),r.initialized=!1,n()}),r.process.on("close",function(n){r.log("emulator exited with code "+n),r.initialized=!1,e(!0)})}))}catch(e){return Promise.reject(e)}},n.stop=function(){try{var e=this;return Promise.resolve(new Promise(function(n){e.process.kill(),setTimeout(function(){e.initialized=!1,n(!0)},0)}))}catch(e){return Promise.reject(e)}},e}());export{Pe as deployContract,pe as deployContractByName,ke as emulator,L as executeScript,y as extractImports,me as getAccountAddress,h as getConfigValue,Ae as getContractAddress,k as getContractCode,se as getFlowBalance,F as getScriptCode,x as getTemplate,j as getTransactionCode,v as init,ue as mintFlow,ye as promise,b as replaceImportAddresses,H as sendTransaction,g as set,be as shallPass,Se as shallResolve,we as shallRevert,Te as shallThrow};
//# sourceMappingURL=index.module.js.map
