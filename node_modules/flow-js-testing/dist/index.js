var e=require("@onflow/fcl-config"),r=require("@onflow/config"),n=require("fs"),t=require("path"),o=require("@onflow/fcl"),a=require("elliptic"),c=require("sha3"),s=require("rlp"),i=require("@onflow/types"),u=require("flow-cadut");function l(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}function d(e){if(e&&e.__esModule)return e;var r=Object.create(null);return e&&Object.keys(e).forEach(function(n){if("default"!==n){var t=Object.getOwnPropertyDescriptor(e,n);Object.defineProperty(r,n,t.get?t:{enumerable:!0,get:function(){return e[n]}})}}),r.default=e,r}var g=l(n),m=l(t),f=d(o),p=d(s),h=d(i),v=function e(r,n,t){if("string"==typeof n)return e(r,n.split("/"),t);if(!n.length)return r;try{var o=n[0],a=n.slice(1);return e(r[o],a,t)}catch(e){return t}},P=function(n,t,o,a){r.config().put(n,t||v(e.flowConfig(),o,a))};function M(){return(M=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var n=arguments[r];for(var t in n)Object.prototype.hasOwnProperty.call(n,t)&&(e[t]=n[t])}return e}).apply(this,arguments)}var A=/(\s*import\s*)([\w\d]+)(\s+from\s*)([\w\d".\\/]+)/g,y=function(e){return e.split(/\s/).map(function(e){return e.replace(/\s/g,"")}).filter(function(e){return e.length>0&&"import"!==e&&"from"!==e})},x=function(e,r){return e[r[0]]=r[1],e},b=function(e,r,n){return void 0===n&&(n=!0),e.replace(A,function(e,t,o,a,c){var s=n?o:c;return""+t+o+" from "+(r instanceof Function?r(s):r[s])})},S={FlowToken:"0x0ae53cb6e3f42a79",FungibleToken:"0xee82856bf20e2aa6",FlowFees:"0xe5a8b7f23e8b548f",FlowStorageFees:"0xf8d6e0586b0a20c7"},w={"0xe5a8b7f23e8b548f":"0xe5a8b7f23e8b548f","0xf8d6e0586b0a20c7":"0xf8d6e0586b0a20c7","0x0ae53cb6e3f42a79":"0x0ae53cb6e3f42a79","0xee82856bf20e2aa6":"0xee82856bf20e2aa6"},T=function(e,n){void 0===n&&(n="./transactions/");try{return Promise.resolve(r.config().get("BASE_PATH")).then(function(r){return m.default.resolve(r,n+"/"+e+".cdc")})}catch(e){return Promise.reject(e)}},j=function(e,r,n){void 0===r&&(r={}),void 0===n&&(n=!1);var t=function(e){return g.default.readFileSync(e,"utf8")}(e);return r?b(t,M({},n?w:S,r)):t},k=function(e){var r=e.name,n=e.addressMap;try{return Promise.resolve(T(r,"./contracts/")).then(function(e){return j(e,n)})}catch(e){return Promise.reject(e)}},E=function(e){var r=e.name,n=e.addressMap;try{return Promise.resolve(T(r,"./transactions/")).then(function(e){return j(e,n)})}catch(e){return Promise.reject(e)}},F=function(e){var r=e.name,n=e.addressMap;try{return Promise.resolve(T(r,"./scripts/")).then(function(e){return j(e,n)})}catch(e){return Promise.reject(e)}},I=function(e){return null==e?null:e.replace(/^0x/,"")},C=function(e){return null==e?null:"0x"+I(e)},R=new a.ec("p256"),B=function(e,n){return void 0===n&&(n=0),function(t){void 0===t&&(t={});try{return Promise.resolve(r.config().get("SERVICE_ADDRESS")).then(function(o){return Promise.resolve(r.config().get("PRIVATE_KEY")).then(function(r){return e=I(e||o),M({},t,{tempId:e+"-"+n,addr:f.sansPrefix(e),keyId:n,signingFunction:function(t){try{return Promise.resolve({keyId:n,addr:C(e),signature:(o=r,a=t.message,s=R.keyFromPrivate(Buffer.from(o,"hex")).sign(function(e){var r=new c.SHA3(256);return r.update(Buffer.from(e,"hex")),r.digest()}(a)),i=s.r.toArrayLike(Buffer,"be",32),u=s.s.toArrayLike(Buffer,"be",32),Buffer.concat([i,u]).toString("hex"))})}catch(e){return Promise.reject(e)}var o,a,s,i,u}})})})}catch(e){return Promise.reject(e)}}},D=function(e,r){var n=e[e.length-1];return e.slice(0,-1).map(function(e){return r(e,n)})},_=function(e){return e.reduce(function(e,r){var n=D(r,function(e,r){return f.arg(e,r)});return[].concat(e,n)},[])},O=function(e){return function(r){try{var n,t,o,a,c,s=function(){return{code:n,signers:o,args:a}};if("object"==typeof(p=r[0])&&null!==p){var i=r[0],u=i.name,l=i.addressMap,d=i.code,g=i.args,m=i.signers;if(!u&&!d)throw Error("Both `name` and `code` are missing. Provide either of them");t=u,c=l||{},n=d,o=m,a=g}else t=r[0],o=r[2],c=r[1]||{};var f=function(){if(t)return Promise.resolve(("script"===e?F:E)({name:t,addressMap:c})).then(function(e){n=e})}();return Promise.resolve(f&&f.then?f.then(s):s())}catch(e){return Promise.reject(e)}var p}},H=function(){try{var e=arguments,r=O("tx");return Promise.resolve(r([].slice.call(e))).then(function(e){var r=e.code,n=e.args,t=e.signers,o=B(),a=[f.transaction(r),f.payer(o),f.proposer(o),f.limit(999)];if(t){var c=t.map(function(e){return B(e)});a.push(f.authorizations(c))}else a.push(f.authorizations([o]));return n&&a.push(f.args(_(n))),Promise.resolve(f.send(a)).then(function(e){return Promise.resolve(f.tx(e).onceExecuted())})})}catch(e){return Promise.reject(e)}},q=function(){try{var e=arguments,r=O("script");return Promise.resolve(r([].slice.call(e))).then(function(e){var r=e.args,n=[f.script(e.code)];return r&&n.push(f.args(_(r))),Promise.resolve(f.send(n)).then(function(e){return f.decode(e)})})}catch(e){return Promise.reject(e)}},L="\n  pub contract FlowManager {\n\n    pub event AccountAdded(address: Address)\n\n    pub struct Mapper {\n        pub let accounts: {String: Address}\n\n        pub fun getAddress(_ name: String): Address? {\n            return self.accounts[name]\n        }\n\n        pub fun setAddress(_ name: String, address: Address){\n            self.accounts[name] = address\n            emit FlowManager.AccountAdded(address: address)\n        }\n\n        init(){\n            self.accounts = {}\n        }\n    }\n\n    pub let accountManagerStorage: StoragePath\n    pub let contractManagerStorage: StoragePath\n    pub let accountManagerPath: PublicPath\n    pub let contractManagerPath: PublicPath\n\n    init(){\n        let accountManager = Mapper()\n        let contractManager = Mapper()\n\n        self.accountManagerStorage = /storage/testSuitAccountManager\n        self.contractManagerStorage = /storage/testSuitContractManager\n\n        self.accountManagerPath = /public/testSuitAccountManager\n        self.contractManagerPath = /public/testSuitContractManager\n        \n        // Destroy previously stored values\n        self.account.load<Mapper>(from: self.accountManagerStorage)\n        self.account.load<Mapper>(from: self.contractManagerStorage)\n\n        self.account.save(accountManager, to: self.accountManagerStorage)\n        self.account.save(contractManager, to: self.contractManagerStorage)\n\n        self.account.link<&Mapper>(self.accountManagerPath, target: self.accountManagerStorage)\n        self.account.link<&Mapper>(self.contractManagerPath, target: self.contractManagerStorage)\n    }\n}\n \n",V="\n  import FlowManager from 0x01\n\npub fun main(){\n    // the body can be empty. The script will throw error if FlowManager is not\n    // added to service address\n}\n\n",K="\n  import FlowManager from 0x01\n\npub fun main(name: String, managerAccount: Address):Address? {\n    let manager = getAccount(managerAccount)\n    let linkPath = FlowManager.accountManagerPath\n    let accountManager = manager\n                        .getCapability(linkPath)\n                        .borrow<&FlowManager.Mapper>()!\n\n    return accountManager.getAddress(name)\n\n}\n",G='\n  // This script reads the balance field of an account\'s FlowToken Balance\n\nimport FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport ExampleToken from 0xTOKENADDRESS\n\npub fun main(account: Address): UFix64 {\n    let acct = getAccount(account)\n    let vaultRef = acct.getCapability(/public/exampleTokenBalance)!.borrow<&ExampleToken.Vault{FungibleToken.Balance}>()\n        ?? panic("Could not borrow Balance reference to the Vault")\n\n    return vaultRef.balance\n}\n',N="\n  import FlowManager from 0x01\n\npub fun main(name: String, managerAccount: Address):Address? {\n    let manager = getAccount(managerAccount)\n    let linkPath = FlowManager.contractManagerPath\n    let contractManager = manager\n                        .getCapability(linkPath)\n                        .borrow<&FlowManager.Mapper>()!\n\n    return contractManager.getAddress(name)\n\n}\n",z="\n  import FlowManager from 0x01\n\ntransaction (_ name: String, pubKey: String, manager: Address) {\n    prepare( admin: AuthAccount) {\n        let newAccount = AuthAccount(payer:admin)\n        newAccount.addPublicKey(pubKey.decodeHex())\n\n        let linkPath = FlowManager.accountManagerPath\n        let accountManager = getAccount(manager)\n                            .getCapability(linkPath)!\n                            .borrow<&FlowManager.Mapper>()!\n        \n        // Create a record in account database\n        let address = newAccount.address\n        accountManager.setAddress(name, address: address)\n    }\n}\n \n",U=function(e){void 0===e&&(e={});try{return Promise.resolve(u.getEnvironment()).then(function(r){var n=M({},r,e);return u.reportMissingImports(z,n,"createAccount =>"),u.replaceImportAddresses(z,n)})}catch(e){return Promise.reject(e)}},Y="\n  import FlowManager from 0x01\n\ntransaction(name:String, code: String, manager: Address ##ARGS-WITH-TYPES##) {\n    prepare(acct: AuthAccount){\n        let decoded = code.decodeHex()\n        acct.contracts.add(\n           name: name,\n           code: decoded,\n           ##ARGS-LIST##\n        )\n\n        let linkPath = FlowManager.contractManagerPath\n        let contractManager = getAccount(manager)\n                    .getCapability(linkPath)!\n                    .borrow<&FlowManager.Mapper>()!\n\n        let address = acct.address\n        contractManager.setAddress(name, address: address)\n    }\n}\n",W=function(e){void 0===e&&(e={});try{return Promise.resolve(u.getEnvironment()).then(function(r){var n=M({},r,e);return u.reportMissingImports(Y,n,"deployContract =>"),u.replaceImportAddresses(Y,n)})}catch(e){return Promise.reject(e)}},J='\n  transaction ( code: String ) {\n    prepare( admin: AuthAccount) {\n        admin.contracts.add(\n           name: "FlowManager",\n           code: code.decodeHex(),\n        )\n   }\n}\n\n',Q=function(e){void 0===e&&(e={});try{return Promise.resolve(u.getEnvironment()).then(function(r){var n=M({},r,e);return u.reportMissingImports(J,n,"initManager =>"),u.replaceImportAddresses(J,n)})}catch(e){return Promise.reject(e)}},X='\n  import FungibleToken from 0xFUNGIBLETOKENADDRESS\nimport ExampleToken from 0xTOKENADDRESS\n\ntransaction(recipient: Address, amount: UFix64) {\n    let tokenAdmin: &ExampleToken.Administrator\n    let tokenReceiver: &{FungibleToken.Receiver}\n\n    prepare(signer: AuthAccount) {\n        self.tokenAdmin = signer\n        .borrow<&ExampleToken.Administrator>(from: /storage/exampleTokenAdmin)\n        ?? panic("Signer is not the token admin")\n\n        self.tokenReceiver = getAccount(recipient)\n        .getCapability(/public/exampleTokenReceiver)!\n        .borrow<&{FungibleToken.Receiver}>()\n        ?? panic("Unable to borrow receiver reference")\n    }\n\n    execute {\n        let minter <- self.tokenAdmin.createNewMinter(allowedAmount: amount)\n        let mintedVault <- minter.mintTokens(amount: amount)\n\n        self.tokenReceiver.deposit(from: <-mintedVault)\n\n        destroy minter\n    }\n}\n\n',Z=function(e){void 0===e&&(e={});try{return Promise.resolve(u.getEnvironment()).then(function(r){var n=M({},r,e);return u.reportMissingImports(X,n,"mintTokens =>"),u.replaceImportAddresses(X,n)})}catch(e){return Promise.reject(e)}},$="\n  import FlowManager from 0x01\n\ntransaction(name: String, address: Address) {\n    prepare(signer: AuthAccount){\n        let linkPath = FlowManager.contractManagerPath\n        let contractManager = signer\n                                .getCapability(linkPath)!\n                                .borrow<&FlowManager.Mapper>()!\n        contractManager.setAddress(name, address: address)\n    }\n}\n",ee=function(e){void 0===e&&(e={});try{return Promise.resolve(u.getEnvironment()).then(function(r){var n=M({},r,e);return u.reportMissingImports($,n,"registerContract =>"),u.replaceImportAddresses($,n)})}catch(e){return Promise.reject(e)}},re="\n  transaction{\n    prepare(acct: AuthAccount){\n        log(acct.address)\n    }\n}\n",ne=function(e){void 0===e&&(e={});try{return Promise.resolve(u.getEnvironment()).then(function(r){var n=M({},r,e);return u.reportMissingImports(re,n,"scratch =>"),u.replaceImportAddresses(re,n)})}catch(e){return Promise.reject(e)}},te="\n  import FlowManager from 0x01\n\ntransaction(name:String, code: String, manager: Address ##ARGS-WITH-TYPES##) {\n    prepare(acct: AuthAccount){\n        let decoded = code.decodeHex()\n\n        if acct.contracts.get(name: name) == nil {\n          acct.contracts.add(name: name, code: decoded)\n        } else {\n          acct.contracts.update__experimental(name: name, code: decoded)\n        }\n\n        let linkPath = FlowManager.contractManagerPath\n        let contractManager = getAccount(manager)\n                    .getCapability(linkPath)!\n                    .borrow<&FlowManager.Mapper>()!\n\n        let address = acct.address\n        contractManager.setAddress(name, address: address)\n    }\n}\n\n",oe=function(e){void 0===e&&(e={});try{return Promise.resolve(u.getEnvironment()).then(function(r){var n=M({},r,e);return u.reportMissingImports(te,n,"updateContract =>"),u.replaceImportAddresses(te,n)})}catch(e){return Promise.reject(e)}},ae={createAccount:function e(r){var n=r.addressMap,t=void 0===n?{}:n,o=r.args,a=void 0===o?[]:o,c=r.signers,s=void 0===c?[]:c;try{return Promise.resolve(U(t)).then(function(r){return u.reportMissing("arguments",a.length,3,e),u.reportMissing("signers",s.length,1,e),H({code:r,args:a,signers:s})})}catch(e){return Promise.reject(e)}},createAccountTemplate:U,deployContract:function e(r){var n=r.addressMap,t=void 0===n?{}:n,o=r.args,a=void 0===o?[]:o,c=r.signers,s=void 0===c?[]:c;try{return Promise.resolve(W(t)).then(function(r){return u.reportMissing("arguments",a.length,3,e),u.reportMissing("signers",s.length,1,e),H({code:r,args:a,signers:s})})}catch(e){return Promise.reject(e)}},deployContractTemplate:W,initManager:function e(r){var n=r.addressMap,t=void 0===n?{}:n,o=r.args,a=void 0===o?[]:o,c=r.signers,s=void 0===c?[]:c;try{return Promise.resolve(Q(t)).then(function(r){return u.reportMissing("arguments",a.length,1,e),u.reportMissing("signers",s.length,1,e),H({code:r,args:a,signers:s})})}catch(e){return Promise.reject(e)}},initManagerTemplate:Q,mintTokens:function e(r){var n=r.addressMap,t=void 0===n?{}:n,o=r.args,a=void 0===o?[]:o,c=r.signers,s=void 0===c?[]:c;try{return Promise.resolve(Z(t)).then(function(r){return u.reportMissing("arguments",a.length,2,e),u.reportMissing("signers",s.length,1,e),H({code:r,args:a,signers:s})})}catch(e){return Promise.reject(e)}},mintTokensTemplate:Z,registerContract:function e(r){var n=r.addressMap,t=void 0===n?{}:n,o=r.args,a=void 0===o?[]:o,c=r.signers,s=void 0===c?[]:c;try{return Promise.resolve(ee(t)).then(function(r){return u.reportMissing("arguments",a.length,2,e),u.reportMissing("signers",s.length,1,e),H({code:r,args:a,signers:s})})}catch(e){return Promise.reject(e)}},registerContractTemplate:ee,scratch:function e(r){var n=r.addressMap,t=void 0===n?{}:n,o=r.args,a=void 0===o?[]:o,c=r.signers,s=void 0===c?[]:c;try{return Promise.resolve(ne(t)).then(function(r){return u.reportMissing("arguments",a.length,0,e),u.reportMissing("signers",s.length,1,e),H({code:r,args:a,signers:s})})}catch(e){return Promise.reject(e)}},scratchTemplate:ne,updateContract:function e(r){var n=r.addressMap,t=void 0===n?{}:n,o=r.args,a=void 0===o?[]:o,c=r.signers,s=void 0===c?[]:c;try{return Promise.resolve(oe(t)).then(function(r){return u.reportMissing("arguments",a.length,3,e),u.reportMissing("signers",s.length,1,e),H({code:r,args:a,signers:s})})}catch(e){return Promise.reject(e)}},updateContractTemplate:oe},ce=ae,se={ExampleToken:S.FlowToken},ie=function(e){return e[0].toLowerCase()+e.slice(1)},ue=function(){try{return Promise.resolve(r.config().get("SERVICE_ADDRESS")).then(C)}catch(e){return Promise.reject(e)}},le=function(){try{return Promise.resolve(ue()).then(function(e){return Promise.resolve(function(e){void 0===e&&(e={});try{return Promise.resolve(u.getEnvironment()).then(function(r){var n=M({},r,e);return u.reportMissingImports(V,n,"checkManager =>"),u.replaceImportAddresses(V,n)})}catch(e){return Promise.reject(e)}}({FlowManager:e})).then(function(e){var r=function(r,n){try{var t=Promise.resolve(q({code:e})).then(function(){})}catch(e){return n()}return t&&t.then?t.then(void 0,n):t}(0,function(){return Promise.resolve(function(){try{return Promise.resolve(ce.initManagerTemplate()).then(function(e){return Promise.resolve(function(e){void 0===e&&(e={});try{return Promise.resolve(u.getEnvironment()).then(function(r){var n=M({},r,e);return u.reportMissingImports(L,n,"FlowManager =>"),u.replaceImportAddresses(L,n)})}catch(e){return Promise.reject(e)}}()).then(function(r){var n=pe(r);return Promise.resolve(H({code:e,args:[[n,h.String]]})).then(function(){})})})}catch(e){return Promise.reject(e)}}()).then(function(){})});return r&&r.then?r.then(function(){return ue()}):ue()})})}catch(e){return Promise.reject(e)}};function de(e,r){try{var n=e()}catch(e){return r(e)}return n&&n.then?n.then(void 0,r):n}var ge=function(e){try{var n=e||"deployment-account-"+(Math.random()*Math.pow(10,8)).toFixed(0);return Promise.resolve(le()).then(function(e){function t(){var t=function(){if(null===o){var t=de(function(){return Promise.resolve(ce.createAccountTemplate(a)).then(function(t){return Promise.resolve(function(){try{var e=R.keyFromPrivate,n=Buffer,t=n.from;return Promise.resolve(r.config().get("PRIVATE_KEY")).then(function(r){var o=e.call(R,t.call(n,r,"hex")).getPublic("hex").replace(/^04/,"");return p.encode([Buffer.from(o,"hex"),2,3,1e3]).toString("hex")})}catch(e){return Promise.reject(e)}}()).then(function(r){return Promise.resolve(H({code:t,args:[[n,r,h.String],[e,h.Address]]})).then(function(e){var r=e.events.find(function(e){return e.type.includes("AccountAdded")});o=r.data.address})})})},function(e){console.error(e)});if(t&&t.then)return t.then(function(){})}}();return t&&t.then?t.then(function(){return o}):o}var o,a={FlowManager:e},c=de(function(){return Promise.resolve(function(e){void 0===e&&(e={});try{return Promise.resolve(u.getEnvironment()).then(function(r){var n=M({},r,e);return u.reportMissingImports(K,n,"getAccountAddress =>"),u.replaceImportAddresses(K,n)})}catch(e){return Promise.reject(e)}}(a)).then(function(r){return Promise.resolve(q({code:r,args:[[n,h.String],[e,h.Address]]})).then(function(e){o=e})})},function(e){console.error("failed to get account address:",e)});return c&&c.then?c.then(t):t()})}catch(e){return Promise.reject(e)}},me=ae.updateContractTemplate,fe=ae.deployContractTemplate,pe=function(e){return Buffer.from(e,"utf8").toString("hex")},he=function(e){try{var r=function(e){return Promise.resolve(ue()).then(function(r){var n=pe(t),s={FlowManager:r};return Promise.resolve(c?me(s):fe(s)).then(function(t){var c=[[o,n,h.String],[r,h.Address]];if(a){c=c.concat(a);var s=0,i=[],u=a.reduce(function(e,r){var n=D(r,function(e,r){var n="abcdefghijklmnopqrstuvwxyz"[s];return s+=1,i.push(n),n+":"+r.label});return[].concat(e,n)},[]);t=(t=t.replace("##ARGS-WITH-TYPES##",", "+u)).replace("##ARGS-LIST##",i)}else t=(t=t.replace("##ARGS-WITH-TYPES##","")).replace("##ARGS-LIST##","");return H({code:t,args:c,signers:[e]})})})},n=e.to,t=e.code,o=e.name,a=e.args,c=e.update;return Promise.resolve(n?r(n):Promise.resolve(ge()).then(r))}catch(e){return Promise.reject(e)}},ve=global.expect,Pe=function(e){try{var r,n=function(n){return r?n:Promise.resolve(e)},t=function(){if("function"==typeof e)return r=1,Promise.resolve(e())}();return Promise.resolve(t&&t.then?t.then(n):n(t))}catch(e){return Promise.reject(e)}},Me=require("child_process").spawn,Ae=new(function(){function e(){this.initialized=!1,this.logging=!0}var r=e.prototype;return r.setLogging=function(e){this.logging=e},r.log=function(e,r){void 0===r&&(r="log"),this.logging&&console[r](e)},r.start=function(e,r){void 0===e&&(e=8080),void 0===r&&(r=!1);try{var n=this,t=e-8080+3569;return n.logging=r,n.process=Me("flow",["emulator","-v","--http-port",e,"--port",t]),Promise.resolve(new Promise(function(e,r){n.process.stdout.on("data",function(r){n.log("LOG: "+r),r.includes("Starting HTTP server")&&(n.log("EMULATOR IS UP! Listening for events!"),n.initialized=!0,e(!0))}),n.process.stderr.on("data",function(e){n.log("stderr: "+e,"error"),n.initialized=!1,r()}),n.process.on("close",function(r){n.log("emulator exited with code "+r),n.initialized=!1,e(!0)})}))}catch(e){return Promise.reject(e)}},r.stop=function(){try{var e=this;return Promise.resolve(new Promise(function(r){e.process.kill(),setTimeout(function(){e.initialized=!1,r(!0)},0)}))}catch(e){return Promise.reject(e)}},e}());exports.deployContract=he,exports.deployContractByName=function(e){try{var r=function(e){return Promise.resolve(k({name:t,addressMap:o})).then(function(r){return he({to:e,code:r,name:t,args:a,update:s})})},n=e.to,t=e.name,o=e.addressMap,a=e.args,c=e.update,s=void 0!==c&&c;return Promise.resolve(n?r(n):Promise.resolve(ge()).then(r))}catch(e){return Promise.reject(e)}},exports.emulator=Ae,exports.executeScript=q,exports.extractImports=function(e){return e&&0!==e.length?e.split("\n").filter(function(e){return e.includes("import")}).map(y).reduce(x,{}):{}},exports.getAccountAddress=ge,exports.getConfigValue=function(e){try{return Promise.resolve(r.config().get(e))}catch(e){return Promise.reject(e)}},exports.getContractAddress=function(e,r){void 0===r&&(r=!1);try{if(r){var n=S[e];if(void 0!==n)return Promise.resolve(n)}return Promise.resolve(le()).then(function(r){var n,t={FlowManager:r},o=function(o,a){try{var c=Promise.resolve(function(e){void 0===e&&(e={});try{return Promise.resolve(u.getEnvironment()).then(function(r){var n=M({},r,e);return u.reportMissingImports(N,n,"getContractAddress =>"),u.replaceImportAddresses(N,n)})}catch(e){return Promise.reject(e)}}(t)).then(function(t){return Promise.resolve(q({code:t,args:[[e,h.String],[r,h.Address]]})).then(function(e){n=e})})}catch(e){return a(e)}return c&&c.then?c.then(void 0,a):c}(0,function(e){console.error("failed to get account address:",e)});return o&&o.then?o.then(function(){return n}):n})}catch(e){return Promise.reject(e)}},exports.getContractCode=k,exports.getFlowBalance=function(e){try{return Promise.resolve(function(e){try{return Promise.resolve(function(e){void 0===e&&(e={});try{return Promise.resolve(u.getEnvironment()).then(function(r){var n=M({},r,e);return u.reportMissingImports(G,n,"getBalance =>"),u.replaceImportAddresses(G,n)})}catch(e){return Promise.reject(e)}}(se)).then(function(r){return r.replace(/(ExampleToken)/gi,function(r){return"ExampleToken"===r?e:ie(e)})})}catch(e){return Promise.reject(e)}}("FlowToken")).then(function(r){var n=b(r,S);return q({code:n,args:[[e,h.Address]]})})}catch(e){return Promise.reject(e)}},exports.getScriptCode=F,exports.getTemplate=j,exports.getTransactionCode=E,exports.init=function(e,n){void 0===n&&(n=8080);try{return P("PRIVATE_KEY",process.env.PK,"accounts/emulator-account/keys"),P("SERVICE_ADDRESS",process.env.SERVICE_ADDRESS,"accounts/emulator-account/address","f8d6e0586b0a20c7"),r.config().put("accessNode.api","http://localhost:"+n),P("BASE_PATH",process.env.BASE_PATH,"resolve/basePath",e),Promise.resolve()}catch(e){return Promise.reject(e)}},exports.mintFlow=function(e,r){try{return Promise.resolve(function(e){try{return Promise.resolve(ce.mintTokensTemplate(se)).then(function(r){return r.replace(/(ExampleToken)/gi,function(r){return"ExampleToken"===r?e:ie(e)})})}catch(e){return Promise.reject(e)}}("FlowToken")).then(function(n){var t=b(n,S);return H({code:t,args:[[e,h.Address],[r,h.UFix64]]})})}catch(e){return Promise.reject(e)}},exports.promise=Pe,exports.replaceImportAddresses=b,exports.sendTransaction=H,exports.set=P,exports.shallPass=function(e){try{var r=Pe(e);return Promise.resolve(ve(r).resolves.not.toBe(null)).then(function(){return Promise.resolve(ve(r).resolves.not.toThrow()).then(function(){return r.then(function(e){var r=e.errorMessage;ve(e.status).toBe(4),ve(r).toBe("")}),r})})}catch(e){return Promise.reject(e)}},exports.shallResolve=function(e){try{var r=Pe(e);return Promise.resolve(ve(r).resolves.not.toThrow()).then(function(){return r})}catch(e){return Promise.reject(e)}},exports.shallRevert=function(e){try{var r=Pe(e);return Promise.resolve(ve(r).rejects.not.toBe(null)).then(function(){})}catch(e){return Promise.reject(e)}},exports.shallThrow=function(e){try{var r=Pe(e);return Promise.resolve(ve(r).rejects.not.toBe(null)).then(function(){return Promise.resolve(ve(r).rejects.toThrow()).then(function(){})})}catch(e){return Promise.reject(e)}};
//# sourceMappingURL=index.js.map
