{"version":3,"file":"sdk.modern.js","sources":["../src/interaction/interaction.js","../src/build/build.js","../src/response/response.js","../src/send/unary.js","../src/send/send-transaction.js","../src/send/send-get-transaction.js","../src/send/send-get-account.js","../src/send/send-get-latest-block.js","../src/send/send-get-block-by-id.js","../src/send/send-get-block-by-height.js","../src/send/sdk-send.js","../src/send/send-get-transaction-status.js","../src/send/send-execute-script.js","../src/send/send-get-events.js","../src/send/send-ping.js","../src/build/build-get-block.js","../src/build/build-get-account.js","../src/decode/decode.js","../src/resolve/resolve-ref-block-id.js","../src/resolve/resolve-cadence.js","../src/resolve/resolve-arguments.js","../src/resolve/resolve-accounts.js","../src/encode/encode.js","../src/resolve/resolve-signatures.js","../src/resolve/resolve-validators.js","../src/resolve/resolve.js","../src/resolve/resolve-final-normalization.js","../src/send/send.js","../src/decode/sdk-decode.js","../src/latest-block/latest-block.js","../src/account/account.js","../src/build/build-authorizations.js","../src/build/build-validator.js","../src/build/build-at-block-height.js","../src/build/build-at-block-id.js","../src/build/build-get-events.js","../src/build/build-get-events-at-block-height-range.js","../src/build/build-get-events-at-block-ids.js","../src/build/build-get-block-header.js","../src/build/build-get-latest-block.js","../src/build/build-get-block-by-id.js","../src/build/build-get-block-by-height.js","../src/build/build-get-transaction-status.js","../src/build/build-get-transaction.js","../src/build/build-limit.js","../src/build/build-params.js","../src/build/build-arguments.js","../src/build/build-proposer.js","../src/build/build-payer.js","../src/build/build-ping.js","../src/build/build-ref.js","../src/build/build-script.js","../src/build/build-transaction.js","../src/build/build-invariant.js","../src/resolve/resolve-params.js"],"sourcesContent":["export const UNKNOWN /*                       */ = \"UNKNOWN\"\nexport const SCRIPT /*                        */ = \"SCRIPT\"\nexport const TRANSACTION /*                   */ = \"TRANSACTION\"\nexport const GET_TRANSACTION_STATUS /*        */ = \"GET_TRANSACTION_STATUS\"\nexport const GET_ACCOUNT /*                   */ = \"GET_ACCOUNT\"\nexport const GET_EVENTS /*                    */ = \"GET_EVENTS\"\nexport const GET_LATEST_BLOCK /*              */ = \"GET_LATEST_BLOCK\"\nexport const PING /*                          */ = \"PING\"\nexport const GET_TRANSACTION /*               */ = \"GET_TRANSACTION\"\nexport const GET_BLOCK_BY_ID /*               */ = \"GET_BLOCK_BY_ID\"\nexport const GET_BLOCK_BY_HEIGHT /*           */ = \"GET_BLOCK_BY_HEIGHT\"\nexport const GET_BLOCK /*                     */ = \"GET_BLOCK\"\nexport const GET_BLOCK_HEADER /*              */ = \"GET_BLOCK_HEADER\"\n\nexport const BAD /* */ = \"BAD\"\nexport const OK /*  */ = \"OK\"\n\nexport const ACCOUNT /* */ = \"ACCOUNT\"\nexport const PARAM /*   */ = \"PARAM\"\nexport const ARGUMENT /**/ = \"ARGUMENT\"\n\nconst ACCT = `{\n  \"kind\":\"${ACCOUNT}\",\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":\"${PARAM}\",\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":\"${ARGUMENT}\",\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst IX = `{\n  \"tag\":\"${UNKNOWN}\",\n  \"assigns\":{},\n  \"status\":\"${OK}\",\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":null,\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null,\n    \"blockIds\":[]\n  },\n  \"transaction\": {\n    \"id\":null\n  },\n  \"block\": {\n    \"id\":null,\n    \"height\":null,\n    \"isSealed\":null\n  },\n  \"account\": {\n    \"addr\":null\n  }\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nconst isArray = (d) => Array.isArray(d)\nconst isObj = (d) => typeof d === \"object\"\nconst isNull = (d) => d == null\nconst isNumber = (d) => d === \"number\"\nconst isFn = (d) => typeof d === \"function\"\n\nconst CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\")\nconst randChar = () => CHARS[~~(Math.random() * CHARS.length)]\nexport const uuid = () => Array.from({length: 10}, randChar).join(\"\")\n\nexport const isInteraction = (ix) => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = (ix) => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = (wat) => (ix) => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nconst makeAccount = (acct, tempId) => (ix) => {\n  ix.accounts[tempId] = JSON.parse(ACCT)\n  ix.accounts[tempId].tempId = tempId\n  ix.accounts[tempId].addr = acct.addr\n  ix.accounts[tempId].keyId = acct.keyId\n  ix.accounts[tempId].sequenceNum = acct.sequenceNum\n  ix.accounts[tempId].signature = acct.signature\n  ix.accounts[tempId].signingFunction = acct.signingFunction\n  ix.accounts[tempId].resolve = acct.resolve\n  ix.accounts[tempId].role = {\n    ...ix.accounts[tempId].role,\n    ...acct.role,\n  }\n  return Ok(ix)\n}\n\nexport const makeAuthorizer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.authorizations.push(tempId)\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makeProposer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.proposer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makePayer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.payer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n} \n\nexport const makeParam = (param) => (ix) => {\n  let tempId = uuid()\n  ix.message.params.push(tempId)\n\n  ix.params[tempId] = JSON.parse(PRM)\n  ix.params[tempId].tempId = tempId\n  ix.params[tempId].key = param.key\n  ix.params[tempId].value = param.value\n  ix.params[tempId].asParam = param.asParam\n  ix.params[tempId].xform = param.xform\n  ix.params[tempId].resolve = param.resolve\n  return Ok(ix)\n}\n\nexport const makeArgument = (arg) => (ix) => {\n  let tempId = uuid()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  return Ok(ix)\n}\n\nexport const makeUnknown /*                 */ = makeIx(UNKNOWN)\nexport const makeScript /*                  */ = makeIx(SCRIPT)\nexport const makeTransaction /*             */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*    */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetTransaction /*          */ = makeIx(GET_TRANSACTION)\nexport const makeGetAccount /*              */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*               */ = makeIx(GET_EVENTS)\nexport const makeGetLatestBlock /*          */ = makeIx(GET_LATEST_BLOCK)\nexport const makeGetBlockById /*            */ = makeIx(GET_BLOCK_BY_ID)\nexport const makeGetBlockByHeight /*        */ = makeIx(GET_BLOCK_BY_HEIGHT)\nexport const makePing /*                    */ = makeIx(PING)\nexport const makeGetBlock /*                */ = makeIx(GET_BLOCK)\nexport const makeGetBlockHeader /*          */ = makeIx(GET_BLOCK_HEADER)\n\nconst is = (wat) => (ix) => ix.tag === wat\n\nexport const isUnknown /*                 */ = is(UNKNOWN)\nexport const isScript /*                  */ = is(SCRIPT)\nexport const isTransaction /*             */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*    */ = is(GET_TRANSACTION_STATUS)\nexport const isGetTransaction /*          */ = is(GET_TRANSACTION)\nexport const isGetAccount /*              */ = is(GET_ACCOUNT)\nexport const isGetEvents /*               */ = is(GET_EVENTS)\nexport const isGetLatestBlock /*          */ = is(GET_LATEST_BLOCK)\nexport const isGetBlockById /*            */ = is(GET_BLOCK_BY_ID)\nexport const isGetBlockByHeight /*        */ = is(GET_BLOCK_BY_HEIGHT)\nexport const isPing /*                    */ = is(PING)\nexport const isGetBlock /*                */ = is(GET_BLOCK)\nexport const isGetBlockHeader /*          */ = is(GET_BLOCK_HEADER)\n\nexport const isOk /*  */ = (ix) => ix.status === OK\nexport const isBad /* */ = (ix) => ix.status === BAD\nexport const why /*   */ = (ix) => ix.reason\n\nexport const isAccount /*  */ = (account) => account.kind === ACCOUNT\nexport const isParam /*    */ = (param) => param.kind === PARAM\nexport const isArgument /* */ = (argument) => argument.kind === ARGUMENT\n\nconst hardMode = (ix) => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  try {\n    ix = hardMode(await ix)\n    if (isBad(ix)) throw new Error(`Interaction Error: ${ix.reason}`)\n    if (!fns.length) return ix\n    const [hd, ...rest] = fns\n    const cur = await hd\n    if (isFn(cur)) return recPipe(cur(ix), rest)\n    if (isNull(cur) || !cur) return recPipe(ix, rest)\n    if (isInteraction(cur)) return recPipe(cur, rest)\n    throw new Error(\"Invalid Interaction Composition\")\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return (d) => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = (v) => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => (ix) => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => (ix) => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = (key) => (ix) => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n","import {pipe, interaction} from \"../interaction/interaction.js\"\n\nexport function build(fns = []) {\n  return pipe(interaction(), fns)\n}\n","const DEFAULT_RESPONSE =\n'{\"tag\": 0, \"transaction\":null, \"transactionId\":null, \"encodedData\":null, \"events\": null, \"account\": null}'\n\nexport const response = () => JSON.parse(DEFAULT_RESPONSE)\n","import {grpc} from \"@improbable-eng/grpc-web\"\nimport {NodeHttpTransport} from \"@improbable-eng/grpc-web-node-http-transport\"\n\ngrpc.setDefaultTransport(NodeHttpTransport())\n\nexport async function unary(host, method, request) {\n  return new Promise((resolve, reject) => {\n    grpc.unary(method, {\n      request: request,\n      host: host,\n      onEnd: ({status, statusMessage, message}) => {\n        if (status === grpc.Code.OK) {\n          resolve(message)\n        } else {\n          reject(new Error(statusMessage))\n        }\n      },\n    })\n  })\n}\n","import {AccessAPI, Transaction, SendTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nexport async function sendTransaction(ix, opts = {}) {\n  ix = await ix\n\n  const tx = new Transaction()\n  tx.setScript(scriptBuffer(ix.message.cadence))\n  tx.setGasLimit(ix.message.computeLimit)\n  tx.setReferenceBlockId(\n    ix.message.refBlock ? hexBuffer(ix.message.refBlock) : null\n  )\n  tx.setPayer(addressBuffer(sansPrefix(ix.accounts[ix.payer].addr)))\n  ix.message.arguments.forEach(arg =>\n    tx.addArguments(argumentBuffer(ix.arguments[arg].asArgument))\n  )\n  ix.authorizations\n    .map(tempId => ix.accounts[tempId].addr)\n    .reduce((prev, current) => {\n      return prev.find(item => item === current) ? prev : [...prev, current]\n    }, [])\n    .forEach(addr => tx.addAuthorizers(addressBuffer(sansPrefix(addr))))\n\n  const proposalKey = new Transaction.ProposalKey()\n  proposalKey.setAddress(\n    addressBuffer(sansPrefix(ix.accounts[ix.proposer].addr))\n  )\n  proposalKey.setKeyId(ix.accounts[ix.proposer].keyId)\n  proposalKey.setSequenceNumber(ix.accounts[ix.proposer].sequenceNum)\n\n  tx.setProposalKey(proposalKey)\n\n  // Apply Non Payer Signatures to Payload Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addPayloadSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying payload signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addEnvelopeSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying envelope signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  const req = new SendTransactionRequest()\n  req.setTransaction(tx)\n\n  var t1 = Date.now()\n  const res = await unary(opts.node, AccessAPI.SendTransaction, req)\n  var t2 = Date.now()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionId = u8ToHex(res.getId_asU8())\n\n  if (typeof window !== \"undefined\") {\n    window.dispatchEvent(\n      new CustomEvent(\"FLOW::TX\", {\n        detail: {txId: ret.transactionId, delta: t2 - t1},\n      })\n    )\n  }\n\n  return ret\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransaction(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransaction, req)\n\n  let events = res.getEventsList()\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const unwrapKey = key => ({\n    address: u8ToHex(key.getAddress_asU8()),\n    keyId: key.getKeyId(),\n    sequenceNumber: key.getSequenceNumber()\n  })\n\n  const unwrapSignature = sig => ({\n    address: u8ToHex(key.getAddress_asU8()),\n    keyId: key.getKeyId(),\n    signature: u8ToHex(key.getSequenceNumber_asU8())\n  })\n\n  let transaction = ret.getTransaction()\n  ret.transaction = {\n      script: u8ToHex(transaction.getScript_asU8()),\n      arguments: (transaction.getArgumentsList()).map(u8ToHex),\n      referenceBlockId: u8ToHex(transaction.getReferenceBlockId_asU8()),\n      gasLimit: transaction.getGasLimit(),\n      proposalKey: unwrapKey(transaction.getProposalKey()),\n      payer: u8ToHex(transaction.getPayer_asU8()),\n      authorizers: (transaction.getAuthorizersList()).map(u8ToHex),\n      payloadSignatures: (transaction.getPayloadSignaturesList()).map(unwrapSignature),\n      envelopeSignatures: (transaction.getEnvelopeSignaturesList()).map(unwrapSignature)\n  }\n\n//   ret.transaction = {\n//     status: res.getStatus(),\n//     statusCode: res.getStatusCode(),\n//     errorMessage: res.getErrorMessage(),\n//     events: events.map(event => ({\n//       type: event.getType(),\n//       transactionId: u8ToHex(event.getTransactionId_asU8()),\n//       transactionIndex: event.getTransactionIndex(),\n//       eventIndex: event.getEventIndex(),\n//       payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n//     })),\n//   }\n\n  return ret\n}\n\n// enum TransactionStatus {\n//     UNKNOWN = 0;\n//     PENDING = 1;\n//     FINALIZED = 2;\n//     EXECUTED = 3;\n//     SEALED = 4;\n//     EXPIRED = 5;\n//   }\n  \n//   message Transaction {\n//     message ProposalKey {\n//       bytes address = 1;\n//       uint32 key_id = 2;\n//       uint64 sequence_number = 3;\n//     }\n    \n//     message Signature {\n//       bytes address = 1;\n//       uint32 key_id = 2;\n//       bytes signature = 3;\n//     }\n  \n//     bytes script = 1;\n//     repeated bytes arguments = 2;\n//     bytes reference_block_id = 3;\n//     uint64 gas_limit = 4;\n//     ProposalKey proposal_key = 5;\n//     bytes payer = 6;\n//     repeated bytes authorizers = 7;\n//     repeated Signature payload_signatures = 8;\n//     repeated Signature envelope_signatures = 9;\n//   }\n","import {GetAccountAtLatestBlockRequest, GetAccountAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\n\nexport async function sendGetAccount(ix, opts = {}) {\n  ix = await ix\n\n  const req = ix.block.height ? new GetAccountAtBlockHeightRequest() : new GetAccountAtLatestBlockRequest()\n  if (ix.block.height) req.setHeight(Number(ix.block.height))\n  req.setAddress(addressBuffer(sansPrefix(ix.account.addr)))\n\n  const res = await unary(opts.node, AccessAPI.GetAccount, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const account = res.getAccount()\n\n  let contractsMap;\n  const contracts = (contractsMap = account.getContractsMap()) ? contractsMap.getEntryList().reduce((acc, contract) => ({\n    ...acc,\n    [contract[0]]: new TextDecoder(\"utf-8\").decode(contract[1] || new UInt8Array())\n  }), {}) : {}\n\n  ret.account = {\n    address: withPrefix(u8ToHex(account.getAddress_asU8())),\n    balance: account.getBalance(),\n    code: new TextDecoder(\"utf-8\").decode(account.getCode_asU8() || new UInt8Array()),\n    contracts,\n    keys: account.getKeysList().map(publicKey => ({\n      index: publicKey.getIndex(),\n      publicKey: u8ToHex(publicKey.getPublicKey_asU8()),\n      signAlgo: publicKey.getSignAlgo(),\n      hashAlgo: publicKey.getHashAlgo(),\n      weight: publicKey.getWeight(),\n      sequenceNumber: publicKey.getSequenceNumber(),\n      revoked: publicKey.getRevoked(),\n    })),\n  }\n\n  return ret\n}\n","import {GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nconst latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/send Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the interaction object is deprecated and will no longer be recognized in future releases of @onflow/send.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/send/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nexport async function sendGetLatestBlock(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetLatestBlockRequest()\n\n  if (ix.latestBlock && ix.latestBlock.isSealed) {\n    req.setIsSealed(ix.latestBlock.isSealed)\n    latestBlockDeprecationNotice()\n  }\n\n  if (ix.block && ix.block.isSealed) {\n    req.setIsSealed(ix.block.isSealed)\n  }\n\n  const res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByIDRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlockById(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByIDRequest()\n  req.setId(hexBuffer(ix.block.id))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nexport async function sendGetBlockByHeight(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByHeightRequest()\n  req.setHeight(Number(ix.block.height))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {\n    isTransaction,\n    isGetTransaction,\n    isGetTransactionStatus,\n    isScript,\n    isGetAccount,\n    isGetEvents,\n    isGetBlock,\n    isGetLatestBlock,\n    isGetBlockById,\n    isGetBlockByHeight,\n    isPing,\n} from \"../interaction/interaction.js\"\nimport {sendTransaction} from \"./send-transaction.js\"\nimport {sendGetTransactionStatus} from \"./send-get-transaction-status.js\"\nimport {sendGetTransaction} from \"./send-get-transaction.js\"\nimport {sendExecuteScript} from \"./send-execute-script.js\"\nimport {sendGetAccount} from \"./send-get-account.js\"\nimport {sendGetEvents} from \"./send-get-events.js\"\nimport {sendGetLatestBlock} from \"./send-get-latest-block.js\"\nimport {sendGetBlockById} from \"./send-get-block-by-id.js\"\nimport {sendGetBlockByHeight} from \"./send-get-block-by-height.js\"\nimport {sendPing} from \"./send-ping.js\"\nimport {config} from \"@onflow/config\"\n\nexport const send = async (ix, opts = {}) => {\n    opts.node = opts.node || (await config().get(\"accessNode.api\"))\n    ix = await ix\n\n    switch (true) {\n        case isTransaction(ix):\n            return sendTransaction(ix, opts)\n        case isGetTransactionStatus(ix):\n            return sendGetTransactionStatus(ix, opts)\n        case isGetTransaction(ix):\n            return sendGetTransaction(ix, opts)\n        case isScript(ix):\n            return sendExecuteScript(ix, opts)\n        case isGetAccount(ix):\n            return sendGetAccount(ix, opts)\n        case isGetEvents(ix):\n            return sendGetEvents(ix, opts)\n        case isGetLatestBlock(ix):\n            return sendGetLatestBlock(ix, opts)\n        case isGetBlock(ix):\n            return sendGetLatestBlock(ix, opts)\n        case isGetBlockById(ix):\n            return sendGetBlockById(ix, opts)\n        case isGetBlockByHeight(ix):\n            return sendGetBlockByHeight(ix, opts)\n        case isPing(ix):\n            return sendPing(ix, opts)\n        default:\n            return ix\n    }\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransactionStatus(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransactionResult, req)\n\n  let events = res.getEventsList()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transaction = {\n    status: res.getStatus(),\n    statusCode: res.getStatusCode(),\n    errorMessage: res.getErrorMessage(),\n    events: events.map(event => ({\n      type: event.getType(),\n      transactionId: u8ToHex(event.getTransactionId_asU8()),\n      transactionIndex: event.getTransactionIndex(),\n      eventIndex: event.getEventIndex(),\n      payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n    })),\n  }\n\n  return ret\n}\n","import {ExecuteScriptAtLatestBlockRequest, ExecuteScriptAtBlockIDRequest, ExecuteScriptAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendExecuteScript(ix, opts = {}) {\n  ix = await ix\n\n  let req\n  if (ix.block.id) {\n    req = new ExecuteScriptAtBlockIDRequest()\n    req.setBlockId(hexBuffer(ix.block.id))\n  } else if (ix.block.height) {\n    req = new ExecuteScriptAtBlockHeightRequest()\n    req.setBlockHeight(Number(ix.block.height))\n  } else {\n    req = new ExecuteScriptAtLatestBlockRequest()\n  }\n\n  const code = Buffer.from(ix.message.cadence, \"utf8\")\n  ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n  req.setScript(code)\n\n  const res = await unary(opts.node, AccessAPI.ExecuteScriptAtLatestBlock, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.encodedData = JSON.parse(Buffer.from(res.getValue_asU8()).toString(\"utf8\"))\n\n  return ret\n}\n","import {GetEventsForHeightRangeRequest, GetEventsForBlockIDsRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetEvents(ix, opts = {}) {\n  ix = await ix\n \n  const req = ix.events.start ? new GetEventsForHeightRangeRequest() : new GetEventsForBlockIDsRequest()\n  req.setType(ix.events.eventType)\n  \n  if (ix.events.start) {\n    req.setStartHeight(Number(ix.events.start))\n    req.setEndHeight(Number(ix.events.end))\n  } else {\n    ix.events.blockIds.forEach(id =>\n      req.addBlockIds(hexBuffer(id))\n    )\n  }\n\n  const res = await unary(opts.node, AccessAPI.GetEventsForHeightRange, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const results = res.getResultsList()\n  ret.events = results.reduce((blocks, result) => {\n    const blockId = result.getBlockId()\n    const blockHeight = result.getBlockHeight()\n    const blockTimestamp = result.getBlockTimestamp()\n    const events = result.getEventsList()\n    events.forEach(event => {\n      blocks.push({\n        blockId,\n        blockHeight,\n        blockTimestamp,\n        type: event.getType(),\n        transactionId: u8ToHex(event.getTransactionId_asU8()),\n        transactionIndex: event.getTransactionIndex(),\n        eventIndex: event.getEventIndex(),\n        payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n      })\n    })\n    return blocks\n  }, [])\n\n  return ret\n}\n","import {AccessAPI, PingRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nexport async function sendPing(ix, opts = {}) {\n  ix = await ix\n\n  const req = new PingRequest()\n\n  const res = await unary(opts.node, AccessAPI.Ping, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  return ret\n}\n","import {pipe, Ok, makeGetBlock} from \"../interaction/interaction.js\"\n\nexport function getBlock(isSealed = null) {\n  return pipe([\n    makeGetBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeGetAccount, Ok} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\nexport function getAccount(addr) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.account.addr = sansPrefix(addr)\n      return Ok(ix)\n    }\n  ])\n}\n","const latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/decode Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the response object is deprecated and will no longer be recognized in future releases of @onflow/decode.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst decodeNumber = async (num, _, stack) => {\n  try {\n    return Number(num)\n  } catch (e) {\n    throw new Error(`Decode Number Error : ${stack.join(\".\")}`)\n  }\n}\n\nconst decodeImplicit = async (i) => i\n\nconst decodeVoid = async () => null\n\nconst decodeOptional = async (optional, decoders, stack) =>\n  optional ? await recurseDecode(optional, decoders, stack) : null\n\nconst decodeReference = async (v) => ({address: v.address, type: v.type})\n\nconst decodeArray = async (array, decoders, stack) =>\n  await Promise.all(\n    array.map(\n      (v) =>\n        new Promise(async (res) =>\n          res(await recurseDecode(v, decoders, [...stack, v.type]))\n        )\n    )\n  )\n\nconst decodeDictionary = async (dictionary, decoders, stack) =>\n  await dictionary.reduce(async (acc, v) => {\n    acc = await acc\n    acc[\n      await recurseDecode(v.key, decoders, [...stack, v.key])\n    ] = await recurseDecode(v.value, decoders, [...stack, v.key])\n    return acc\n  }, Promise.resolve({}))\n\nconst decodeComposite = async (composite, decoders, stack) => {\n  const decoded = await composite.fields.reduce(async (acc, v) => {\n    acc = await acc\n    acc[v.name] = await recurseDecode(v.value, decoders, [...stack, v.name])\n    return acc\n  }, Promise.resolve({}))\n  const decoder = composite.id && decoderLookup(decoders, composite.id)\n  return decoder ? await decoder(decoded) : decoded\n}\n\nconst defaultDecoders = {\n  UInt: decodeNumber,\n  Int: decodeNumber,\n  UInt8: decodeNumber,\n  Int8: decodeNumber,\n  UInt16: decodeNumber,\n  Int16: decodeNumber,\n  UInt32: decodeNumber,\n  Int32: decodeNumber,\n  UInt64: decodeNumber,\n  Int64: decodeNumber,\n  UInt128: decodeNumber,\n  Int128: decodeNumber,\n  UInt256: decodeNumber,\n  Int256: decodeNumber,\n  Word8: decodeNumber,\n  Word16: decodeNumber,\n  Word32: decodeNumber,\n  Word64: decodeNumber,\n  UFix64: decodeImplicit,\n  Fix64: decodeImplicit,\n  String: decodeImplicit,\n  Character: decodeImplicit,\n  Bool: decodeImplicit,\n  Address: decodeImplicit,\n  Void: decodeVoid,\n  Optional: decodeOptional,\n  Reference: decodeReference,\n  Array: decodeArray,\n  Dictionary: decodeDictionary,\n  Event: decodeComposite,\n  Resource: decodeComposite,\n  Struct: decodeComposite,\n}\n\nconst decoderLookup = (decoders, lookup) => {\n  const found = Object.keys(decoders).find((decoder) => {\n    if (/^\\/.*\\/$/.test(decoder)) {\n      const reg = new RegExp(decoder.substring(1, decoder.length - 1))\n      return reg.test(lookup)\n    }\n    return decoder === lookup\n  })\n  return lookup && found && decoders[found]\n}\n\nconst recurseDecode = async (decodeInstructions, decoders, stack) => {\n  let decoder = decoderLookup(decoders, decodeInstructions.type)\n  if (!decoder)\n    throw new Error(\n      `Undefined Decoder Error: ${decodeInstructions.type}@${stack.join(\".\")}`\n    )\n  return await decoder(decodeInstructions.value, decoders, stack)\n}\n\nexport const decode = async (\n  decodeInstructions,\n  customDecoders = {},\n  stack = []\n) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n  return await recurseDecode(decodeInstructions, decoders, stack)\n}\n\nexport const decodeResponse = async (response, customDecoders = {}) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n\n  if (response.encodedData) {\n    return await decode(response.encodedData, decoders)\n  } else if (response.transaction) {\n    return {\n      ...response.transaction,\n      events: await Promise.all(\n        response.transaction.events.map(async function decodeEvents(e) {\n          return {\n            type: e.type,\n            transactionId: e.transactionId,\n            transactionIndex: e.transactionIndex,\n            eventIndex: e.eventIndex,\n            data: await decode(e.payload, decoders),\n          }\n        })\n      ),\n    }\n  } else if (response.events) {\n    return await Promise.all(\n      response.events.map(async function decodeEvents(e) {\n        return {\n          type: e.type,\n          transactionId: e.transactionId,\n          transactionIndex: e.transactionIndex,\n          eventIndex: e.eventIndex,\n          data: await decode(e.payload, decoders),\n        }\n      })\n    )\n  } else if (response.account) {\n    return response.account\n  } else if (response.block) {\n    return response.block\n  } else if (response.blockHeader) {\n    return response.blockHeader\n  } else if (response.latestBlock) {\n    latestBlockDeprecationNotice()\n    return response.latestBlock\n  } else if (response.transactionId) {\n    return response.transactionId\n  }\n\n  return null\n}\n","import {isTransaction, Ok, interaction, pipe} from \"../interaction/interaction.js\"\nimport {send} from \"../send/sdk-send.js\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\n\nasync function getRefId (opts) {\n  var ix\n  ix = await pipe(interaction(), [getBlock()])\n  ix = await send(ix, opts)\n  ix = await decodeResponse(ix)\n  return ix.id\n}\n\nexport function resolveRefBlockId(opts) {\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.message.refBlock) return Ok(ix)\n\n    ix.message.refBlock = await getRefId(opts)\n\n    return Ok(ix)\n  }\n}\n","import {isTransaction, isScript, get} from \"../interaction/interaction.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"@onflow/config\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nexport async function resolveCadence(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    var cadence = get(ix, \"ix.cadence\")\n    invariant(\n      isFn(cadence) || isString(cadence),\n      \"Cadence needs to be a function or a string.\"\n    )\n    if (isFn(cadence)) cadence = await cadence({})\n    invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n    ix.message.cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce(\n          (cadence, [key, value]) => cadence.replace(key, value),\n          cadence\n        )\n      )\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      ix.arguments[id].asArgument = cast(arg)\n    }\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.0\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function collectAccounts(ix, accounts, last, depth = 3) {\n  invariant(depth, \"Account Resolve Recursion Limit Exceeded\", {ix, accounts})\n\n  let authorizations = []\n  for (let ax of accounts) {\n    var old = last || ax\n    if (isFn(ax.resolve)) ax = await ax.resolve(ax, buildPreSignable(ax, ix))\n\n    if (Array.isArray(ax)) {\n      await collectAccounts(ix, ax, old, depth - 1)\n    } else {\n      ix.accounts[ax.tempId] = ix.accounts[ax.tempId] || ax\n      ix.accounts[ax.tempId].role.proposer =\n        ix.accounts[ax.tempId].role.proposer || ax.role.proposer\n      ix.accounts[ax.tempId].role.payer =\n        ix.accounts[ax.tempId].role.payer || ax.role.payer\n      ix.accounts[ax.tempId].role.authorizer =\n        ix.accounts[ax.tempId].role.authorizer || ax.role.authorizer\n\n      if (ix.accounts[ax.tempId].role.proposer && ix.proposer === old.tempId) {\n        ix.proposer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.payer && ix.payer === old.tempId) {\n        ix.payer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.authorizer) {\n        if (last) {\n          // do group replacement\n          authorizations = [...authorizations, ax.tempId]\n        } else {\n          // do 1-1 replacement\n          ix.authorizations = ix.authorizations.map(d =>\n            d === old.tempId ? ax.tempId : d\n          )\n        }\n      }\n    }\n    if (old.tempId != ax.tempId) delete ix.accounts[old.tempId]\n  }\n\n  if (last) {\n    // complete (flatmap) group replacement\n    ix.authorizations = ix.authorizations\n      .map(d => (d === last.tempId ? authorizations : d))\n      .reduce(\n        (prev, curr) =>\n          Array.isArray(curr) ? [...prev, ...curr] : [...prev, curr],\n        []\n      )\n  }\n}\n\nexport async function resolveAccounts(ix) {\n  if (isTransaction(ix)) {\n    try {\n      await collectAccounts(ix, Object.values(ix.accounts))\n      await collectAccounts(ix, Object.values(ix.accounts))\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import { encode } from '@onflow/rlp';\n\nexport const encodeTransactionPayload = tx => rlpEncode(preparePayload(tx))\nexport const encodeTransactionEnvelope = tx => rlpEncode(prepareEnvelope(tx))\n\nconst paddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\n\nconst blockBuffer = block => paddedHexBuffer(block, 32)\n\nconst argumentToString = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst signatureBuffer = signature => Buffer.from(signature, \"hex\")\n\nconst rlpEncode = v => {\n  return encode(v).toString(\"hex\")\n}\n\nconst preparePayload = tx => {\n  validatePayload(tx)\n\n  return [\n    scriptBuffer(tx.script),\n    tx.arguments.map(argumentToString),\n    blockBuffer(tx.refBlock),\n    tx.gasLimit,\n    addressBuffer(tx.proposalKey.address),\n    tx.proposalKey.keyId,\n    tx.proposalKey.sequenceNum,\n    addressBuffer(tx.payer),\n    tx.authorizers.map(addressBuffer),\n  ]\n}\n\nconst prepareEnvelope = tx => {\n  validateEnvelope(tx)\n\n  return [preparePayload(tx), preparePayloadSignatures(tx)]\n}\n\nconst preparePayloadSignatures = tx => {\n  const signers = collectSigners(tx)\n\n  return tx.payloadSigs\n    .map(sig => {\n      return {\n        signerIndex: signers.get(sig.address),\n        keyId: sig.keyId,\n        sig: sig.sig,\n      }\n    })\n    .sort((a, b) => {\n      if (a.signerIndex > b.signerIndex) return 1\n      if (a.signerIndex < b.signerIndex) return -1\n\n      if (a.keyId > b.keyId) return 1\n      if (a.keyId < b.keyId) return -1\n    })\n    .map(sig => {\n      return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n    })\n}\n\nconst collectSigners = tx => {\n  const signers = new Map()\n  let i = 0\n\n  const addSigner = addr => {\n    if (!signers.has(addr)) {\n      signers.set(addr, i)\n      i++\n    }\n  }\n\n  addSigner(tx.proposalKey.address)\n  addSigner(tx.payer)\n  tx.authorizers.forEach(addSigner)\n\n  return signers\n}\n\nconst validatePayload = tx => {\n  payloadFields.forEach(field => checkField(tx, field))\n  proposalKeyFields.forEach(field =>\n    checkField(tx.proposalKey, field, \"proposalKey\")\n  )\n}\n\nconst validateEnvelope = tx => {\n  envelopeFields.forEach(field => checkField(tx, field))\n  tx.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n}\n\nconst isNumber = v => typeof v === \"number\"\nconst isString = v => typeof v === \"string\"\nconst isObject = v => v !== null && typeof v === \"object\"\nconst isArray = v => isObject(v) && v instanceof Array\n\nconst payloadFields = [\n  {name: \"script\", check: isString},\n  {name: \"arguments\", check: isArray},\n  {name: \"refBlock\", check: isString, defaultVal: \"0\"},\n  {name: \"gasLimit\", check: isNumber},\n  {name: \"proposalKey\", check: isObject},\n  {name: \"payer\", check: isString},\n  {name: \"authorizers\", check: isArray},\n]\n\nconst proposalKeyFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sequenceNum\", check: isNumber},\n]\n\nconst envelopeFields = [{name: \"payloadSigs\", check: isArray}]\n\nconst payloadSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst checkField = (obj, field, base, index) => {\n  const {name, check, defaultVal} = field\n  if (obj[name] == null && defaultVal != null) obj[name] = defaultVal\n  if (obj[name] == null) throw missingFieldError(name, base, index)\n  if (!check(obj[name])) throw invalidFieldError(name, base, index)\n}\n\nconst printFieldName = (field, base, index) => {\n  if (!!base)\n    return index == null ? `${base}.${field}` : `${base}.${index}.${field}`\n  return field\n}\n\nconst missingFieldError = (field, base, index) =>\n  new Error(`Missing field ${printFieldName(field, base, index)}`)\nconst invalidFieldError = (field, base, index) =>\n  new Error(`Invalid field ${printFieldName(field, base, index)}`)\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"../encode/encode.js\"\n\nexport async function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature,\n        })),\n      })\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nfunction findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  inside.add(ix.proposer)\n  inside.delete(ix.payer)\n  return Array.from(inside)\n}\n\nfunction findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set([ix.payer])\n  return Array.from(outside)\n}\n\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    // if (!acct.role.proposer) {\n    //   ix.accounts[id].keyId = keyId\n    // }\n    ix.accounts[id].signature = signature\n  }\n}\n\nfunction buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.0\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix) {\n  return {\n    script: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    gasLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: sansPrefix(ix.accounts[ix.payer].addr),\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import { get, pipe, Ok, Bad } from \"../interaction/interaction.js\"\n\nexport async function resolveValidators(ix) {\n  const validators = get(ix, 'ix.validators', [])\n  return pipe(ix, validators.map(cb => ix => cb(ix, { Ok, Bad })))\n}   \n","import {pipe, isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nimport {send} from \"../send/sdk-send.js\"\nimport {build} from \"../build/build.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nimport {resolveRefBlockId} from \"./resolve-ref-block-id.js\"\nimport {resolveCadence} from \"./resolve-cadence.js\"\nimport {resolveArguments} from \"./resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolve-accounts.js\"\nimport {resolveSignatures} from \"./resolve-signatures.js\"\nimport {resolveValidators} from \"./resolve-validators.js\"\nimport {resolveFinalNormalization} from \"./resolve-final-normalization.js\"\n\n// export const resolve = pipe([\n//   resolveCadence,\n//   resolveArguments,\n//   resolveAccounts,\n//   resolveRefBlockId(opts),\n//   resolveSignatures,\n//   resolveValidators,\n// ])\n\nexport const resolve = pipe([\n    resolveCadence,\n    resolveArguments,\n    resolveAccounts,\n    /* special */ execFetchRef,\n    /* special */ execFetchSequenceNumber,\n    resolveSignatures,\n    resolveFinalNormalization,\n    resolveValidators,\n])\n\nasync function execFetchRef(ix) {\n    if (isTransaction(ix) && ix.message.refBlock == null) {\n        ix.message.refBlock = (await send([getBlock()], opts).then(decode)).id\n    }\n    return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\nif (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n    ix.accounts[acct.tempId].sequenceNum = await send(await build([getAccount(acct.addr)])).then(decode)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n}\nreturn ix\n}\n  ","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {\n  interaction,\n  pipe,\n} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {resolve as defaultResolve} from \"../resolve/resolve.js\"\nimport {send as defaultSend} from \"./sdk-send.js\"\n\n// import {interaction, pipe} from \"@onflow/interaction\"\n// import {send as defaultSend} from \"@onflow/send\"\n// import {resolve as defaultResolve} from \"@onflow/sdk-resolve\"\n// import {config} from \"@onflow/config\"\n\nexport const send = async (args = [], opts = {}) => {\n  const sendFunction = await config().get(\"sdk.send\", opts.send || defaultSend)\n  const resolveFunction = await config().get(\n    \"sdk.resolve\",\n    opts.resolve || defaultResolve\n  )\n  if (Array.isArray(args)) args = pipe(interaction(), args)\n  return sendFunction(await resolveFunction(args), opts)\n}\n\n","import {decodeResponse} from \"./decode.js\"\nimport {config} from \"@onflow/config\"\n\nexport async function decode(response) {\n  const decodersFromConfig = await config().where(/^decoder\\./)\n  const decoders = Object.entries(decodersFromConfig).map(\n    ([pattern, xform]) => {\n      pattern = `/${pattern.replace(/^decoder\\./, \"\")}$/`\n      return [pattern, xform]\n    }\n  )\n\n  return decodeResponse(response, Object.fromEntries(decoders))\n}\n","import {send} from \"../send/send.js\"\nimport {getBlock} from \"../build/build-get-block\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nexport function latestBlock(...args) {\n  let opts = args[1] || (typeof args[0] === \"object\" ? args[0] : undefined)\n  let isSealed = typeof args[0] === \"boolean\" ? args[0] : undefined\n\n  if (typeof args[0] !== \"object\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing options as the first arguement to the latestBlock function has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0007-deprecate-opts-first-arg-latest-block\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n  }\n\n  return send([getBlock(isSealed)], opts).then(decode)\n}\n","import {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {send} from \"../send/send.js\"\n\nexport function account(address, opts) {\n  return send([getAccount(address)], opts).then(decode)\n}\n","import {pipe, makeAuthorizer} from \"../interaction/interaction.js\"\n\nconst roles = {\n  authorizer: true,\n}\n\nexport function authorizations(ax = []) {\n  return pipe(\n    ax.map((authz) => {\n      return typeof authz === \"function\"\n        ? makeAuthorizer({resolve: authz, role: roles, roles})\n        : makeAuthorizer({...authz, role: roles, roles})\n    })\n  )\n}\n\nexport function authorization(addr, signingFunction, keyId, sequenceNum) {\n  return {addr, signingFunction, keyId, sequenceNum}\n}\n","import {update} from \"../interaction/interaction.js\"\n\nexport function validator(cb) {\n    return update('ix.validators', validators => \n        Array.isArray(validators) ? validators.push(cb) : [cb]\n    )\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockHeight(height) {\n  return pipe([\n    ix => {\n      ix.block.height = height\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (typeof ix.block.isSealed === \"boolean\") return Bad(ix, \"Unable to specify both block height and isSealed.\")\n      if (ix.block.id) return Bad(ix, \"Unable to specify both block height and block id.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {isGetAccount, pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockId(id) {\n  return pipe([\n    ix => {\n      ix.block.id = id\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (isGetAccount(ix)) return Bad(ix, \"Unable to specify a block id with a Get Account interaction.\")\n      if (typeof ix.block.isSealed === \"boolean\") return Bad(ix, \"Unable to specify both block id and isSealed.\")\n      if (ix.block.height) return Bad(ix, \"Unable to specify both block id and block height.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEvents(eventType, start, end) {\n\n  if (typeof start !== \"undefined\" || typeof end !== \"undefined\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing a start and end into getEnvents has been deprecated and will not be supported in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )  \n  }\n\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockHeightRange(eventType, start, end) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockIds(blockIds = []) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.blockIds = blockIds\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetBlockHeader} from \"../interaction/interaction.js\"\n\nexport function getBlockHeader(isSealed = null) {\n  return pipe([\n    makeGetBlockHeader,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetLatestBlock} from \"../interaction/interaction.js\"\n\nexport function getLatestBlock(isSealed = false) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getLatestBlock builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0006-deprecate-get-latest-block-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetLatestBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockById} from \"../interaction/interaction.js\"\n\nexport function getBlockById(id) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockById builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0004-deprecate-get-block-by-id-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockById,\n    ix => {\n      ix.block.ids = [id]\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockByHeight} from \"../interaction/interaction.js\"\n\nexport function getBlockByHeight(height) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockByHeight builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0003-deprecate-get-block-by-height-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockByHeight,\n    ix => {\n      ix.block.height = height\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"../interaction/interaction.js\"\n\nexport function getTransactionStatus(transactionId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransaction} from \"../interaction/interaction.js\"\n\nexport function getTransaction(transactionId) {\n  return pipe([\n    makeGetTransaction,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function limit(computeLimit) {\n  return pipe([\n    ix => {\n      ix.message.computeLimit = computeLimit\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeParam} from \"../interaction/interaction.js\"\n\nexport function params(px = []) {\n  return pipe(px.map(makeParam))\n}\n\nexport function param(value, xform = null, key = null) {\n  return {key, value, xform: null}\n}\n","import {pipe, makeArgument} from \"../interaction/interaction.js\"\n\nexport function args(ax = []) {\n  return pipe(ax.map(makeArgument))\n}\n\nexport function arg(value, xform) {\n  return {value, xform}\n}\n","import {pipe, makeProposer} from \"../interaction/interaction.js\"\n\nconst roles = {\n  proposer: true,\n}\n\nexport async function proposer(authz) {\n  return typeof authz === \"function\"\n    ? makeProposer({resolve: authz, role: roles, roles})\n    : makeProposer({...authz, role: roles, roles})\n}\n","import {pipe, makePayer} from \"../interaction/interaction.js\"\n\nconst roles = {\n  payer: true\n}\n\nexport function payer(authz) {\n  return typeof authz === \"function\"\n    ? makePayer({resolve: authz, role: roles, roles})\n    : makePayer({...authz, role: roles, roles})\n}\n","import {makePing} from \"../interaction/interaction.js\"\n\nexport function ping() {\n  return makePing\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function ref(refBlock) {\n  return pipe([\n    ix => {\n      ix.message.refBlock = refBlock\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, put, makeScript} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nexport function script(...args) {\n  return pipe([\n    makeScript,\n    put(\"ix.cadence\", template(...args))\n  ])\n}\n","import {pipe, put, Ok, makeTransaction} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nconst DEFAULT_COMPUTE_LIMIT = 10\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.cadence\", template(...args)),\n    ix => {\n      ix.message.computeLimit = ix.message.computeLimit || DEFAULT_COMPUTE_LIMIT\n      ix.message.refBlock = ix.message.refBlock || DEFUALT_REF\n      ix.authorizations = ix.authorizations || DEFAULT_SCRIPT_ACCOUNTS\n      return Ok(ix)\n    },\n  ])\n}\n","import { Ok, Bad } from \"../interaction/interaction.js\"\n\nexport function invariant(...args) {\n  if (args.length > 1) {\n    const [predicate, message] = args\n    return invariant((ix, { Ok, Bad }) => {\n      return predicate ? Ok(ix) : Bad(ix, message)\n    })\n  }\n  const [fn] = args\n  return ix => fn(ix, {Ok, Bad})\n}\n","import {resolveCadence} from \"./resolve-cadence.js\"\n\nexport function resolveParams (ix) {\n  console.error(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n\n      The resolver sdk.resolveParams is being replaced with the package @onflow/sdk-resolve-cadence\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0002-deprecate-resolve-params-resolver\n\n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n\n  return resolveCadence(ix)\n}\n"],"names":["IX","KEYS","Set","Object","keys","JSON","parse","interaction","isNull","d","CHARS","split","randChar","Math","random","length","uuid","Array","from","join","Ok","ix","status","Bad","reason","makeIx","wat","tag","makeAccount","acct","tempId","accounts","addr","keyId","sequenceNum","signature","signingFunction","resolve","role","makeParam","param","message","params","push","key","value","asParam","xform","makeArgument","arg","arguments","asArgument","makeScript","makeTransaction","makeGetTransactionStatus","makeGetTransaction","makeGetAccount","makeGetEvents","makeGetLatestBlock","makeGetBlockById","makeGetBlockByHeight","makePing","makeGetBlock","makeGetBlockHeader","is","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetTransaction","isGetAccount","isGetEvents","isGetLatestBlock","isGetBlockById","isGetBlockByHeight","isPing","isGetBlock","isGetBlockHeader","isOk","isBad","why","recPipe","async","fns","has","Error","hardMode","hd","rest","cur","isNumber","hasOwnProperty","isInteraction","e","pipe","args","arg1","arg2","isArray","identity","v","get","fallback","assigns","put","update","fn","destroy","build","response","unary","host","method","request","Promise","reject","grpc","onEnd","statusMessage","Code","OK","setDefaultTransport","NodeHttpTransport","hexBuffer","hex","Buffer","addressBuffer","padStart","pad","u8ToHex","u8","toString","send","opts","node","config","tx","Transaction","setScript","script","scriptBuffer","cadence","setGasLimit","computeLimit","setReferenceBlockId","refBlock","setPayer","sansPrefix","payer","forEach","addArguments","stringify","argumentBuffer","authorizations","map","reduce","prev","current","find","item","addAuthorizers","proposalKey","ProposalKey","setAddress","proposer","setKeyId","setSequenceNumber","setProposalKey","values","sig","Signature","setSignature","addPayloadSignatures","error","console","addEnvelopeSignatures","req","SendTransactionRequest","setTransaction","t1","Date","now","res","AccessAPI","SendTransaction","t2","ret","transactionId","getId_asU8","window","dispatchEvent","CustomEvent","detail","txId","delta","sendTransaction","GetTransactionRequest","setId","transaction","id","GetTransactionResult","events","getEventsList","getStatus","statusCode","getStatusCode","errorMessage","getErrorMessage","event","type","getType","getTransactionId_asU8","transactionIndex","getTransactionIndex","eventIndex","getEventIndex","payload","getPayload_asU8","sendGetTransactionStatus","GetTransaction","unwrapSignature","address","getAddress_asU8","getKeyId","getSequenceNumber_asU8","getTransaction","getScript_asU8","getArgumentsList","referenceBlockId","getReferenceBlockId_asU8","gasLimit","getGasLimit","sequenceNumber","getSequenceNumber","unwrapKey","getProposalKey","getPayer_asU8","authorizers","getAuthorizersList","payloadSignatures","getPayloadSignaturesList","envelopeSignatures","getEnvelopeSignaturesList","sendGetTransaction","block","ExecuteScriptAtBlockIDRequest","setBlockId","height","ExecuteScriptAtBlockHeightRequest","setBlockHeight","Number","ExecuteScriptAtLatestBlockRequest","code","ExecuteScriptAtLatestBlock","encodedData","getValue_asU8","sendExecuteScript","GetAccountAtBlockHeightRequest","GetAccountAtLatestBlockRequest","setHeight","account","GetAccount","getAccount","contractsMap","contracts","getContractsMap","getEntryList","acc","contract","[object Object]","TextDecoder","decode","UInt8Array","withPrefix","balance","getBalance","getCode_asU8","getKeysList","publicKey","index","getIndex","getPublicKey_asU8","signAlgo","getSignAlgo","hashAlgo","getHashAlgo","weight","getWeight","revoked","getRevoked","sendGetAccount","start","GetEventsForHeightRangeRequest","GetEventsForBlockIDsRequest","setType","eventType","setStartHeight","setEndHeight","end","blockIds","addBlockIds","GetEventsForHeightRange","results","getResultsList","blocks","result","blockId","getBlockId","blockHeight","getBlockHeight","blockTimestamp","getBlockTimestamp","sendGetEvents","GetLatestBlockRequest","latestBlock","isSealed","setIsSealed","replace","trim","GetLatestBlock","getBlock","collectionGuarantees","getCollectionGuaranteesList","blockSeals","getBlockSealsList","signatures","getSignaturesList","parentId","getParentId_asU8","getHeight","timestamp","getTimestamp","collectionGuarantee","collectionId","getCollectionId_asU8","blockSeal","getBlockId_asU8","executionReceiptId","getExecutionReceiptId_asU8","executionReceiptSignatures","getExecutionReceiptSignaturesList","resultApprovalSignatures","getResultApprovalSignaturesList","sendGetLatestBlock","GetBlockByIDRequest","GetBlockByID","sendGetBlockById","GetBlockByHeightRequest","GetBlockByHeight","sendGetBlockByHeight","PingRequest","Ping","sendPing","decodeNumber","num","_","stack","decodeImplicit","i","decodeComposite","composite","decoders","decoded","fields","name","recurseDecode","decoder","decoderLookup","defaultDecoders","UInt","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","UFix64","Fix64","String","Character","Bool","Address","Void","Optional","optional","Reference","array","all","Dictionary","dictionary","Event","Resource","Struct","lookup","found","test","RegExp","substring","decodeInstructions","customDecoders","decodeResponse","data","blockHeader","resolveRefBlockId","getRefId","isFn","isString","resolveCadence","invariant","where","then","entries","cast","resolveArguments","buildPreSignable","f_type","f_vsn","roles","collectAccounts","last","depth","ax","old","authorizer","curr","resolveAccounts","paddedHexBuffer","argumentToString","rlpEncode","encode","preparePayload","validatePayload","preparePayloadSignatures","signers","collectSigners","payloadSigs","signerIndex","sort","a","b","Map","addSigner","set","payloadFields","field","checkField","proposalKeyFields","isObject","check","defaultVal","envelopeFields","payloadSigFields","obj","base","missingFieldError","invalidFieldError","printFieldName","resolveSignatures","insideSigners","inside","add","delete","findInsideSigners","insidePayload","prepForEncoding","fetchSignature","outsideSigners","outside","findOutsideSigners","outsidePayload","validateEnvelope","prepareEnvelope","encodeOutsideMessage","buildSignable","cid","resolveValidators","validators","cb","sendFunction","defaultSend","resolveFunction","defaultResolve","decodersFromConfig","pattern","fromEntries","undefined","warn","authz","authorization","validator","atBlockHeight","atBlockId","getEvents","getEventsAtBlockHeightRange","getEventsAtBlockIds","getBlockHeader","getLatestBlock","getBlockById","ids","getBlockByHeight","getTransactionStatus","limit","px","ping","ref","template","DEFAULT_SCRIPT_ACCOUNTS","predicate","resolveParams"],"mappings":"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"}