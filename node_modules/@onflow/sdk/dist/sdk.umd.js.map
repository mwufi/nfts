{"version":3,"file":"sdk.umd.js","sources":["../src/interaction/interaction.js","../src/build/build.js","../src/response/response.js","../src/send/unary.js","../src/send/send-transaction.js","../src/send/send-get-transaction.js","../src/send/send-get-account.js","../src/send/send-get-latest-block.js","../src/send/send-get-block-by-id.js","../src/send/send-get-block-by-height.js","../src/send/sdk-send.js","../src/send/send-get-transaction-status.js","../src/send/send-execute-script.js","../src/send/send-get-events.js","../src/send/send-ping.js","../src/build/build-get-block.js","../src/build/build-get-account.js","../src/decode/decode.js","../src/resolve/resolve-cadence.js","../src/resolve/resolve-arguments.js","../src/resolve/resolve-accounts.js","../src/encode/encode.js","../src/resolve/resolve-signatures.js","../src/resolve/resolve-validators.js","../src/resolve/resolve.js","../src/resolve/resolve-final-normalization.js","../src/send/send.js","../src/build/build-authorizations.js","../src/build/build-validator.js","../src/build/build-proposer.js","../src/build/build-payer.js","../src/build/build-transaction.js","../src/account/account.js","../src/build/build-arguments.js","../src/build/build-at-block-height.js","../src/build/build-at-block-id.js","../src/decode/sdk-decode.js","../src/build/build-get-block-by-height.js","../src/build/build-get-block-by-id.js","../src/build/build-get-block-header.js","../src/build/build-get-events.js","../src/build/build-get-events-at-block-height-range.js","../src/build/build-get-events-at-block-ids.js","../src/build/build-get-latest-block.js","../src/build/build-get-transaction.js","../src/build/build-get-transaction-status.js","../src/build/build-invariant.js","../src/latest-block/latest-block.js","../src/build/build-limit.js","../src/build/build-params.js","../src/build/build-ping.js","../src/build/build-ref.js","../src/resolve/resolve-params.js","../src/resolve/resolve-ref-block-id.js","../src/build/build-script.js"],"sourcesContent":["export const UNKNOWN /*                       */ = \"UNKNOWN\"\nexport const SCRIPT /*                        */ = \"SCRIPT\"\nexport const TRANSACTION /*                   */ = \"TRANSACTION\"\nexport const GET_TRANSACTION_STATUS /*        */ = \"GET_TRANSACTION_STATUS\"\nexport const GET_ACCOUNT /*                   */ = \"GET_ACCOUNT\"\nexport const GET_EVENTS /*                    */ = \"GET_EVENTS\"\nexport const GET_LATEST_BLOCK /*              */ = \"GET_LATEST_BLOCK\"\nexport const PING /*                          */ = \"PING\"\nexport const GET_TRANSACTION /*               */ = \"GET_TRANSACTION\"\nexport const GET_BLOCK_BY_ID /*               */ = \"GET_BLOCK_BY_ID\"\nexport const GET_BLOCK_BY_HEIGHT /*           */ = \"GET_BLOCK_BY_HEIGHT\"\nexport const GET_BLOCK /*                     */ = \"GET_BLOCK\"\nexport const GET_BLOCK_HEADER /*              */ = \"GET_BLOCK_HEADER\"\n\nexport const BAD /* */ = \"BAD\"\nexport const OK /*  */ = \"OK\"\n\nexport const ACCOUNT /* */ = \"ACCOUNT\"\nexport const PARAM /*   */ = \"PARAM\"\nexport const ARGUMENT /**/ = \"ARGUMENT\"\n\nconst ACCT = `{\n  \"kind\":\"${ACCOUNT}\",\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":\"${PARAM}\",\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":\"${ARGUMENT}\",\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst IX = `{\n  \"tag\":\"${UNKNOWN}\",\n  \"assigns\":{},\n  \"status\":\"${OK}\",\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":null,\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null,\n    \"blockIds\":[]\n  },\n  \"transaction\": {\n    \"id\":null\n  },\n  \"block\": {\n    \"id\":null,\n    \"height\":null,\n    \"isSealed\":null\n  },\n  \"account\": {\n    \"addr\":null\n  }\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nconst isArray = (d) => Array.isArray(d)\nconst isObj = (d) => typeof d === \"object\"\nconst isNull = (d) => d == null\nconst isNumber = (d) => d === \"number\"\nconst isFn = (d) => typeof d === \"function\"\n\nconst CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\")\nconst randChar = () => CHARS[~~(Math.random() * CHARS.length)]\nexport const uuid = () => Array.from({length: 10}, randChar).join(\"\")\n\nexport const isInteraction = (ix) => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = (ix) => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = (wat) => (ix) => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nconst makeAccount = (acct, tempId) => (ix) => {\n  ix.accounts[tempId] = JSON.parse(ACCT)\n  ix.accounts[tempId].tempId = tempId\n  ix.accounts[tempId].addr = acct.addr\n  ix.accounts[tempId].keyId = acct.keyId\n  ix.accounts[tempId].sequenceNum = acct.sequenceNum\n  ix.accounts[tempId].signature = acct.signature\n  ix.accounts[tempId].signingFunction = acct.signingFunction\n  ix.accounts[tempId].resolve = acct.resolve\n  ix.accounts[tempId].role = {\n    ...ix.accounts[tempId].role,\n    ...acct.role,\n  }\n  return Ok(ix)\n}\n\nexport const makeAuthorizer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.authorizations.push(tempId)\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makeProposer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.proposer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makePayer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.payer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n} \n\nexport const makeParam = (param) => (ix) => {\n  let tempId = uuid()\n  ix.message.params.push(tempId)\n\n  ix.params[tempId] = JSON.parse(PRM)\n  ix.params[tempId].tempId = tempId\n  ix.params[tempId].key = param.key\n  ix.params[tempId].value = param.value\n  ix.params[tempId].asParam = param.asParam\n  ix.params[tempId].xform = param.xform\n  ix.params[tempId].resolve = param.resolve\n  return Ok(ix)\n}\n\nexport const makeArgument = (arg) => (ix) => {\n  let tempId = uuid()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  return Ok(ix)\n}\n\nexport const makeUnknown /*                 */ = makeIx(UNKNOWN)\nexport const makeScript /*                  */ = makeIx(SCRIPT)\nexport const makeTransaction /*             */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*    */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetTransaction /*          */ = makeIx(GET_TRANSACTION)\nexport const makeGetAccount /*              */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*               */ = makeIx(GET_EVENTS)\nexport const makeGetLatestBlock /*          */ = makeIx(GET_LATEST_BLOCK)\nexport const makeGetBlockById /*            */ = makeIx(GET_BLOCK_BY_ID)\nexport const makeGetBlockByHeight /*        */ = makeIx(GET_BLOCK_BY_HEIGHT)\nexport const makePing /*                    */ = makeIx(PING)\nexport const makeGetBlock /*                */ = makeIx(GET_BLOCK)\nexport const makeGetBlockHeader /*          */ = makeIx(GET_BLOCK_HEADER)\n\nconst is = (wat) => (ix) => ix.tag === wat\n\nexport const isUnknown /*                 */ = is(UNKNOWN)\nexport const isScript /*                  */ = is(SCRIPT)\nexport const isTransaction /*             */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*    */ = is(GET_TRANSACTION_STATUS)\nexport const isGetTransaction /*          */ = is(GET_TRANSACTION)\nexport const isGetAccount /*              */ = is(GET_ACCOUNT)\nexport const isGetEvents /*               */ = is(GET_EVENTS)\nexport const isGetLatestBlock /*          */ = is(GET_LATEST_BLOCK)\nexport const isGetBlockById /*            */ = is(GET_BLOCK_BY_ID)\nexport const isGetBlockByHeight /*        */ = is(GET_BLOCK_BY_HEIGHT)\nexport const isPing /*                    */ = is(PING)\nexport const isGetBlock /*                */ = is(GET_BLOCK)\nexport const isGetBlockHeader /*          */ = is(GET_BLOCK_HEADER)\n\nexport const isOk /*  */ = (ix) => ix.status === OK\nexport const isBad /* */ = (ix) => ix.status === BAD\nexport const why /*   */ = (ix) => ix.reason\n\nexport const isAccount /*  */ = (account) => account.kind === ACCOUNT\nexport const isParam /*    */ = (param) => param.kind === PARAM\nexport const isArgument /* */ = (argument) => argument.kind === ARGUMENT\n\nconst hardMode = (ix) => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  try {\n    ix = hardMode(await ix)\n    if (isBad(ix)) throw new Error(`Interaction Error: ${ix.reason}`)\n    if (!fns.length) return ix\n    const [hd, ...rest] = fns\n    const cur = await hd\n    if (isFn(cur)) return recPipe(cur(ix), rest)\n    if (isNull(cur) || !cur) return recPipe(ix, rest)\n    if (isInteraction(cur)) return recPipe(cur, rest)\n    throw new Error(\"Invalid Interaction Composition\")\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return (d) => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = (v) => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => (ix) => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => (ix) => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = (key) => (ix) => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n","import {pipe, interaction} from \"../interaction/interaction.js\"\n\nexport function build(fns = []) {\n  return pipe(interaction(), fns)\n}\n","const DEFAULT_RESPONSE =\n'{\"tag\": 0, \"transaction\":null, \"transactionId\":null, \"encodedData\":null, \"events\": null, \"account\": null}'\n\nexport const response = () => JSON.parse(DEFAULT_RESPONSE)\n","import {grpc} from \"@improbable-eng/grpc-web\"\nimport {NodeHttpTransport} from \"@improbable-eng/grpc-web-node-http-transport\"\n\ngrpc.setDefaultTransport(NodeHttpTransport())\n\nexport async function unary(host, method, request) {\n  return new Promise((resolve, reject) => {\n    grpc.unary(method, {\n      request: request,\n      host: host,\n      onEnd: ({status, statusMessage, message}) => {\n        if (status === grpc.Code.OK) {\n          resolve(message)\n        } else {\n          reject(new Error(statusMessage))\n        }\n      },\n    })\n  })\n}\n","import {AccessAPI, Transaction, SendTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nexport async function sendTransaction(ix, opts = {}) {\n  ix = await ix\n\n  const tx = new Transaction()\n  tx.setScript(scriptBuffer(ix.message.cadence))\n  tx.setGasLimit(ix.message.computeLimit)\n  tx.setReferenceBlockId(\n    ix.message.refBlock ? hexBuffer(ix.message.refBlock) : null\n  )\n  tx.setPayer(addressBuffer(sansPrefix(ix.accounts[ix.payer].addr)))\n  ix.message.arguments.forEach(arg =>\n    tx.addArguments(argumentBuffer(ix.arguments[arg].asArgument))\n  )\n  ix.authorizations\n    .map(tempId => ix.accounts[tempId].addr)\n    .reduce((prev, current) => {\n      return prev.find(item => item === current) ? prev : [...prev, current]\n    }, [])\n    .forEach(addr => tx.addAuthorizers(addressBuffer(sansPrefix(addr))))\n\n  const proposalKey = new Transaction.ProposalKey()\n  proposalKey.setAddress(\n    addressBuffer(sansPrefix(ix.accounts[ix.proposer].addr))\n  )\n  proposalKey.setKeyId(ix.accounts[ix.proposer].keyId)\n  proposalKey.setSequenceNumber(ix.accounts[ix.proposer].sequenceNum)\n\n  tx.setProposalKey(proposalKey)\n\n  // Apply Non Payer Signatures to Payload Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addPayloadSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying payload signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addEnvelopeSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying envelope signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  const req = new SendTransactionRequest()\n  req.setTransaction(tx)\n\n  var t1 = Date.now()\n  const res = await unary(opts.node, AccessAPI.SendTransaction, req)\n  var t2 = Date.now()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionId = u8ToHex(res.getId_asU8())\n\n  if (typeof window !== \"undefined\") {\n    window.dispatchEvent(\n      new CustomEvent(\"FLOW::TX\", {\n        detail: {txId: ret.transactionId, delta: t2 - t1},\n      })\n    )\n  }\n\n  return ret\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransaction(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransaction, req)\n\n  let events = res.getEventsList()\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const unwrapKey = key => ({\n    address: u8ToHex(key.getAddress_asU8()),\n    keyId: key.getKeyId(),\n    sequenceNumber: key.getSequenceNumber()\n  })\n\n  const unwrapSignature = sig => ({\n    address: u8ToHex(key.getAddress_asU8()),\n    keyId: key.getKeyId(),\n    signature: u8ToHex(key.getSequenceNumber_asU8())\n  })\n\n  let transaction = ret.getTransaction()\n  ret.transaction = {\n      script: u8ToHex(transaction.getScript_asU8()),\n      arguments: (transaction.getArgumentsList()).map(u8ToHex),\n      referenceBlockId: u8ToHex(transaction.getReferenceBlockId_asU8()),\n      gasLimit: transaction.getGasLimit(),\n      proposalKey: unwrapKey(transaction.getProposalKey()),\n      payer: u8ToHex(transaction.getPayer_asU8()),\n      authorizers: (transaction.getAuthorizersList()).map(u8ToHex),\n      payloadSignatures: (transaction.getPayloadSignaturesList()).map(unwrapSignature),\n      envelopeSignatures: (transaction.getEnvelopeSignaturesList()).map(unwrapSignature)\n  }\n\n//   ret.transaction = {\n//     status: res.getStatus(),\n//     statusCode: res.getStatusCode(),\n//     errorMessage: res.getErrorMessage(),\n//     events: events.map(event => ({\n//       type: event.getType(),\n//       transactionId: u8ToHex(event.getTransactionId_asU8()),\n//       transactionIndex: event.getTransactionIndex(),\n//       eventIndex: event.getEventIndex(),\n//       payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n//     })),\n//   }\n\n  return ret\n}\n\n// enum TransactionStatus {\n//     UNKNOWN = 0;\n//     PENDING = 1;\n//     FINALIZED = 2;\n//     EXECUTED = 3;\n//     SEALED = 4;\n//     EXPIRED = 5;\n//   }\n  \n//   message Transaction {\n//     message ProposalKey {\n//       bytes address = 1;\n//       uint32 key_id = 2;\n//       uint64 sequence_number = 3;\n//     }\n    \n//     message Signature {\n//       bytes address = 1;\n//       uint32 key_id = 2;\n//       bytes signature = 3;\n//     }\n  \n//     bytes script = 1;\n//     repeated bytes arguments = 2;\n//     bytes reference_block_id = 3;\n//     uint64 gas_limit = 4;\n//     ProposalKey proposal_key = 5;\n//     bytes payer = 6;\n//     repeated bytes authorizers = 7;\n//     repeated Signature payload_signatures = 8;\n//     repeated Signature envelope_signatures = 9;\n//   }\n","import {GetAccountAtLatestBlockRequest, GetAccountAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\n\nexport async function sendGetAccount(ix, opts = {}) {\n  ix = await ix\n\n  const req = ix.block.height ? new GetAccountAtBlockHeightRequest() : new GetAccountAtLatestBlockRequest()\n  if (ix.block.height) req.setHeight(Number(ix.block.height))\n  req.setAddress(addressBuffer(sansPrefix(ix.account.addr)))\n\n  const res = await unary(opts.node, AccessAPI.GetAccount, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const account = res.getAccount()\n\n  let contractsMap;\n  const contracts = (contractsMap = account.getContractsMap()) ? contractsMap.getEntryList().reduce((acc, contract) => ({\n    ...acc,\n    [contract[0]]: new TextDecoder(\"utf-8\").decode(contract[1] || new UInt8Array())\n  }), {}) : {}\n\n  ret.account = {\n    address: withPrefix(u8ToHex(account.getAddress_asU8())),\n    balance: account.getBalance(),\n    code: new TextDecoder(\"utf-8\").decode(account.getCode_asU8() || new UInt8Array()),\n    contracts,\n    keys: account.getKeysList().map(publicKey => ({\n      index: publicKey.getIndex(),\n      publicKey: u8ToHex(publicKey.getPublicKey_asU8()),\n      signAlgo: publicKey.getSignAlgo(),\n      hashAlgo: publicKey.getHashAlgo(),\n      weight: publicKey.getWeight(),\n      sequenceNumber: publicKey.getSequenceNumber(),\n      revoked: publicKey.getRevoked(),\n    })),\n  }\n\n  return ret\n}\n","import {GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nconst latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/send Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the interaction object is deprecated and will no longer be recognized in future releases of @onflow/send.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/send/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nexport async function sendGetLatestBlock(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetLatestBlockRequest()\n\n  if (ix.latestBlock && ix.latestBlock.isSealed) {\n    req.setIsSealed(ix.latestBlock.isSealed)\n    latestBlockDeprecationNotice()\n  }\n\n  if (ix.block && ix.block.isSealed) {\n    req.setIsSealed(ix.block.isSealed)\n  }\n\n  const res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByIDRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlockById(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByIDRequest()\n  req.setId(hexBuffer(ix.block.id))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nexport async function sendGetBlockByHeight(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByHeightRequest()\n  req.setHeight(Number(ix.block.height))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {\n    isTransaction,\n    isGetTransaction,\n    isGetTransactionStatus,\n    isScript,\n    isGetAccount,\n    isGetEvents,\n    isGetBlock,\n    isGetLatestBlock,\n    isGetBlockById,\n    isGetBlockByHeight,\n    isPing,\n} from \"../interaction/interaction.js\"\nimport {sendTransaction} from \"./send-transaction.js\"\nimport {sendGetTransactionStatus} from \"./send-get-transaction-status.js\"\nimport {sendGetTransaction} from \"./send-get-transaction.js\"\nimport {sendExecuteScript} from \"./send-execute-script.js\"\nimport {sendGetAccount} from \"./send-get-account.js\"\nimport {sendGetEvents} from \"./send-get-events.js\"\nimport {sendGetLatestBlock} from \"./send-get-latest-block.js\"\nimport {sendGetBlockById} from \"./send-get-block-by-id.js\"\nimport {sendGetBlockByHeight} from \"./send-get-block-by-height.js\"\nimport {sendPing} from \"./send-ping.js\"\nimport {config} from \"@onflow/config\"\n\nexport const send = async (ix, opts = {}) => {\n    opts.node = opts.node || (await config().get(\"accessNode.api\"))\n    ix = await ix\n\n    switch (true) {\n        case isTransaction(ix):\n            return sendTransaction(ix, opts)\n        case isGetTransactionStatus(ix):\n            return sendGetTransactionStatus(ix, opts)\n        case isGetTransaction(ix):\n            return sendGetTransaction(ix, opts)\n        case isScript(ix):\n            return sendExecuteScript(ix, opts)\n        case isGetAccount(ix):\n            return sendGetAccount(ix, opts)\n        case isGetEvents(ix):\n            return sendGetEvents(ix, opts)\n        case isGetLatestBlock(ix):\n            return sendGetLatestBlock(ix, opts)\n        case isGetBlock(ix):\n            return sendGetLatestBlock(ix, opts)\n        case isGetBlockById(ix):\n            return sendGetBlockById(ix, opts)\n        case isGetBlockByHeight(ix):\n            return sendGetBlockByHeight(ix, opts)\n        case isPing(ix):\n            return sendPing(ix, opts)\n        default:\n            return ix\n    }\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransactionStatus(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransactionResult, req)\n\n  let events = res.getEventsList()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transaction = {\n    status: res.getStatus(),\n    statusCode: res.getStatusCode(),\n    errorMessage: res.getErrorMessage(),\n    events: events.map(event => ({\n      type: event.getType(),\n      transactionId: u8ToHex(event.getTransactionId_asU8()),\n      transactionIndex: event.getTransactionIndex(),\n      eventIndex: event.getEventIndex(),\n      payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n    })),\n  }\n\n  return ret\n}\n","import {ExecuteScriptAtLatestBlockRequest, ExecuteScriptAtBlockIDRequest, ExecuteScriptAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendExecuteScript(ix, opts = {}) {\n  ix = await ix\n\n  let req\n  if (ix.block.id) {\n    req = new ExecuteScriptAtBlockIDRequest()\n    req.setBlockId(hexBuffer(ix.block.id))\n  } else if (ix.block.height) {\n    req = new ExecuteScriptAtBlockHeightRequest()\n    req.setBlockHeight(Number(ix.block.height))\n  } else {\n    req = new ExecuteScriptAtLatestBlockRequest()\n  }\n\n  const code = Buffer.from(ix.message.cadence, \"utf8\")\n  ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n  req.setScript(code)\n\n  const res = await unary(opts.node, AccessAPI.ExecuteScriptAtLatestBlock, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.encodedData = JSON.parse(Buffer.from(res.getValue_asU8()).toString(\"utf8\"))\n\n  return ret\n}\n","import {GetEventsForHeightRangeRequest, GetEventsForBlockIDsRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetEvents(ix, opts = {}) {\n  ix = await ix\n \n  const req = ix.events.start ? new GetEventsForHeightRangeRequest() : new GetEventsForBlockIDsRequest()\n  req.setType(ix.events.eventType)\n  \n  if (ix.events.start) {\n    req.setStartHeight(Number(ix.events.start))\n    req.setEndHeight(Number(ix.events.end))\n  } else {\n    ix.events.blockIds.forEach(id =>\n      req.addBlockIds(hexBuffer(id))\n    )\n  }\n\n  const res = await unary(opts.node, AccessAPI.GetEventsForHeightRange, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const results = res.getResultsList()\n  ret.events = results.reduce((blocks, result) => {\n    const blockId = result.getBlockId()\n    const blockHeight = result.getBlockHeight()\n    const blockTimestamp = result.getBlockTimestamp()\n    const events = result.getEventsList()\n    events.forEach(event => {\n      blocks.push({\n        blockId,\n        blockHeight,\n        blockTimestamp,\n        type: event.getType(),\n        transactionId: u8ToHex(event.getTransactionId_asU8()),\n        transactionIndex: event.getTransactionIndex(),\n        eventIndex: event.getEventIndex(),\n        payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n      })\n    })\n    return blocks\n  }, [])\n\n  return ret\n}\n","import {AccessAPI, PingRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nexport async function sendPing(ix, opts = {}) {\n  ix = await ix\n\n  const req = new PingRequest()\n\n  const res = await unary(opts.node, AccessAPI.Ping, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  return ret\n}\n","import {pipe, Ok, makeGetBlock} from \"../interaction/interaction.js\"\n\nexport function getBlock(isSealed = null) {\n  return pipe([\n    makeGetBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeGetAccount, Ok} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\nexport function getAccount(addr) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.account.addr = sansPrefix(addr)\n      return Ok(ix)\n    }\n  ])\n}\n","const latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/decode Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the response object is deprecated and will no longer be recognized in future releases of @onflow/decode.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst decodeNumber = async (num, _, stack) => {\n  try {\n    return Number(num)\n  } catch (e) {\n    throw new Error(`Decode Number Error : ${stack.join(\".\")}`)\n  }\n}\n\nconst decodeImplicit = async (i) => i\n\nconst decodeVoid = async () => null\n\nconst decodeOptional = async (optional, decoders, stack) =>\n  optional ? await recurseDecode(optional, decoders, stack) : null\n\nconst decodeReference = async (v) => ({address: v.address, type: v.type})\n\nconst decodeArray = async (array, decoders, stack) =>\n  await Promise.all(\n    array.map(\n      (v) =>\n        new Promise(async (res) =>\n          res(await recurseDecode(v, decoders, [...stack, v.type]))\n        )\n    )\n  )\n\nconst decodeDictionary = async (dictionary, decoders, stack) =>\n  await dictionary.reduce(async (acc, v) => {\n    acc = await acc\n    acc[\n      await recurseDecode(v.key, decoders, [...stack, v.key])\n    ] = await recurseDecode(v.value, decoders, [...stack, v.key])\n    return acc\n  }, Promise.resolve({}))\n\nconst decodeComposite = async (composite, decoders, stack) => {\n  const decoded = await composite.fields.reduce(async (acc, v) => {\n    acc = await acc\n    acc[v.name] = await recurseDecode(v.value, decoders, [...stack, v.name])\n    return acc\n  }, Promise.resolve({}))\n  const decoder = composite.id && decoderLookup(decoders, composite.id)\n  return decoder ? await decoder(decoded) : decoded\n}\n\nconst defaultDecoders = {\n  UInt: decodeNumber,\n  Int: decodeNumber,\n  UInt8: decodeNumber,\n  Int8: decodeNumber,\n  UInt16: decodeNumber,\n  Int16: decodeNumber,\n  UInt32: decodeNumber,\n  Int32: decodeNumber,\n  UInt64: decodeNumber,\n  Int64: decodeNumber,\n  UInt128: decodeNumber,\n  Int128: decodeNumber,\n  UInt256: decodeNumber,\n  Int256: decodeNumber,\n  Word8: decodeNumber,\n  Word16: decodeNumber,\n  Word32: decodeNumber,\n  Word64: decodeNumber,\n  UFix64: decodeImplicit,\n  Fix64: decodeImplicit,\n  String: decodeImplicit,\n  Character: decodeImplicit,\n  Bool: decodeImplicit,\n  Address: decodeImplicit,\n  Void: decodeVoid,\n  Optional: decodeOptional,\n  Reference: decodeReference,\n  Array: decodeArray,\n  Dictionary: decodeDictionary,\n  Event: decodeComposite,\n  Resource: decodeComposite,\n  Struct: decodeComposite,\n}\n\nconst decoderLookup = (decoders, lookup) => {\n  const found = Object.keys(decoders).find((decoder) => {\n    if (/^\\/.*\\/$/.test(decoder)) {\n      const reg = new RegExp(decoder.substring(1, decoder.length - 1))\n      return reg.test(lookup)\n    }\n    return decoder === lookup\n  })\n  return lookup && found && decoders[found]\n}\n\nconst recurseDecode = async (decodeInstructions, decoders, stack) => {\n  let decoder = decoderLookup(decoders, decodeInstructions.type)\n  if (!decoder)\n    throw new Error(\n      `Undefined Decoder Error: ${decodeInstructions.type}@${stack.join(\".\")}`\n    )\n  return await decoder(decodeInstructions.value, decoders, stack)\n}\n\nexport const decode = async (\n  decodeInstructions,\n  customDecoders = {},\n  stack = []\n) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n  return await recurseDecode(decodeInstructions, decoders, stack)\n}\n\nexport const decodeResponse = async (response, customDecoders = {}) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n\n  if (response.encodedData) {\n    return await decode(response.encodedData, decoders)\n  } else if (response.transaction) {\n    return {\n      ...response.transaction,\n      events: await Promise.all(\n        response.transaction.events.map(async function decodeEvents(e) {\n          return {\n            type: e.type,\n            transactionId: e.transactionId,\n            transactionIndex: e.transactionIndex,\n            eventIndex: e.eventIndex,\n            data: await decode(e.payload, decoders),\n          }\n        })\n      ),\n    }\n  } else if (response.events) {\n    return await Promise.all(\n      response.events.map(async function decodeEvents(e) {\n        return {\n          type: e.type,\n          transactionId: e.transactionId,\n          transactionIndex: e.transactionIndex,\n          eventIndex: e.eventIndex,\n          data: await decode(e.payload, decoders),\n        }\n      })\n    )\n  } else if (response.account) {\n    return response.account\n  } else if (response.block) {\n    return response.block\n  } else if (response.blockHeader) {\n    return response.blockHeader\n  } else if (response.latestBlock) {\n    latestBlockDeprecationNotice()\n    return response.latestBlock\n  } else if (response.transactionId) {\n    return response.transactionId\n  }\n\n  return null\n}\n","import {isTransaction, isScript, get} from \"../interaction/interaction.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"@onflow/config\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nexport async function resolveCadence(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    var cadence = get(ix, \"ix.cadence\")\n    invariant(\n      isFn(cadence) || isString(cadence),\n      \"Cadence needs to be a function or a string.\"\n    )\n    if (isFn(cadence)) cadence = await cadence({})\n    invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n    ix.message.cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce(\n          (cadence, [key, value]) => cadence.replace(key, value),\n          cadence\n        )\n      )\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      ix.arguments[id].asArgument = cast(arg)\n    }\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.0\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function collectAccounts(ix, accounts, last, depth = 3) {\n  invariant(depth, \"Account Resolve Recursion Limit Exceeded\", {ix, accounts})\n\n  let authorizations = []\n  for (let ax of accounts) {\n    var old = last || ax\n    if (isFn(ax.resolve)) ax = await ax.resolve(ax, buildPreSignable(ax, ix))\n\n    if (Array.isArray(ax)) {\n      await collectAccounts(ix, ax, old, depth - 1)\n    } else {\n      ix.accounts[ax.tempId] = ix.accounts[ax.tempId] || ax\n      ix.accounts[ax.tempId].role.proposer =\n        ix.accounts[ax.tempId].role.proposer || ax.role.proposer\n      ix.accounts[ax.tempId].role.payer =\n        ix.accounts[ax.tempId].role.payer || ax.role.payer\n      ix.accounts[ax.tempId].role.authorizer =\n        ix.accounts[ax.tempId].role.authorizer || ax.role.authorizer\n\n      if (ix.accounts[ax.tempId].role.proposer && ix.proposer === old.tempId) {\n        ix.proposer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.payer && ix.payer === old.tempId) {\n        ix.payer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.authorizer) {\n        if (last) {\n          // do group replacement\n          authorizations = [...authorizations, ax.tempId]\n        } else {\n          // do 1-1 replacement\n          ix.authorizations = ix.authorizations.map(d =>\n            d === old.tempId ? ax.tempId : d\n          )\n        }\n      }\n    }\n    if (old.tempId != ax.tempId) delete ix.accounts[old.tempId]\n  }\n\n  if (last) {\n    // complete (flatmap) group replacement\n    ix.authorizations = ix.authorizations\n      .map(d => (d === last.tempId ? authorizations : d))\n      .reduce(\n        (prev, curr) =>\n          Array.isArray(curr) ? [...prev, ...curr] : [...prev, curr],\n        []\n      )\n  }\n}\n\nexport async function resolveAccounts(ix) {\n  if (isTransaction(ix)) {\n    try {\n      await collectAccounts(ix, Object.values(ix.accounts))\n      await collectAccounts(ix, Object.values(ix.accounts))\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import { encode } from '@onflow/rlp';\n\nexport const encodeTransactionPayload = tx => rlpEncode(preparePayload(tx))\nexport const encodeTransactionEnvelope = tx => rlpEncode(prepareEnvelope(tx))\n\nconst paddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\n\nconst blockBuffer = block => paddedHexBuffer(block, 32)\n\nconst argumentToString = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst signatureBuffer = signature => Buffer.from(signature, \"hex\")\n\nconst rlpEncode = v => {\n  return encode(v).toString(\"hex\")\n}\n\nconst preparePayload = tx => {\n  validatePayload(tx)\n\n  return [\n    scriptBuffer(tx.script),\n    tx.arguments.map(argumentToString),\n    blockBuffer(tx.refBlock),\n    tx.gasLimit,\n    addressBuffer(tx.proposalKey.address),\n    tx.proposalKey.keyId,\n    tx.proposalKey.sequenceNum,\n    addressBuffer(tx.payer),\n    tx.authorizers.map(addressBuffer),\n  ]\n}\n\nconst prepareEnvelope = tx => {\n  validateEnvelope(tx)\n\n  return [preparePayload(tx), preparePayloadSignatures(tx)]\n}\n\nconst preparePayloadSignatures = tx => {\n  const signers = collectSigners(tx)\n\n  return tx.payloadSigs\n    .map(sig => {\n      return {\n        signerIndex: signers.get(sig.address),\n        keyId: sig.keyId,\n        sig: sig.sig,\n      }\n    })\n    .sort((a, b) => {\n      if (a.signerIndex > b.signerIndex) return 1\n      if (a.signerIndex < b.signerIndex) return -1\n\n      if (a.keyId > b.keyId) return 1\n      if (a.keyId < b.keyId) return -1\n    })\n    .map(sig => {\n      return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n    })\n}\n\nconst collectSigners = tx => {\n  const signers = new Map()\n  let i = 0\n\n  const addSigner = addr => {\n    if (!signers.has(addr)) {\n      signers.set(addr, i)\n      i++\n    }\n  }\n\n  addSigner(tx.proposalKey.address)\n  addSigner(tx.payer)\n  tx.authorizers.forEach(addSigner)\n\n  return signers\n}\n\nconst validatePayload = tx => {\n  payloadFields.forEach(field => checkField(tx, field))\n  proposalKeyFields.forEach(field =>\n    checkField(tx.proposalKey, field, \"proposalKey\")\n  )\n}\n\nconst validateEnvelope = tx => {\n  envelopeFields.forEach(field => checkField(tx, field))\n  tx.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n}\n\nconst isNumber = v => typeof v === \"number\"\nconst isString = v => typeof v === \"string\"\nconst isObject = v => v !== null && typeof v === \"object\"\nconst isArray = v => isObject(v) && v instanceof Array\n\nconst payloadFields = [\n  {name: \"script\", check: isString},\n  {name: \"arguments\", check: isArray},\n  {name: \"refBlock\", check: isString, defaultVal: \"0\"},\n  {name: \"gasLimit\", check: isNumber},\n  {name: \"proposalKey\", check: isObject},\n  {name: \"payer\", check: isString},\n  {name: \"authorizers\", check: isArray},\n]\n\nconst proposalKeyFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sequenceNum\", check: isNumber},\n]\n\nconst envelopeFields = [{name: \"payloadSigs\", check: isArray}]\n\nconst payloadSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst checkField = (obj, field, base, index) => {\n  const {name, check, defaultVal} = field\n  if (obj[name] == null && defaultVal != null) obj[name] = defaultVal\n  if (obj[name] == null) throw missingFieldError(name, base, index)\n  if (!check(obj[name])) throw invalidFieldError(name, base, index)\n}\n\nconst printFieldName = (field, base, index) => {\n  if (!!base)\n    return index == null ? `${base}.${field}` : `${base}.${index}.${field}`\n  return field\n}\n\nconst missingFieldError = (field, base, index) =>\n  new Error(`Missing field ${printFieldName(field, base, index)}`)\nconst invalidFieldError = (field, base, index) =>\n  new Error(`Invalid field ${printFieldName(field, base, index)}`)\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"../encode/encode.js\"\n\nexport async function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature,\n        })),\n      })\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nfunction findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  inside.add(ix.proposer)\n  inside.delete(ix.payer)\n  return Array.from(inside)\n}\n\nfunction findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set([ix.payer])\n  return Array.from(outside)\n}\n\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    // if (!acct.role.proposer) {\n    //   ix.accounts[id].keyId = keyId\n    // }\n    ix.accounts[id].signature = signature\n  }\n}\n\nfunction buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.0\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix) {\n  return {\n    script: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    gasLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: sansPrefix(ix.accounts[ix.payer].addr),\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import { get, pipe, Ok, Bad } from \"../interaction/interaction.js\"\n\nexport async function resolveValidators(ix) {\n  const validators = get(ix, 'ix.validators', [])\n  return pipe(ix, validators.map(cb => ix => cb(ix, { Ok, Bad })))\n}   \n","import {pipe, isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nimport {send} from \"../send/sdk-send.js\"\nimport {build} from \"../build/build.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nimport {resolveRefBlockId} from \"./resolve-ref-block-id.js\"\nimport {resolveCadence} from \"./resolve-cadence.js\"\nimport {resolveArguments} from \"./resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolve-accounts.js\"\nimport {resolveSignatures} from \"./resolve-signatures.js\"\nimport {resolveValidators} from \"./resolve-validators.js\"\nimport {resolveFinalNormalization} from \"./resolve-final-normalization.js\"\n\n// export const resolve = pipe([\n//   resolveCadence,\n//   resolveArguments,\n//   resolveAccounts,\n//   resolveRefBlockId(opts),\n//   resolveSignatures,\n//   resolveValidators,\n// ])\n\nexport const resolve = pipe([\n    resolveCadence,\n    resolveArguments,\n    resolveAccounts,\n    /* special */ execFetchRef,\n    /* special */ execFetchSequenceNumber,\n    resolveSignatures,\n    resolveFinalNormalization,\n    resolveValidators,\n])\n\nasync function execFetchRef(ix) {\n    if (isTransaction(ix) && ix.message.refBlock == null) {\n        ix.message.refBlock = (await send([getBlock()], opts).then(decode)).id\n    }\n    return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\nif (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n    ix.accounts[acct.tempId].sequenceNum = await send(await build([getAccount(acct.addr)])).then(decode)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n}\nreturn ix\n}\n  ","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {\n  interaction,\n  pipe,\n} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {resolve as defaultResolve} from \"../resolve/resolve.js\"\nimport {send as defaultSend} from \"./sdk-send.js\"\n\n// import {interaction, pipe} from \"@onflow/interaction\"\n// import {send as defaultSend} from \"@onflow/send\"\n// import {resolve as defaultResolve} from \"@onflow/sdk-resolve\"\n// import {config} from \"@onflow/config\"\n\nexport const send = async (args = [], opts = {}) => {\n  const sendFunction = await config().get(\"sdk.send\", opts.send || defaultSend)\n  const resolveFunction = await config().get(\n    \"sdk.resolve\",\n    opts.resolve || defaultResolve\n  )\n  if (Array.isArray(args)) args = pipe(interaction(), args)\n  return sendFunction(await resolveFunction(args), opts)\n}\n\n","import {pipe, makeAuthorizer} from \"../interaction/interaction.js\"\n\nconst roles = {\n  authorizer: true,\n}\n\nexport function authorizations(ax = []) {\n  return pipe(\n    ax.map((authz) => {\n      return typeof authz === \"function\"\n        ? makeAuthorizer({resolve: authz, role: roles, roles})\n        : makeAuthorizer({...authz, role: roles, roles})\n    })\n  )\n}\n\nexport function authorization(addr, signingFunction, keyId, sequenceNum) {\n  return {addr, signingFunction, keyId, sequenceNum}\n}\n","import {update} from \"../interaction/interaction.js\"\n\nexport function validator(cb) {\n    return update('ix.validators', validators => \n        Array.isArray(validators) ? validators.push(cb) : [cb]\n    )\n}\n","import {pipe, makeProposer} from \"../interaction/interaction.js\"\n\nconst roles = {\n  proposer: true,\n}\n\nexport async function proposer(authz) {\n  return typeof authz === \"function\"\n    ? makeProposer({resolve: authz, role: roles, roles})\n    : makeProposer({...authz, role: roles, roles})\n}\n","import {pipe, makePayer} from \"../interaction/interaction.js\"\n\nconst roles = {\n  payer: true\n}\n\nexport function payer(authz) {\n  return typeof authz === \"function\"\n    ? makePayer({resolve: authz, role: roles, roles})\n    : makePayer({...authz, role: roles, roles})\n}\n","import {pipe, put, Ok, makeTransaction} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nconst DEFAULT_COMPUTE_LIMIT = 10\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.cadence\", template(...args)),\n    ix => {\n      ix.message.computeLimit = ix.message.computeLimit || DEFAULT_COMPUTE_LIMIT\n      ix.message.refBlock = ix.message.refBlock || DEFUALT_REF\n      ix.authorizations = ix.authorizations || DEFAULT_SCRIPT_ACCOUNTS\n      return Ok(ix)\n    },\n  ])\n}\n","import {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {send} from \"../send/send.js\"\n\nexport function account(address, opts) {\n  return send([getAccount(address)], opts).then(decode)\n}\n","import {pipe, makeArgument} from \"../interaction/interaction.js\"\n\nexport function args(ax = []) {\n  return pipe(ax.map(makeArgument))\n}\n\nexport function arg(value, xform) {\n  return {value, xform}\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockHeight(height) {\n  return pipe([\n    ix => {\n      ix.block.height = height\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (typeof ix.block.isSealed === \"boolean\") return Bad(ix, \"Unable to specify both block height and isSealed.\")\n      if (ix.block.id) return Bad(ix, \"Unable to specify both block height and block id.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {isGetAccount, pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockId(id) {\n  return pipe([\n    ix => {\n      ix.block.id = id\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (isGetAccount(ix)) return Bad(ix, \"Unable to specify a block id with a Get Account interaction.\")\n      if (typeof ix.block.isSealed === \"boolean\") return Bad(ix, \"Unable to specify both block id and isSealed.\")\n      if (ix.block.height) return Bad(ix, \"Unable to specify both block id and block height.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {decodeResponse} from \"./decode.js\"\nimport {config} from \"@onflow/config\"\n\nexport async function decode(response) {\n  const decodersFromConfig = await config().where(/^decoder\\./)\n  const decoders = Object.entries(decodersFromConfig).map(\n    ([pattern, xform]) => {\n      pattern = `/${pattern.replace(/^decoder\\./, \"\")}$/`\n      return [pattern, xform]\n    }\n  )\n\n  return decodeResponse(response, Object.fromEntries(decoders))\n}\n","import {pipe, Ok, makeGetBlockByHeight} from \"../interaction/interaction.js\"\n\nexport function getBlockByHeight(height) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockByHeight builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0003-deprecate-get-block-by-height-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockByHeight,\n    ix => {\n      ix.block.height = height\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockById} from \"../interaction/interaction.js\"\n\nexport function getBlockById(id) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockById builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0004-deprecate-get-block-by-id-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockById,\n    ix => {\n      ix.block.ids = [id]\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockHeader} from \"../interaction/interaction.js\"\n\nexport function getBlockHeader(isSealed = null) {\n  return pipe([\n    makeGetBlockHeader,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEvents(eventType, start, end) {\n\n  if (typeof start !== \"undefined\" || typeof end !== \"undefined\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing a start and end into getEnvents has been deprecated and will not be supported in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )  \n  }\n\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockHeightRange(eventType, start, end) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockIds(blockIds = []) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.blockIds = blockIds\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetLatestBlock} from \"../interaction/interaction.js\"\n\nexport function getLatestBlock(isSealed = false) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getLatestBlock builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0006-deprecate-get-latest-block-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetLatestBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransaction} from \"../interaction/interaction.js\"\n\nexport function getTransaction(transactionId) {\n  return pipe([\n    makeGetTransaction,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"../interaction/interaction.js\"\n\nexport function getTransactionStatus(transactionId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","import { Ok, Bad } from \"../interaction/interaction.js\"\n\nexport function invariant(...args) {\n  if (args.length > 1) {\n    const [predicate, message] = args\n    return invariant((ix, { Ok, Bad }) => {\n      return predicate ? Ok(ix) : Bad(ix, message)\n    })\n  }\n  const [fn] = args\n  return ix => fn(ix, {Ok, Bad})\n}\n","import {send} from \"../send/send.js\"\nimport {getBlock} from \"../build/build-get-block\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nexport function latestBlock(...args) {\n  let opts = args[1] || (typeof args[0] === \"object\" ? args[0] : undefined)\n  let isSealed = typeof args[0] === \"boolean\" ? args[0] : undefined\n\n  if (typeof args[0] !== \"object\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing options as the first arguement to the latestBlock function has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0007-deprecate-opts-first-arg-latest-block\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n  }\n\n  return send([getBlock(isSealed)], opts).then(decode)\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function limit(computeLimit) {\n  return pipe([\n    ix => {\n      ix.message.computeLimit = computeLimit\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeParam} from \"../interaction/interaction.js\"\n\nexport function params(px = []) {\n  return pipe(px.map(makeParam))\n}\n\nexport function param(value, xform = null, key = null) {\n  return {key, value, xform: null}\n}\n","import {makePing} from \"../interaction/interaction.js\"\n\nexport function ping() {\n  return makePing\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function ref(refBlock) {\n  return pipe([\n    ix => {\n      ix.message.refBlock = refBlock\n      return Ok(ix)\n    }\n  ])\n}\n","import {resolveCadence} from \"./resolve-cadence.js\"\n\nexport function resolveParams (ix) {\n  console.error(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n\n      The resolver sdk.resolveParams is being replaced with the package @onflow/sdk-resolve-cadence\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0002-deprecate-resolve-params-resolver\n\n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n\n  return resolveCadence(ix)\n}\n","import {isTransaction, Ok, interaction, pipe} from \"../interaction/interaction.js\"\nimport {send} from \"../send/sdk-send.js\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\n\nasync function getRefId (opts) {\n  var ix\n  ix = await pipe(interaction(), [getBlock()])\n  ix = await send(ix, opts)\n  ix = await decodeResponse(ix)\n  return ix.id\n}\n\nexport function resolveRefBlockId(opts) {\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.message.refBlock) return Ok(ix)\n\n    ix.message.refBlock = await getRefId(opts)\n\n    return Ok(ix)\n  }\n}\n","import {pipe, Ok, put, makeScript} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nexport function script(...args) {\n  return pipe([\n    makeScript,\n    put(\"ix.cadence\", template(...args))\n  ])\n}\n"],"names":["IX","KEYS","Set","Object","keys","JSON","parse","interaction","isArray","d","Array","isNull","CHARS","split","randChar","Math","random","length","uuid","from","join","Ok","ix","status","Bad","reason","makeIx","wat","tag","makeAccount","acct","tempId","accounts","addr","keyId","sequenceNum","signature","signingFunction","resolve","role","makeParam","param","message","params","push","key","value","asParam","xform","makeArgument","arg","arguments","asArgument","makeScript","makeTransaction","makeGetTransactionStatus","makeGetTransaction","makeGetAccount","makeGetEvents","makeGetLatestBlock","makeGetBlockById","makeGetBlockByHeight","makePing","makeGetBlock","makeGetBlockHeader","is","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetTransaction","isGetAccount","isGetEvents","isGetLatestBlock","isGetBlockById","isGetBlockByHeight","isPing","isGetBlock","isGetBlockHeader","isBad","recPipe","fns","body","recover","result","has","Error","hardMode","hd","rest","cur","hasOwnProperty","isInteraction","e","then","pipe","arg1","arg2","identity","v","get","fallback","assigns","put","update","fn","build","response","unary","host","method","request","Promise","reject","grpc","onEnd","statusMessage","Code","OK","setDefaultTransport","NodeHttpTransport","hexBuffer","hex","Buffer","addressBuffer","padStart","pad","u8ToHex","u8","toString","send","opts","node","tx","Transaction","setScript","cadence","setGasLimit","computeLimit","setReferenceBlockId","refBlock","setPayer","sansPrefix","payer","forEach","addArguments","stringify","argumentBuffer","authorizations","map","reduce","prev","current","find","item","addAuthorizers","proposalKey","ProposalKey","setAddress","proposer","setKeyId","setSequenceNumber","setProposalKey","values","sig","Signature","setSignature","addPayloadSignatures","error","console","addEnvelopeSignatures","req","SendTransactionRequest","setTransaction","t1","Date","now","AccessAPI","SendTransaction","res","t2","ret","transactionId","getId_asU8","window","dispatchEvent","CustomEvent","detail","txId","delta","sendTransaction","GetTransactionRequest","setId","transaction","id","GetTransactionResult","events","getEventsList","getStatus","statusCode","getStatusCode","errorMessage","getErrorMessage","event","type","getType","getTransactionId_asU8","transactionIndex","getTransactionIndex","eventIndex","getEventIndex","payload","getPayload_asU8","sendGetTransactionStatus","GetTransaction","unwrapSignature","address","getAddress_asU8","getKeyId","getSequenceNumber_asU8","getTransaction","script","getScript_asU8","_arguments2","getArgumentsList","referenceBlockId","getReferenceBlockId_asU8","gasLimit","getGasLimit","sequenceNumber","getSequenceNumber","unwrapKey","getProposalKey","getPayer_asU8","authorizers","getAuthorizersList","payloadSignatures","getPayloadSignaturesList","envelopeSignatures","getEnvelopeSignaturesList","sendGetTransaction","block","ExecuteScriptAtBlockIDRequest","setBlockId","height","ExecuteScriptAtBlockHeightRequest","setBlockHeight","Number","ExecuteScriptAtLatestBlockRequest","code","ExecuteScriptAtLatestBlock","encodedData","getValue_asU8","sendExecuteScript","GetAccountAtBlockHeightRequest","GetAccountAtLatestBlockRequest","setHeight","account","GetAccount","contractsMap","getAccount","contracts","getContractsMap","getEntryList","acc","contract","TextDecoder","decode","UInt8Array","withPrefix","balance","getBalance","getCode_asU8","getKeysList","publicKey","index","getIndex","getPublicKey_asU8","signAlgo","getSignAlgo","hashAlgo","getHashAlgo","weight","getWeight","revoked","getRevoked","sendGetAccount","start","GetEventsForHeightRangeRequest","GetEventsForBlockIDsRequest","setType","eventType","setStartHeight","setEndHeight","end","blockIds","addBlockIds","GetEventsForHeightRange","results","getResultsList","blocks","blockId","getBlockId","blockHeight","getBlockHeight","blockTimestamp","getBlockTimestamp","sendGetEvents","GetLatestBlockRequest","latestBlock","isSealed","setIsSealed","replace","trim","GetLatestBlock","getBlock","collectionGuarantees","getCollectionGuaranteesList","blockSeals","getBlockSealsList","signatures","getSignaturesList","parentId","getParentId_asU8","getHeight","timestamp","getTimestamp","collectionGuarantee","collectionId","getCollectionId_asU8","blockSeal","getBlockId_asU8","executionReceiptId","getExecutionReceiptId_asU8","executionReceiptSignatures","getExecutionReceiptSignaturesList","resultApprovalSignatures","getResultApprovalSignaturesList","sendGetLatestBlock","GetBlockByIDRequest","GetBlockByID","sendGetBlockById","GetBlockByHeightRequest","GetBlockByHeight","sendGetBlockByHeight","PingRequest","Ping","sendPing","config","decodeNumber","num","_","stack","decodeImplicit","i","decodeComposite","composite","decoders","fields","recurseDecode","name","decoded","decoder","decoderLookup","defaultDecoders","UInt","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","UFix64","Fix64","String","Character","Bool","Address","Void","Optional","optional","Reference","array","all","Dictionary","dictionary","Event","Resource","Struct","lookup","found","test","RegExp","substring","decodeInstructions","customDecoders","decodeResponse","data","blockHeader","_exit2","resolveCadence","invariant","isString","where","entries","isFn","resolveArguments","Symbol","iterator","pact","state","s","o","_settle","bind","observer","_Pact","prototype","onFulfilled","onRejected","this","callback","_this","thenable","resolveAccounts","collectAccounts","last","depth","curr","target","check","step","_cycle","next","done","_isSettledPact","_fixup","TypeError","ax","old","authorizer","f_type","f_vsn","roles","args","buildPreSignable","paddedHexBuffer","argumentToString","rlpEncode","encode","preparePayload","validatePayload","preparePayloadSignatures","signers","collectSigners","payloadSigs","signerIndex","sort","a","b","Map","addSigner","set","payloadFields","field","checkField","proposalKeyFields","isNumber","isObject","defaultVal","envelopeFields","payloadSigFields","obj","base","missingFieldError","invalidFieldError","printFieldName","resolveSignatures","insideSigners","inside","add","findInsideSigners","prepForEncoding","insidePayload","fetchSignature","outsideSigners","outside","findOutsideSigners","outsidePayload","validateEnvelope","prepareEnvelope","encodeOutsideMessage","buildSignable","cid","resolveValidators","validators","cb","_send$then","defaultSend","sendFunction","defaultResolve","resolveFunction","validator","DEFAULT_SCRIPT_ACCOUNTS","authz","decodersFromConfig","pattern","fromEntries","warn","ids","predicate","undefined","px","getRefId","template"],"mappings":"4jCAyDMA,soBAwCAC,EAAO,IAAIC,IAAIC,OAAOC,KAAKC,KAAKC,MAAMN,KAE/BO,EAAc,kBAAMF,KAAKC,MAAMN,IAEtCQ,EAAU,SAACC,UAAMC,MAAMF,QAAQC,IAE/BE,EAAS,SAACF,UAAW,MAALA,GAIhBG,EAAQ,uCAAuCC,MAAM,IACrDC,EAAW,kBAAMF,KAASG,KAAKC,SAAWJ,EAAMK,UACzCC,EAAO,kBAAMR,MAAMS,KAAK,CAACF,OAAQ,IAAKH,GAAUM,KAAK,KAQrDC,EAAK,SAACC,GAEjB,OADAA,EAAGC,OAvGoB,KAwGhBD,GAGIE,EAAM,SAACF,EAAIG,GAGtB,OAFAH,EAAGC,OA7GoB,MA8GvBD,EAAGG,OAASA,EACLH,GAGHI,EAAS,SAACC,mBAASL,GAEvB,OADAA,EAAGM,IAAMD,EACFN,EAAGC,KAGNO,EAAc,SAACC,EAAMC,mBAAYT,GAarC,OAZAA,EAAGU,SAASD,GAAU1B,KAAKC,yRAC3BgB,EAAGU,SAASD,GAAQA,OAASA,EAC7BT,EAAGU,SAASD,GAAQE,KAAOH,EAAKG,KAChCX,EAAGU,SAASD,GAAQG,MAAQJ,EAAKI,MACjCZ,EAAGU,SAASD,GAAQI,YAAcL,EAAKK,YACvCb,EAAGU,SAASD,GAAQK,UAAYN,EAAKM,UACrCd,EAAGU,SAASD,GAAQM,gBAAkBP,EAAKO,gBAC3Cf,EAAGU,SAASD,GAAQO,QAAUR,EAAKQ,QACnChB,EAAGU,SAASD,GAAQQ,UACfjB,EAAGU,SAASD,GAAQQ,KACpBT,EAAKS,MAEHlB,EAAGC,KAqBCkB,EAAY,SAACC,mBAAWnB,GACnC,IAAIS,EAASb,IAUb,OATAI,EAAGoB,QAAQC,OAAOC,KAAKb,GAEvBT,EAAGqB,OAAOZ,GAAU1B,KAAKC,0IACzBgB,EAAGqB,OAAOZ,GAAQA,OAASA,EAC3BT,EAAGqB,OAAOZ,GAAQc,IAAMJ,EAAMI,IAC9BvB,EAAGqB,OAAOZ,GAAQe,MAAQL,EAAMK,MAChCxB,EAAGqB,OAAOZ,GAAQgB,QAAUN,EAAMM,QAClCzB,EAAGqB,OAAOZ,GAAQiB,MAAQP,EAAMO,MAChC1B,EAAGqB,OAAOZ,GAAQO,QAAUG,EAAMH,QAC3BjB,EAAGC,KAGC2B,EAAe,SAACC,mBAAS5B,GACpC,IAAIS,EAASb,IASb,OARAI,EAAGoB,QAAQS,UAAUP,KAAKb,GAE1BT,EAAG6B,UAAUpB,GAAU1B,KAAKC,iIAC5BgB,EAAG6B,UAAUpB,GAAQA,OAASA,EAC9BT,EAAG6B,UAAUpB,GAAQe,MAAQI,EAAIJ,MACjCxB,EAAG6B,UAAUpB,GAAQqB,WAAaF,EAAIE,WACtC9B,EAAG6B,UAAUpB,GAAQiB,MAAQE,EAAIF,MACjC1B,EAAG6B,UAAUpB,GAAQO,QAAUY,EAAIZ,QAC5BjB,EAAGC,KAIC+B,EAAoC3B,EAlME,UAmMtC4B,EAAoC5B,EAlME,eAmMtC6B,EAAoC7B,EAlME,0BAmMtC8B,EAAoC9B,EA9LE,mBA+LtC+B,EAAoC/B,EAnME,eAoMtCgC,EAAoChC,EAnME,cAoMtCiC,EAAoCjC,EAnME,oBAoMtCkC,EAAoClC,EAjME,mBAkMtCmC,EAAoCnC,EAjME,uBAkMtCoC,EAAoCpC,EArME,QAsMtCqC,EAAoCrC,EAlME,aAmMtCsC,EAAoCtC,EAlME,oBAoM7CuC,EAAK,SAACtC,mBAASL,UAAOA,EAAGM,MAAQD,IAE1BuC,EAAkCD,EAlNI,WAmNtCE,EAAkCF,EAlNI,UAmNtCG,EAAkCH,EAlNI,eAmNtCI,EAAkCJ,EAlNI,0BAmNtCK,EAAkCL,EA9MI,mBA+MtCM,EAAkCN,EAnNI,eAoNtCO,EAAkCP,EAnNI,cAoNtCQ,EAAkCR,EAnNI,oBAoNtCS,EAAkCT,EAjNI,mBAkNtCU,EAAkCV,EAjNI,uBAkNtCW,EAAkCX,EArNI,QAsNtCY,EAAkCZ,EAlNI,aAmNtCa,EAAkCb,EAlNI,oBAqNtCc,EAAc,SAACzD,SAnNH,QAmNUA,EAAGC,QAehCyD,WAAAA,EAAiB1D,EAAI2D,YAAAA,IAAAA,EAAM,+BAkU1B,SAAgBC,EAAMC,GAC5B,IACC,IAAIC,kBAlUkB9D,oBACpB,GADAA,EAVa,SAACA,GAChB,cAAgBnB,OAAOC,KAAKkB,kBAAK,CAA5B,IAAIuB,OACP,IAAK5C,EAAKoF,IAAIxC,GACZ,UAAUyC,UAAUzC,sDAExB,OAAOvB,EAKAiE,IACDR,EAAMzD,GAAK,UAAUgE,4BAA4BhE,EAAGG,QACxD,IAAKwD,EAAIhE,OAAQ,OAAOK,EAHtB,IAIKkE,EAAeP,KAARQ,EAAQR,kCACJO,iBAAZE,GACN,GA9I6B,mBA8IpBA,EAAM,OAAOV,EAAQU,EAAIpE,GAAKmE,GACvC,GAAI9E,EAAO+E,KAASA,EAAK,OAAOV,EAAQ1D,EAAImE,GAC5C,GA1IyB,SAACnE,GAC5B,GAVgC,iBAUrBA,GAAOX,EAAOW,IARG,WAQaA,EAAK,SAC9C,IATe,2rBASCrB,kBAAM,IAAKqB,EAAGqE,wBAAqB,SACnD,SAuIMC,CAAcF,GAAM,OAAOV,EAAQU,EAAKD,GAC5C,UAAUH,MAAM,uCA2TjB,MAAMO,GACP,OAAOV,EAAQU,GAEhB,OAAIT,GAAUA,EAAOU,KACbV,EAAOU,UAAK,EAAQX,GAErBC,cAhUGS,GACP,MAAMA,KAZG,oCAgBAE,EAAO,SAAPA,mCACJC,OAAMC,OACb,OAAIzF,EAAQwF,IAAiB,MAARC,WAAsBxF,UAAMsF,EAAKtF,EAAGuF,IAClDhB,EAAQgB,EAAMC,IAGjBC,GAAW,SAACC,UAAMA,GAEXC,GAAM,SAAC9E,EAAIuB,EAAKwD,GAC3B,OAA0B,MAAnB/E,EAAGgF,QAAQzD,GAAewD,EAAW/E,EAAGgF,QAAQzD,IAG5C0D,GAAM,SAAC1D,EAAKC,mBAAWxB,GAElC,OADAA,EAAGgF,QAAQzD,GAAOC,EACXzB,EAAGC,KAGCkF,GAAS,SAAC3D,EAAK4D,mBAAAA,IAAAA,EAAKP,aAAc5E,GAE7C,OADAA,EAAGgF,QAAQzD,GAAO4D,EAAGnF,EAAGgF,QAAQzD,GAAMvB,GAC/BD,EAAGC,cCjRIoF,GAAMzB,GACpB,gBADoBA,IAAAA,EAAM,IACnBc,EAAKxF,IAAe0E,GCH7B,IAGa0B,GAAW,kBAAMtG,KAAKC,MAFnC,8GCIsBsG,YAAMC,EAAMC,EAAQC,OACxC,uBAAO,IAAIC,QAAQ,SAAC1E,EAAS2E,GAC3BC,OAAKN,MAAME,EAAQ,CACjBC,QAASA,EACTF,KAAMA,EACNM,MAAO,gBAAUC,IAAAA,gBAAR7F,SACQ2F,OAAKG,KAAKC,GACvBhF,IAF4BI,SAI5BuE,EAAO,IAAI3B,MAAM8B,UAT3B,oCAFAF,OAAKK,oBAAoBC,2BCMnBC,GAAY,SAAAC,UAAOC,OAAOxG,KAAKuG,EAAK,QACpCE,GAAgB,SAAA3F,UAHpB0F,OAAOxG,KAGqCc,EAH5B4F,SAASC,GAAS,GAAI,QCHlCC,GAAU,SAAAC,UAAML,OAAOxG,KAAK6G,GAAIC,SAAS,QCCzCF,GAAU,SAAAC,UAAML,OAAOxG,KAAK6G,GAAIC,SAAS,QCDzCF,GAAU,SAAAC,UAAML,OAAOxG,KAAK6G,GAAIC,SAAS,QCAzCF,GAAU,SAAAC,UAAML,OAAOxG,KAAK6G,GAAIC,SAAS,QCAzCF,GAAU,SAAAC,UAAML,OAAOxG,KAAK6G,GAAIC,SAAS,QCqBlCC,YAAc5G,EAAI6G,YAAAA,IAAAA,EAAO,0BAAO,OACzCA,EAAKC,uBACM9G,oBAEX,OAFAA,KAEQ,GACJ,KAAK8C,EAAc9C,GACf,gBNlB0BA,EAAI6G,YAAAA,IAAAA,EAAO,+BACpC7G,oBAAXA,IAEA,IAAM+G,EAAK,IAAIC,cACfD,EAAGE,UAT0BZ,OAAOxG,KASVG,EAAGoB,QAAQ8F,QATY,SAUjDH,EAAGI,YAAYnH,EAAGoB,QAAQgG,cAC1BL,EAAGM,oBACDrH,EAAGoB,QAAQkG,SAAWnB,GAAUnG,EAAGoB,QAAQkG,UAAY,MAEzDP,EAAGQ,SAASjB,GAAckB,aAAWxH,EAAGU,SAASV,EAAGyH,OAAO9G,QAC3DX,EAAGoB,QAAQS,UAAU6F,QAAQ,SAAA9F,UAC3BmF,EAAGY,aAbgB,SAAA/F,UAAOyE,OAAOxG,KAAKd,KAAK6I,UAAUhG,GAAM,QAa3CiG,CAAe7H,EAAG6B,UAAUD,GAAKE,eAEnD9B,EAAG8H,eACAC,IAAI,SAAAtH,UAAUT,EAAGU,SAASD,GAAQE,OAClCqH,OAAO,SAACC,EAAMC,GACb,OAAOD,EAAKE,KAAK,SAAAC,UAAQA,IAASF,IAAWD,YAAWA,GAAMC,KAC7D,IACFR,QAAQ,SAAA/G,UAAQoG,EAAGsB,eAAe/B,GAAckB,aAAW7G,OAE9D,IAAM2H,EAAc,IAAItB,cAAYuB,YACpCD,EAAYE,WACVlC,GAAckB,aAAWxH,EAAGU,SAASV,EAAGyI,UAAU9H,QAEpD2H,EAAYI,SAAS1I,EAAGU,SAASV,EAAGyI,UAAU7H,OAC9C0H,EAAYK,kBAAkB3I,EAAGU,SAASV,EAAGyI,UAAU5H,aAEvDkG,EAAG6B,eAAeN,GAGlB,cAAiBzJ,OAAOgK,OAAO7I,EAAGU,yBAAW,CAAxC,IAAIF,OACP,IACE,IAAKA,EAAKS,KAAKwG,OAA2B,MAAlBjH,EAAKM,UAAmB,CAC9C,IAAMgI,EAAM,IAAI9B,cAAY+B,UAC5BD,EAAIN,WAAWlC,GAAckB,aAAWhH,EAAKG,QAC7CmI,EAAIJ,SAASlI,EAAKI,OAClBkI,EAAIE,aAAa7C,GAAU3F,EAAKM,YAChCiG,EAAGkC,qBAAqBH,IAE1B,MAAOI,GAEP,MADAC,QAAQD,MAAM,qCAAsC,CAAC1I,KAAAA,EAAMR,GAAAA,IACrDkJ,GAKV,cAAiBrK,OAAOgK,OAAO7I,EAAGU,yBAAW,CAAxC,IAAIF,OACP,IACE,GAAIA,EAAKS,KAAKwG,OAA2B,MAAlBjH,EAAKM,UAAmB,CAC7C,IAAMgI,EAAM,IAAI9B,cAAY+B,UAC5BD,EAAIN,WAAWlC,GAAckB,aAAWhH,EAAKG,QAC7CmI,EAAIJ,SAASlI,EAAKI,OAClBkI,EAAIE,aAAa7C,GAAU3F,EAAKM,YAChCiG,EAAGqC,sBAAsBN,IAE3B,MAAOI,GAEP,MADAC,QAAQD,MAAM,sCAAuC,CAAC1I,KAAAA,EAAMR,GAAAA,IACtDkJ,GAIV,IAAMG,EAAM,IAAIC,yBAChBD,EAAIE,eAAexC,GAEnB,IAAIyC,EAAKC,KAAKC,MAhEqC,uBAiEjCpE,GAAMuB,EAAKC,KAAM6C,YAAUC,gBAAiBP,kBAAxDQ,GACN,IA1EcnD,EA0EVoD,EAAKL,KAAKC,MAEVK,EAAM1E,KAYV,OAXA0E,EAAIzJ,IAAMN,EAAGM,IACbyJ,EAAIC,eA9EUtD,EA8EcmD,EAAII,aA9EZ5D,OAAOxG,KAAK6G,GAAIC,SAAS,QAgFvB,oBAAXuD,QACTA,OAAOC,cACL,IAAIC,YAAY,WAAY,CAC1BC,OAAQ,CAACC,KAAMP,EAAIC,cAAeO,MAAOT,EAAKN,MAK7CO,MAhFT,mCMkBmBS,CAAgBxK,EAAI6G,GAC/B,KAAK9D,EAAuB/C,GACxB,gBC1BmCA,EAAI6G,YAAAA,IAAAA,EAAO,+BAC7C7G,oBAAXA,IAEA,IAAMqJ,EAAM,IAAIoB,wBAH4C,OAI5DpB,EAAIqB,MANmBrE,OAAOxG,KAMVG,EAAG2K,YAAYC,GANK,wBAQtBtF,GAAMuB,EAAKC,KAAM6C,YAAUkB,qBAAsBxB,kBAA7DQ,GAEN,IAAIiB,EAASjB,EAAIkB,gBAEbhB,EAAM1E,KAeV,OAdA0E,EAAIzJ,IAAMN,EAAGM,IACbyJ,EAAIY,YAAc,CAChB1K,OAAQ4J,EAAImB,YACZC,WAAYpB,EAAIqB,gBAChBC,aAActB,EAAIuB,kBAClBN,OAAQA,EAAO/C,IAAI,SAAAsD,SAAU,CAC3BC,KAAMD,EAAME,UACZvB,eArBUtD,EAqBa2E,EAAMG,wBArBbnF,OAAOxG,KAAK6G,GAAIC,SAAS,QAsBzC8E,iBAAkBJ,EAAMK,sBACxBC,WAAYN,EAAMO,gBAClBC,QAAS9M,KAAKC,MAAMqH,OAAOxG,KAAKwL,EAAMS,mBAAmBnF,SAAS,UAxBxD,IAAAD,KA4BPqD,MAzBT,mCD0BmBgC,CAAyB/L,EAAI6G,GACxC,KAAK7D,EAAiBhD,GAClB,gBL5B6BA,EAAI6G,YAAAA,IAAAA,EAAO,+BACvC7G,oBAAXA,IAEA,IAAMqJ,EAAM,IAAIoB,wBAHsC,OAItDpB,EAAIqB,MANmBrE,OAAOxG,KAMVG,EAAG2K,YAAYC,GANK,wBAQtBtF,GAAMuB,EAAKC,KAAM6C,YAAUqC,eAAgB3C,kBAAvDQ,GAEOA,EAAIkB,gBAAjB,IAEIhB,EAAM1E,KACV0E,EAAIzJ,IAAMN,EAAGM,IAEb,IAMM2L,EAAkB,SAAAnD,SAAQ,CAC9BoD,QAASzF,GAAQlF,IAAI4K,mBACrBvL,MAAOW,IAAI6K,WACXtL,UAAW2F,GAAQlF,IAAI8K,4BAGrB1B,EAAcZ,EAAIuC,iBA0BtB,OAzBAvC,EAAIY,YAAc,CACd4B,OAAQ9F,GAAQkE,EAAY6B,kBAC5BC,YAAY9B,EAAY+B,mBAAoB3E,IAAItB,IAChDkG,iBAAkBlG,GAAQkE,EAAYiC,4BACtCC,SAAUlC,EAAYmC,cACtBxE,YAlBc,SAAA/G,SAAQ,CACxB2K,QAASzF,GAAQlF,EAAI4K,mBACrBvL,MAAOW,EAAI6K,WACXW,eAAgBxL,EAAIyL,qBAeLC,CAAUtC,EAAYuC,kBACnCzF,MAAOhB,GAAQkE,EAAYwC,iBAC3BC,YAAczC,EAAY0C,qBAAsBtF,IAAItB,IACpD6G,kBAAoB3C,EAAY4C,2BAA4BxF,IAAIkE,GAChEuB,mBAAqB7C,EAAY8C,4BAA6B1F,IAAIkE,IAgB/DlC,MAnDT,mCK4BmB2D,CAAmB1N,EAAI6G,GAClC,KAAKhE,EAAS7C,GACV,gBE9B4BA,EAAI6G,YAAAA,IAAAA,EAAO,+BACtC7G,oBAEX,IAAIqJ,GAFJrJ,KAGO2N,MAAM/C,IACXvB,EAAM,IAAIuE,iCACNC,WARiBxH,OAAOxG,KAQHG,EAAG2N,MAAM/C,GARI,QAS7B5K,EAAG2N,MAAMG,QAClBzE,EAAM,IAAI0E,qCACNC,eAAeC,OAAOjO,EAAG2N,MAAMG,SAEnCzE,EAAM,IAAI6E,oCAGZ,IAAMC,EAAO9H,OAAOxG,KAAKG,EAAGoB,QAAQ8F,QAAS,QAdQ,OAerDlH,EAAGoB,QAAQS,UAAU6F,QAAQ,SAAA9F,UAAOyH,EAAI1B,aAlBnB,SAAA/F,UAAOyE,OAAOxG,KAAKd,KAAK6I,UAAUhG,GAAM,QAkBRiG,CAAe7H,EAAG6B,UAAUD,GAAKE,eACtFuH,EAAIpC,UAAUkH,mBAEI7I,GAAMuB,EAAKC,KAAM6C,YAAUyE,2BAA4B/E,kBAAnEQ,GAEN,IAAIE,EAAM1E,KAIV,OAHA0E,EAAIzJ,IAAMN,EAAGM,IACbyJ,EAAIsE,YAActP,KAAKC,MAAMqH,OAAOxG,KAAKgK,EAAIyE,iBAAiB3H,SAAS,SAEhEoD,MAxBT,mCF8BmBwE,CAAkBvO,EAAI6G,GACjC,KAAK5D,EAAajD,GACd,gBJ5ByBA,EAAI6G,YAAAA,IAAAA,EAAO,+BACnC7G,oBAEX,IALoBW,EAKd0I,GAFNrJ,KAEe2N,MAAMG,OAAS,IAAIU,iCAAmC,IAAIC,iCAHvB,OAI9CzO,EAAG2N,MAAMG,QAAQzE,EAAIqF,UAAUT,OAAOjO,EAAG2N,MAAMG,SACnDzE,EAAIb,YAPgB7H,EAOS6G,aAAWxH,EAAG2O,QAAQhO,MATnD0F,OAAOxG,KAEqCc,EAF5B4F,SAASC,GAAS,GAAI,yBAWpBlB,GAAMuB,EAAKC,KAAM6C,YAAUiF,WAAYvF,kBAAnDQ,GAEN,IAAIE,EAAM1E,KACV0E,EAAIzJ,IAAMN,EAAGM,IAEb,IAEIuO,EAFEF,EAAU9E,EAAIiF,aAGdC,GAAaF,EAAeF,EAAQK,mBAAqBH,EAAaI,eAAejH,OAAO,SAACkH,EAAKC,qBACnGD,UACFC,EAAS,IAAK,IAAIC,YAAY,SAASC,OAAOF,EAAS,IAAM,IAAIG,iBAChE,IAAM,GAkBV,OAhBAvF,EAAI4E,QAAU,CACZzC,QAASqD,aAAW9I,GAAQkI,EAAQxC,oBACpCqD,QAASb,EAAQc,aACjBtB,KAAM,IAAIiB,YAAY,SAASC,OAAOV,EAAQe,gBAAkB,IAAIJ,YACpEP,UAAAA,EACAjQ,KAAM6P,EAAQgB,cAAc5H,IAAI,SAAA6H,SAAc,CAC5CC,MAAOD,EAAUE,WACjBF,UAAWnJ,GAAQmJ,EAAUG,qBAC7BC,SAAUJ,EAAUK,cACpBC,SAAUN,EAAUO,cACpBC,OAAQR,EAAUS,YAClBtD,eAAgB6C,EAAU5C,oBAC1BsD,QAASV,EAAUW,iBAIhBxG,MApCT,mCI4BmByG,CAAexQ,EAAI6G,GAC9B,KAAK3D,EAAYlD,GACb,gBGlCwBA,EAAI6G,YAAAA,IAAAA,EAAO,+BAClC7G,oBAEX,IAAMqJ,GAFNrJ,KAEe8K,OAAO2F,MAAQ,IAAIC,iCAAmC,IAAIC,8BAHxB,OAIjDtH,EAAIuH,QAAQ5Q,EAAG8K,OAAO+F,WAElB7Q,EAAG8K,OAAO2F,OACZpH,EAAIyH,eAAe7C,OAAOjO,EAAG8K,OAAO2F,QACpCpH,EAAI0H,aAAa9C,OAAOjO,EAAG8K,OAAOkG,OAElChR,EAAG8K,OAAOmG,SAASvJ,QAAQ,SAAAkD,UACzBvB,EAAI6H,YAbe7K,OAAOxG,KAaA+K,EAbU,0BAiBtBtF,GAAMuB,EAAKC,KAAM6C,YAAUwH,wBAAyB9H,kBAAhEQ,GAEN,IAAIE,EAAM1E,KACV0E,EAAIzJ,IAAMN,EAAGM,IAEb,IAAM8Q,EAAUvH,EAAIwH,iBAqBpB,OApBAtH,EAAIe,OAASsG,EAAQpJ,OAAO,SAACsJ,EAAQxN,GACnC,IAAMyN,EAAUzN,EAAO0N,aACjBC,EAAc3N,EAAO4N,iBACrBC,EAAiB7N,EAAO8N,oBAc9B,OAbe9N,EAAOiH,gBACfrD,QAAQ,SAAA2D,GA7BH,IAAA3E,EA8BV4K,EAAOhQ,KAAK,CACViQ,QAAAA,EACAE,YAAAA,EACAE,eAAAA,EACArG,KAAMD,EAAME,UACZvB,eAnCQtD,EAmCe2E,EAAMG,wBAnCfnF,OAAOxG,KAAK6G,GAAIC,SAAS,QAoCvC8E,iBAAkBJ,EAAMK,sBACxBC,WAAYN,EAAMO,gBAClBC,QAAS9M,KAAKC,MAAMqH,OAAOxG,KAAKwL,EAAMS,mBAAmBnF,SAAS,aAG/D2K,GACN,IAEIvH,MAzCT,mCHkCmB8H,CAAc7R,EAAI6G,GAC7B,KAAK1D,EAAiBnD,GAEtB,KAAKuD,EAAWvD,GACZ,gBHtB6BA,EAAI6G,YAAAA,IAAAA,EAAO,+BACvC7G,oBAAXA,IAEA,IAAMqJ,EAAM,IAAIyI,wBAHsC,OAKlD9R,EAAG+R,aAAe/R,EAAG+R,YAAYC,WACnC3I,EAAI4I,YAAYjS,EAAG+R,YAAYC,UAtBjC7I,QAAQD,MACN,wbASGgJ,QAAQ,SAAU,MAClBC,OACH,4CAcEnS,EAAG2N,OAAS3N,EAAG2N,MAAMqE,UACvB3I,EAAI4I,YAAYjS,EAAG2N,MAAMqE,0BAGT1M,GAAMuB,EAAKC,KAAM6C,YAAUyI,eAAgB/I,kBAAvDQ,GAEN,IAAM8D,EAAQ9D,EAAIwI,WAEZC,EAAuB3E,EAAM4E,8BAC7BC,EAAa7E,EAAM8E,oBACnBC,EAAa/E,EAAMgF,oBAEnB5I,EAAM1E,KAoBZ,OAnBA0E,EAAIzJ,IAAMN,EAAGM,IACbyJ,EAAI4D,MAAQ,CACV/C,GAAInE,GAAQkH,EAAM1D,cAClB2I,SAAUnM,GAAQkH,EAAMkF,oBACxB/E,OAAQH,EAAMmF,YACdC,UAAWpF,EAAMqF,eACjBV,qBAAsBA,EAAqBvK,IAAI,SAAAkL,SAAwB,CACrEC,aAAczM,GAAQwM,EAAoBE,wBAC1CT,WAAYO,EAAoBN,uBAElCH,WAAYA,EAAWzK,IAAI,SAAAqL,SAAc,CACvC7B,QAAS9K,GAAQ2M,EAAUC,mBAC3BC,mBAAoB7M,GAAQ2M,EAAUG,8BACtCC,2BAA4BJ,EAAUK,oCACtCC,yBAA0BN,EAAUO,qCAEtCjB,WAAYA,GAGP3I,MA1CT,mCGsBmB6J,CAAmB5T,EAAI6G,GAClC,KAAKzD,EAAepD,GAChB,gBFxC2BA,EAAI6G,YAAAA,IAAAA,EAAO,+BACrC7G,oBAAXA,IAEA,IAAMqJ,EAAM,IAAIwK,sBAHoC,OAIpDxK,EAAIqB,MANmBrE,OAAOxG,KAMVG,EAAG2N,MAAM/C,GANW,wBAQtBtF,GAAMuB,EAAKC,KAAM6C,YAAUmK,aAAczK,kBAArDQ,GAEN,IAAM8D,EAAQ9D,EAAIwI,WAEZC,EAAuB3E,EAAM4E,8BAC7BC,EAAa7E,EAAM8E,oBACnBC,EAAa/E,EAAMgF,oBAEnB5I,EAAM1E,KAoBZ,OAnBA0E,EAAIzJ,IAAMN,EAAGM,IACbyJ,EAAI4D,MAAQ,CACV/C,GAAInE,GAAQkH,EAAM1D,cAClB2I,SAAUnM,GAAQkH,EAAMkF,oBACxB/E,OAAQH,EAAMmF,YACdC,UAAWpF,EAAMqF,eACjBV,qBAAsBA,EAAqBvK,IAAI,SAAAkL,SAAwB,CACrEC,aAAczM,GAAQwM,EAAoBE,wBAC1CT,WAAYO,EAAoBN,uBAElCH,WAAYA,EAAWzK,IAAI,SAAAqL,SAAc,CACvC7B,QAAS9K,GAAQ2M,EAAUC,mBAC3BC,mBAAoB7M,GAAQ2M,EAAUG,8BACtCC,2BAA4BJ,EAAUK,oCACtCC,yBAA0BN,EAAUO,qCAEtCjB,WAAYA,GAGP3I,MAlCT,mCEwCmBgK,CAAiB/T,EAAI6G,GAChC,KAAKxD,EAAmBrD,GACpB,gBD3C+BA,EAAI6G,YAAAA,IAAAA,EAAO,+BACzC7G,oBAAXA,IAEA,IAAMqJ,EAAM,IAAI2K,0BAHwC,OAIxD3K,EAAIqF,UAAUT,OAAOjO,EAAG2N,MAAMG,yBAEZxI,GAAMuB,EAAKC,KAAM6C,YAAUsK,iBAAkB5K,kBAAzDQ,GAEN,IAAM8D,EAAQ9D,EAAIwI,WAEZC,EAAuB3E,EAAM4E,8BAC7BC,EAAa7E,EAAM8E,oBACnBC,EAAa/E,EAAMgF,oBAEnB5I,EAAM1E,KAoBZ,OAnBA0E,EAAIzJ,IAAMN,EAAGM,IACbyJ,EAAI4D,MAAQ,CACV/C,GAAInE,GAAQkH,EAAM1D,cAClB2I,SAAUnM,GAAQkH,EAAMkF,oBACxB/E,OAAQH,EAAMmF,YACdC,UAAWpF,EAAMqF,eACjBV,qBAAsBA,EAAqBvK,IAAI,SAAAkL,SAAwB,CACrEC,aAAczM,GAAQwM,EAAoBE,wBAC1CT,WAAYO,EAAoBN,uBAElCH,WAAYA,EAAWzK,IAAI,SAAAqL,SAAc,CACvC7B,QAAS9K,GAAQ2M,EAAUC,mBAC3BC,mBAAoB7M,GAAQ2M,EAAUG,8BACtCC,2BAA4BJ,EAAUK,oCACtCC,yBAA0BN,EAAUO,qCAEtCjB,WAAYA,GAGP3I,MAlCT,mCC2CmBmK,CAAqBlU,EAAI6G,GACpC,KAAKvD,EAAOtD,GACR,gBI/CmBA,EAAI6G,YAAAA,IAAAA,EAAO,+BAC7B7G,oBAAXA,IAEA,IAAMqJ,EAAM,IAAI8K,cAH4B,uBAK1B7O,GAAMuB,EAAKC,KAAM6C,YAAUyK,KAAM/K,kBAA7CQ,GAEN,IAAIE,EAAM1E,KAGV,OAFA0E,EAAIzJ,IAAMN,EAAGM,IAENyJ,MAVT,mCJ+CmBsK,CAASrU,EAAI6G,GACxB,QACI,OAAO7G,QA3BH6G,EAAKC,mDAAewN,WAASxP,IAAI,4BADhC,6CKvBDuN,GAASL,GACvB,gBADuBA,IAAAA,EAAW,MAC3BvN,EAAK,CACVhC,EACA,SAAAzC,GAEE,OADAA,EAAG2N,MAAMqE,SAAWA,EACbjS,EAAGC,eCJA8O,GAAWnO,GACzB,OAAO8D,EAAK,CACVtC,EACA,SAAAnC,GAEE,OADAA,EAAG2O,QAAQhO,KAAO6G,aAAW7G,GACtBZ,EAAGC,MCRhB,IAiBMuU,YAAsBC,EAAKC,EAAGC,OAClC,IACE,uBAAOzG,OAAOuG,IACd,MAAOjQ,GACP,UAAUP,+BAA+B0Q,EAAM5U,KAAK,OAJtC,oCAQZ6U,YAAwBC,0BAAMA,IA4B9BC,YAAyBC,EAAWC,EAAUL,8BAC5BI,EAAUE,OAAOhN,gBAAckH,EAAKrK,8BAC5CqK,oBADkD,OAC9DA,oBACoB+F,GAAcpQ,EAAErD,MAAOuT,YAAcL,GAAO7P,EAAEqQ,0BAClE,OADAhG,EAAIrK,EAAEqQ,QACChG,MAHa,oCAInBxJ,QAAQ1E,QAAQ,oBAJbmU,GAKN,IAAMC,EAAUN,EAAUlK,IAAMyK,GAAcN,EAAUD,EAAUlK,IANN,OAOrDwK,kBAAgBA,EAAQD,IAAWA,IAPvB,oCAUfG,GAAkB,CACtBC,KAAMhB,GACNiB,IAAKjB,GACLkB,MAAOlB,GACPmB,KAAMnB,GACNoB,OAAQpB,GACRqB,MAAOrB,GACPsB,OAAQtB,GACRuB,MAAOvB,GACPwB,OAAQxB,GACRyB,MAAOzB,GACP0B,QAAS1B,GACT2B,OAAQ3B,GACR4B,QAAS5B,GACT6B,OAAQ7B,GACR8B,MAAO9B,GACP+B,OAAQ/B,GACRgC,OAAQhC,GACRiC,OAAQjC,GACRkC,OAAQ9B,GACR+B,MAAO/B,GACPgC,OAAQhC,GACRiC,UAAWjC,GACXkC,KAAMlC,GACNmC,QAASnC,GACToC,uCA7D6B,OA8D7BC,kBA5D4BC,EAAUlC,EAAUL,0BAChDuC,EAAiBhC,GAAcgC,EAAUlC,EAAUL,GAAS,OA4D5DwC,mBA1D6BrS,8BAAO,CAACqH,QAASrH,EAAEqH,QAASZ,KAAMzG,EAAEyG,2CA2DjElM,eAzDyB+X,EAAOpC,EAAUL,8BACpChP,QAAQ0R,IACZD,EAAMpP,IACJ,SAAClD,cACKa,iBAAemE,8BACPoL,GAAcpQ,EAAGkQ,YAAcL,GAAO7P,EAAEyG,cAAlDzB,gFAqDRwN,oBAhD8BC,EAAYvC,EAAUL,8BAC9C4C,EAAWtP,gBAAckH,EAAKrK,8BACtBqK,oBAD4B,OACxCA,oBAEQ+F,GAAcpQ,EAAEtD,IAAKwT,YAAcL,GAAO7P,EAAEtD,gDAC1C0T,GAAcpQ,EAAErD,MAAOuT,YAAcL,GAAO7P,EAAEtD,yBACxD,OAHA2N,OAGOA,QALH,oCAMHxJ,QAAQ1E,QAAQ,0CA0CnBuW,MAAO1C,GACP2C,SAAU3C,GACV4C,OAAQ5C,IAGJQ,GAAgB,SAACN,EAAU2C,GAC/B,IAAMC,EAAQ9Y,OAAOC,KAAKiW,GAAU5M,KAAK,SAACiN,GACxC,MAAI,WAAWwC,KAAKxC,GACN,IAAIyC,OAAOzC,EAAQ0C,UAAU,EAAG1C,EAAQzV,OAAS,IAClDiY,KAAKF,GAEXtC,IAAYsC,IAErB,OAAOA,GAAUC,GAAS5C,EAAS4C,IAG/B1C,YAAuB8C,EAAoBhD,EAAUL,OACzD,IAAIU,EAAUC,GAAcN,EAAUgD,EAAmBzM,MACzD,IAAK8J,EACH,UAAUpR,kCACoB+T,EAAmBzM,SAAQoJ,EAAM5U,KAAK,MAJH,uBAMtDsV,EAAQ2C,EAAmBvW,MAAOuT,EAAUL,IANxC,oCASNrF,YACX0I,EACAC,EACAtD,YADAsD,IAAAA,EAAiB,aACjBtD,IAAAA,EAAQ,IAER,IAAIK,OAAeO,GAAoB0C,GADpC,uBAEU/C,GAAc8C,EAAoBhD,EAAUL,KAG9CuD,YAAwB5S,EAAU2S,YAAAA,IAAAA,EAAiB,cAC1DjD,OAAeO,GAAoB0C,KAEnC3S,EAASgJ,iCACEgB,GAAOhK,EAASgJ,YAAa0G,KACjC1P,EAASsF,iCAGFjF,QAAQ0R,IACpB/R,EAASsF,YAAYG,OAAO/C,aAAgCxD,aAK5CA,EAAEoH,aADIpH,EAAEkH,mBADLlH,EAAEyF,gBADXzF,EAAE+G,4BAII+D,GAAO9K,EAAEsH,QAASkJ,qBALhC,MAAO,CACLzJ,OACAtB,gBACAyB,mBACAE,aACAuM,UANJ,oEAFC7S,EAASsF,aACZG,cAYOzF,EAASyF,4BACLpF,QAAQ0R,IACnB/R,EAASyF,OAAO/C,aAAgCxD,aAKhCA,EAAEoH,aADIpH,EAAEkH,mBADLlH,EAAEyF,gBADXzF,EAAE+G,4BAII+D,GAAO9K,EAAEsH,QAASkJ,qBALhC,MAAO,CACLzJ,OACAtB,gBACAyB,mBACAE,aACAuM,UANJ,wCAUO7S,EAASsJ,aACXtJ,EAASsJ,SACPtJ,EAASsI,WACXtI,EAASsI,OACPtI,EAAS8S,iBACX9S,EAAS8S,aACP9S,EAAS0M,aApKpB5I,QAAQD,MACN,2bASGgJ,QAAQ,SAAU,MAClBC,OACH,2CAwJ+BiG,IAExB/S,EAAS0M,aACP1M,EAAS2E,mBACX3E,EAAS2E,qFAGX,WAAA,MA7CkB,oCCxHLqO,YAAerY,2BAC/B8C,EAAc9C,IAAO6C,EAAS7C,qBADK,OAQrCsY,YAAUC,GAASrR,GAAU,+DACFoN,WACxBkE,MAAM,OACNhU,KAAK,SAAArF,UACJN,OAAO4Z,QAAQtZ,GAAG6I,OAChB,SAACd,YAA0BA,EAAQgL,oBACnChL,uBALNlH,EAAGoB,QAAQ8F,aAPPA,EAAUpC,GAAI9E,EAAI,cACtBsY,YACEI,GAAKxR,IAAYqR,GAASrR,GAC1B,+CALmC,iBAOrC,GAAIwR,GAAKxR,0BAA0BA,EAAQ,sBAAxBA,+FAYrB,OAAOlH,IAAAA,GAnBT,oCAHM0Y,GAAO,SAAA7T,SAAkB,mBAANA,GACnB0T,GAAW,SAAA1T,SAAkB,iBAANA,GCWP8T,YAAiB3Y,OACrC,GAAI8C,EAAc9C,IAAO6C,EAAS7C,GAChC,cAAsBnB,OAAO4Z,QAAQzY,EAAG6B,0BAAY,YAClD7B,EAAG6B,gBAAcC,YAZrBwW,YAA8B,aAFlB1W,QAESF,yCAAkDE,EAAIJ,OAEvEkX,GAAK9W,EAAIF,OAAeE,EAAIF,MAAME,EAAIJ,OACtCkX,GAAK9W,EAAIF,MAAMI,YAAoBF,EAAIF,MAAMI,WAAWF,EAAIJ,YAGhE8W,aAAU,qBAA2B1W,IAUrC,uBAAO5B,GAPT,kCAXA,IAAc4B,GAFR8W,GAAO,SAAA7T,SAAkB,mBAANA,MCiKsC,oBAAX+T,OAA0BA,OAAOC,WAAaD,OAAOC,SAAWD,OAAO,oBAAuB,aA7H3I,YAAiBE,EAAMC,EAAOvX,GACpC,IAAKsX,EAAKE,EAAG,CACZ,GAAIxX,gBAAwB,CAC3B,IAAIA,EAAMwX,EAOT,YADAxX,EAAMyX,EAAIC,GAAQC,KAAK,KAAML,EAAMC,IALvB,EAARA,IACHA,EAAQvX,EAAMwX,GAEfxX,EAAQA,EAAMqD,EAMhB,GAAIrD,GAASA,EAAMgD,KAElB,YADAhD,EAAMgD,KAAK0U,GAAQC,KAAK,KAAML,EAAMC,GAAQG,GAAQC,KAAK,KAAML,EAAM,IAGtEA,EAAKE,EAAID,EACTD,EAAKjU,EAAIrD,EACT,IAAM4X,EAAWN,EAAKG,EAClBG,GACHA,EAASN,IA3DL,OAA4B,WAClC,cAiCA,OAhCAO,EAAMC,UAAU9U,KAAO,SAAS+U,EAAaC,GAC5C,IAAM1V,EAAS,MACTiV,EAAQU,KAAKT,EACnB,GAAID,EAAO,CACV,IAAMW,EAAmB,EAARX,EAAYQ,EAAcC,EAC3C,GAAIE,EAAU,CACb,IACCR,GAAQpV,EAAQ,EAAG4V,EAASD,KAAK5U,IAChC,MAAON,GACR2U,GAAQpV,EAAQ,EAAGS,GAEpB,OAAOT,EAEP,YAiBF,OAdA2V,KAAKR,EAAI,SAASU,GACjB,IACC,IAAMnY,EAAQmY,EAAM9U,EACN,EAAV8U,EAAMX,EACTE,GAAQpV,EAAQ,EAAGyV,EAAcA,EAAY/X,GAASA,GAC5CgY,EACVN,GAAQpV,EAAQ,EAAG0V,EAAWhY,IAE9B0X,GAAQpV,EAAQ,EAAGtC,GAEnB,MAAO+C,GACR2U,GAAQpV,EAAQ,EAAGS,KAGdT,KAhC0B,GAgE5B,YAAwB8V,GAC9B,OAAOA,iBAA0C,EAAbA,EAASZ,EAU9C,IAAsBa,YAAgB7Z,2BAChC8C,EAAc9C,mBAqeG4D,EAAMC,GAC5B,IACC,IAAIC,kBAreMgW,GAAgB9Z,EAAInB,OAAOgK,OAAO7I,EAAGU,mDACrCoZ,GAAgB9Z,EAAInB,OAAOgK,OAAO7I,EAAGU,iCAqe9C,MAAM6D,GACP,OAAOV,EAAQU,GAEhB,OAAIT,GAAUA,EAAOU,KACbV,EAAOU,UAAK,EAAQX,GAErBC,cA1eKoF,GAEP,MADAC,QAAQD,MAAM,wBAAyBA,EAAO,yBACxCA,kEAGHlJ,IAAAA,GAVT,oCAtDe8Z,YAAAA,EAAgB9Z,EAAIU,EAAUqZ,EAAMC,YAAAA,IAAAA,EAAQ,wBA0CrDD,IAEF/Z,EAAG8H,eAAiB9H,EAAG8H,eACpBC,IAAI,SAAA5I,UAAMA,IAAM4a,EAAKtZ,OAASqH,EAAiB3I,IAC/C6I,OACC,SAACC,EAAMgS,UACL7a,MAAMF,QAAQ+a,aAAYhS,EAASgS,aAAYhS,GAAMgS,KACvD,MAhDN3B,YAAU0B,EAAO,2CAA4C,CAACha,GAAAA,EAAIU,SAAAA,IAElE,IAAIoH,EAAiB,KA+IhB,SAAgBoS,EAAQtW,EAAMuW,GACpC,GAAuC,mBAA5BD,MAAwC,KACRE,EAAMtB,EAAMnT,EAAlDkT,EAAWqB,QAwBf,GAvBA,SAASG,EAAOvW,GACf,IACC,OAASsW,EAAOvB,EAASyB,QAAQC,MAEhC,IADAzW,EAASF,EAAKwW,EAAK5Y,SACLsC,EAAOU,KAAM,CAC1B,IAAIgW,GAAe1W,GAIlB,YADAA,EAAOU,KAAK6V,EAAQ1U,IAAWA,EAASuT,GAAQC,KAAK,KAAML,EAAO,OAAa,KAF/EhV,EAASA,EAAOe,EAOfiU,EACHI,GAAQJ,EAAM,EAAGhV,GAEjBgV,EAAOhV,EAEP,MAAOS,GACR2U,GAAQJ,IAASA,EAAO,QAAc,EAAGvU,IAG3C8V,GACIxB,SAAiB,CACpB,IAAI4B,EAAS,SAASjZ,GACrB,IACM4Y,EAAKG,MACT1B,WAEA,MAAMtU,IAER,OAAO/C,GAER,GAAIsX,GAAQA,EAAKtU,KAChB,OAAOsU,EAAKtU,KAAKiW,EAAQ,SAASlW,GACjC,MAAMkW,EAAOlW,KAGfkW,IAED,OAAO3B,EAGR,KAAM,WAAYoB,GACjB,UAAUQ,UAAU,0BAIrB,IADA,IAAI7R,EAAS,GACJ+L,EAAI,EAAGA,EAAIsF,EAAOva,OAAQiV,IAClC/L,EAAOvH,KAAK4Y,EAAOtF,IAEpB,OA5GM,SAAgBuC,EAAOvT,EAAMuW,GACnC,IAAYrB,EAAMnT,EAAdiP,GAAK,EAwBT,OAvBA,SAASyF,EAAOvW,GACf,IACC,OAAS8Q,EAAIuC,EAAMxX,QAElB,IADAmE,EAASF,EAAKgR,KACA9Q,EAAOU,KAAM,CAC1B,IAAIgW,GAAe1W,GAIlB,YADAA,EAAOU,KAAK6V,EAAQ1U,IAAWA,EAASuT,GAAQC,KAAK,KAAML,EAAO,OAAa,KAF/EhV,EAASA,EAAOe,EAOfiU,EACHI,GAAQJ,EAAM,EAAGhV,GAEjBgV,EAAOhV,EAEP,MAAOS,GACR2U,GAAQJ,IAASA,EAAO,QAAc,EAAGvU,IAG3C8V,GACOvB,GAmFOjQ,EAAQ,SAAS+L,GAAK,OAAOhR,EAAKiF,EAAO+L,OApMvClU,WAANia,6BAmCHC,EAAIna,QAAUka,EAAGla,eAAeT,EAAGU,SAASka,EAAIna,4BA/BhDrB,MAAMF,QAAQyb,0BACVb,EAAgB9Z,EAAI2a,EAAIC,EAAKZ,EAAQ,uBAE3Cha,EAAGU,SAASia,EAAGla,QAAUT,EAAGU,SAASia,EAAGla,SAAWka,EACnD3a,EAAGU,SAASia,EAAGla,QAAQQ,KAAKwH,SAC1BzI,EAAGU,SAASia,EAAGla,QAAQQ,KAAKwH,UAAYkS,EAAG1Z,KAAKwH,SAClDzI,EAAGU,SAASia,EAAGla,QAAQQ,KAAKwG,MAC1BzH,EAAGU,SAASia,EAAGla,QAAQQ,KAAKwG,OAASkT,EAAG1Z,KAAKwG,MAC/CzH,EAAGU,SAASia,EAAGla,QAAQQ,KAAK4Z,WAC1B7a,EAAGU,SAASia,EAAGla,QAAQQ,KAAK4Z,YAAcF,EAAG1Z,KAAK4Z,WAEhD7a,EAAGU,SAASia,EAAGla,QAAQQ,KAAKwH,UAAYzI,EAAGyI,WAAamS,EAAIna,SAC9DT,EAAGyI,SAAWkS,EAAGla,QAGfT,EAAGU,SAASia,EAAGla,QAAQQ,KAAKwG,OAASzH,EAAGyH,QAAUmT,EAAIna,SACxDT,EAAGyH,MAAQkT,EAAGla,QAGZT,EAAGU,SAASia,EAAGla,QAAQQ,KAAK4Z,aAC1Bd,EAEFjS,YAAqBA,GAAgB6S,EAAGla,SAGxCT,EAAG8H,eAAiB9H,EAAG8H,eAAeC,IAAI,SAAA5I,UACxCA,IAAMyb,EAAIna,OAASka,EAAGla,OAAStB,uCA7BvC,IAAIyb,EAAMb,GAAQY,eAClB,GAAIjC,GAAKiC,EAAG3Z,gCAAqB2Z,EAAG3Z,QAAQ2Z,EAvBhD,SAA0Bna,EAAMR,GAC9B,IACE,MAAO,CACL8a,OAAQ,cACRC,MAAO,QACPC,MAAOxa,EAAKS,KACZiG,QAASlH,EAAGoB,QAAQ8F,QACpB+T,KAAMjb,EAAGoB,QAAQS,UAAUkG,IAAI,SAAA5I,UAAKa,EAAG6B,UAAU1C,GAAG2C,aACpDoW,KAAM,GACNjZ,YAAae,GAEf,MAAOkJ,GAEP,MADAC,QAAQD,MAAM,mBAAoBA,GAC5BA,GAU0CgS,CAAiBP,EAAI3a,sBAA/C2a,8HAzBpBjC,GAAO,SAAA7T,SAAkB,mBAANA,GCEnBsW,GAAkB,SAAC3Z,EAAOgF,UAC9BH,OAAOxG,KAAK2B,EAAM+E,SAAe,EAANC,EAAS,GAAI,QAEpCF,GAAgB,SAAA3F,UAAQwa,GAAgBxa,EAAM,IAI9Cya,GAAmB,SAAAxZ,UAAOyE,OAAOxG,KAAKd,KAAK6I,UAAUhG,GAAM,SAK3DyZ,GAAY,SAAAxW,GAChB,OAAOyW,SAAOzW,GAAG8B,SAAS,QAGtB4U,GAAiB,SAAAxU,GAGrB,OAFAyU,GAAgBzU,GAET,EAVYwF,EAWJxF,EAAGwF,OAXWlG,OAAOxG,KAAK0M,EAAQ,SAY/CxF,EAAGlF,UAAUkG,IAAIqT,KAhBDzN,EAiBJ5G,EAAGO,SAjBU6T,GAAgBxN,EAAO,KAkBhD5G,EAAG8F,SACHvG,GAAcS,EAAGuB,YAAY4D,SAC7BnF,EAAGuB,YAAY1H,MACfmG,EAAGuB,YAAYzH,YACfyF,GAAcS,EAAGU,OACjBV,EAAGqG,YAAYrF,IAAIzB,KAnBF,IAAAiG,EAJDoB,GAiCd8N,GAA2B,SAAA1U,GAC/B,IAAM2U,EAAUC,GAAe5U,GAE/B,OAAOA,EAAG6U,YACP7T,IAAI,SAAAe,GACH,MAAO,CACL+S,YAAaH,EAAQ5W,IAAIgE,EAAIoD,SAC7BtL,MAAOkI,EAAIlI,MACXkI,IAAKA,EAAIA,OAGZgT,KAAK,SAACC,EAAGC,GACR,OAAID,EAAEF,YAAcG,EAAEH,cAClBE,EAAEF,YAAcG,EAAEH,aAAqB,EAEvCE,EAAEnb,MAAQob,EAAEpb,QACZmb,EAAEnb,MAAQob,EAAEpb,OAAe,OAA/B,IAEDmH,IAAI,SAAAe,GACH,MAAO,CAACA,EAAI+S,YAAa/S,EAAIlI,OA/CXE,EA+CkCgI,EAAIA,IA/CzBzC,OAAOxG,KAAKiB,EAAW,SAApC,IAAAA,KAmDlB6a,GAAiB,SAAA5U,GACrB,IAAM2U,EAAU,IAAIO,IAChBrH,EAAI,EAEFsH,EAAY,SAAAvb,GACX+a,EAAQ3X,IAAIpD,KACf+a,EAAQS,IAAIxb,EAAMiU,GAClBA,MAQJ,OAJAsH,EAAUnV,EAAGuB,YAAY4D,SACzBgQ,EAAUnV,EAAGU,OACbV,EAAGqG,YAAY1F,QAAQwU,GAEhBR,GAGHF,GAAkB,SAAAzU,GACtBqV,GAAc1U,QAAQ,SAAA2U,UAASC,GAAWvV,EAAIsV,KAC9CE,GAAkB7U,QAAQ,SAAA2U,UACxBC,GAAWvV,EAAGuB,YAAa+T,EAAO,kBAahCG,GAAW,SAAA3X,SAAkB,iBAANA,GACvB0T,GAAW,SAAA1T,SAAkB,iBAANA,GACvB4X,GAAW,SAAA5X,UAAW,OAANA,GAA2B,iBAANA,GACrC3F,GAAU,SAAA2F,UAAK4X,GAAS5X,IAAMA,aAAazF,OAE3Cgd,GAAgB,CACpB,CAAClH,KAAM,SAAUiF,MAAO5B,IACxB,CAACrD,KAAM,YAAaiF,MAAOjb,IAC3B,CAACgW,KAAM,WAAYiF,MAAO5B,GAAUmE,WAAY,KAChD,CAACxH,KAAM,WAAYiF,MAAOqC,IAC1B,CAACtH,KAAM,cAAeiF,MAAOsC,IAC7B,CAACvH,KAAM,QAASiF,MAAO5B,IACvB,CAACrD,KAAM,cAAeiF,MAAOjb,KAGzBqd,GAAoB,CACxB,CAACrH,KAAM,UAAWiF,MAAO5B,IACzB,CAACrD,KAAM,QAASiF,MAAOqC,IACvB,CAACtH,KAAM,cAAeiF,MAAOqC,KAGzBG,GAAiB,CAAC,CAACzH,KAAM,cAAeiF,MAAOjb,KAE/C0d,GAAmB,CACvB,CAAC1H,KAAM,UAAWiF,MAAO5B,IACzB,CAACrD,KAAM,QAASiF,MAAOqC,IACvB,CAACtH,KAAM,MAAOiF,MAAO5B,KAGjB+D,GAAa,SAACO,EAAKR,EAAOS,EAAMjN,OAC7BqF,EAA2BmH,EAA3BnH,KAAMiF,EAAqBkC,EAArBlC,MAAOuC,EAAcL,EAAdK,WAEpB,GADiB,MAAbG,EAAI3H,IAA+B,MAAdwH,IAAoBG,EAAI3H,GAAQwH,GACxC,MAAbG,EAAI3H,GAAe,MAAM6H,GAAkB7H,EAAM4H,EAAMjN,GAC3D,IAAKsK,EAAM0C,EAAI3H,IAAQ,MAAM8H,GAAkB9H,EAAM4H,EAAMjN,IAGvDoN,GAAiB,SAACZ,EAAOS,EAAMjN,GACnC,OAAMiN,EACY,MAATjN,EAAmBiN,MAAQT,EAAaS,MAAQjN,MAASwM,EAC3DA,GAGHU,GAAoB,SAACV,EAAOS,EAAMjN,cAClC7L,uBAAuBiZ,GAAeZ,EAAOS,EAAMjN,KACnDmN,GAAoB,SAACX,EAAOS,EAAMjN,cAClC7L,uBAAuBiZ,GAAeZ,EAAOS,EAAMjN,KC1InCqN,YAAkBld,2BAClC8C,EAAc9C,mBA0iBG4D,EAAMC,GAC5B,IACC,IAAIC,GA1iBIqZ,EAsBV,SAA2Bnd,GAEzB,IAAIod,EAAS,IAAIxe,IAAIoB,EAAG8H,gBAGxB,OAFAsV,EAAOC,IAAIrd,EAAGyI,UACd2U,SAAcpd,EAAGyH,OACVrI,MAAMS,KAAKud,GA3BME,CAAkBtd,GDRJ+G,ECSQwW,GAAgBvd,GAApDwd,EDTkCnC,GAAUE,GAAexU,oBCU3DrB,QAAQ0R,IAAI+F,EAAcpV,IAAI0V,GAAezd,EAAIwd,sBAEvD,IAAIE,EA0BV,SAA4B1d,GAE1B,IAAI2d,EAAU,IAAI/e,IAAI,CAACoB,EAAGyH,QAC1B,OAAOrI,MAAMS,KAAK8d,GA7BOC,CAAmB5d,GAClC6d,EDZ6B,SAAA9W,UAAMsU,GAkCvB,SAAAtU,GAGtB,OAmDuB,SAAAA,GACvB4V,GAAejV,QAAQ,SAAA2U,UAASC,GAAWvV,EAAIsV,KAC/CtV,EAAG6U,YAAYlU,QAAQ,SAACoB,EAAK+G,GAC3B+M,GAAiBlV,QAAQ,SAAA2U,UACvBC,GAAWxT,EAAKuT,EAAO,cAAexM,OAzD1CiO,CAAiB/W,GAEV,CAACwU,GAAexU,GAAK0U,GAAyB1U,IArCEgX,CAAgBhX,ICY5CiX,MAClBT,GAAgBvd,IACnB4b,YAAauB,EAAcpV,IAAI,SAAA6C,SAAO,CACpCsB,QAASlM,EAAGU,SAASkK,GAAIjK,KACzBC,MAAOZ,EAAGU,SAASkK,GAAIhK,MACvBkI,IAAK9I,EAAGU,SAASkK,GAAI9J,gBAXvB,uBAcI4E,QAAQ0R,IAAIsG,EAAe3V,IAAI0V,GAAezd,EAAI6d,4BA8hB3D,MAAMtZ,GACP,OAAOV,EAAQU,ODpjBuBwC,ECQ9BoW,EACEK,EA6iBX,OAAI1Z,GAAUA,EAAOU,KACbV,EAAOU,UAAK,EAAQX,GAErBC,cAniBKoF,GAEP,MADAC,QAAQD,MAAM,aAAcA,EAAO,CAAClJ,GAAAA,IAC9BkJ,kEAGHlJ,IAAAA,GAtBT,oCAuCA,SAASyd,GAAezd,EAAI6L,GAC1B,gBAA0CjB,OACxC,IAAMpK,EAAOR,EAAGU,SAASkK,GACzB,OAAsB,MAAlBpK,EAAKM,4CACiBN,EAAKO,gBAUnC,SAAuBP,EAAMY,EAASpB,GACpC,IACE,MAAO,CACL8a,OAAQ,WACRC,MAAO,QACP3Z,QAAAA,EACAT,KAAM6G,aAAWhH,EAAKG,MACtBC,MAAOJ,EAAKI,MACZoa,MAAOxa,EAAKS,KACZiG,QAASlH,EAAGoB,QAAQ8F,QACpB+T,KAAMjb,EAAGoB,QAAQS,UAAUkG,IAAI,SAAA5I,UAAKa,EAAG6B,UAAU1C,GAAG2C,aACpDoW,KAAM,GACNjZ,YAAae,GAEf,MAAOkJ,GAEP,MADAC,QAAQD,MAAM,gBAAiBA,GACzBA,GAzBJ+U,CAAczd,EAAMqL,EAAS7L,sBAK/BA,EAAGU,SAASkK,GAAI9J,YANTA,YAHT,oCAiCF,SAASyc,GAAgBvd,GACvB,MAAO,CACLuM,OAAQvM,EAAGoB,QAAQ8F,QACnBI,SAAUtH,EAAGoB,QAAQkG,UAAY,KACjCuF,SAAU7M,EAAGoB,QAAQgG,aACrBvF,UAAW7B,EAAGoB,QAAQS,UAAUkG,IAAI,SAAA6C,UAAM5K,EAAG6B,UAAU+I,GAAI9I,aAC3DwG,YAAa,CACX4D,QAAS1E,aAAWxH,EAAGU,SAASV,EAAGyI,UAAU9H,MAC7CC,MAAOZ,EAAGU,SAASV,EAAGyI,UAAU7H,MAChCC,YAAab,EAAGU,SAASV,EAAGyI,UAAU5H,aAExC4G,MAAOD,aAAWxH,EAAGU,SAASV,EAAGyH,OAAO9G,MACxCyM,YAAapN,EAAG8H,eACbC,IAAI,SAAAmW,UAAO1W,aAAWxH,EAAGU,SAASwd,GAAKvd,QACvCqH,OAAO,SAACC,EAAMC,GACb,OAAOD,EAAKE,KAAK,SAAAC,UAAQA,IAASF,IAAWD,YAAWA,GAAMC,KAC7D,SC9FaiW,YAAkBne,OACtC,IAAMoe,EAAatZ,GAAI9E,EAAI,gBAAiB,IAC5C,uBAAOyE,EAAKzE,EAAIoe,EAAWrW,IAAI,SAAAsW,mBAAMre,UAAMqe,EAAGre,EAAI,CAAED,GAAAA,EAAIG,IAAAA,SAF1D,oCCyBac,GAAUyD,EAAK,CACxB4T,GACAM,GACAkB,YAQwB7Z,2BACpB8C,EAAc9C,IAA8B,MAAvBA,EAAGoB,QAAQkG,gCACHV,GAAK,CAACyL,MAAaxL,MAAMrC,KAAK6K,sBAA3DrP,EAAGoB,QAAQkG,SAAWgX,EAA8C1T,2DAExE,OAAO5K,IAAAA,gDAG4BA,2BACnC8C,EAAc9C,IACd,IAAIQ,EAAO3B,OAAOgK,OAAO7I,EAAGU,UAAUyH,KAAK,SAAA4T,UAAKA,EAAE9a,KAAKwH,WACvD6P,YAAU9X,qCAH6B,oBAIf,MAApBA,EAAKK,mCAC+CuE,GAAM,CAAC0J,GAAWtO,EAAKG,iDAAlCiG,MAA2CpC,KAAK6K,IACxF7K,KAAK,SAAAhE,UAAQA,EAAK1B,OAClB0F,KAAK,SAAA1F,UAAQA,EAAKqJ,KAAK,SAAA5G,UAAOA,EAAIsO,QAAUrP,EAAKI,UACjD4D,KAAK,SAAAjD,UAAOA,EAAIwL,mCAHrB/M,EAAGU,SAASF,EAAKC,QAAQI,qHAM7B,OAAOb,IAAAA,uCAvBHkd,YC/B4Cld,OAC9C,cAAgBnB,OAAOC,KAAKkB,EAAGU,yBAAW,CAArC,IAAIa,OACPvB,EAAGU,SAASa,GAAKZ,KAAO6G,aAAWxH,EAAGU,SAASa,GAAKZ,MAEtD,uBAAOX,GAJT,oCDiCIme,KEtBSvX,YAAcqU,EAAWpU,YAAXoU,IAAAA,EAAO,aAAIpU,IAAAA,EAAO,+BAChByN,WAASxP,IAAI,WAAY+B,EAAKD,MAAQ2X,mBAA3DC,0BACwBlK,WAASxP,IACrC,cACA+B,EAAK7F,SAAWyd,mBAFZC,GAF4C,OAM9Ctf,MAAMF,QAAQ+b,KAAOA,EAAOxW,EAAKxF,IAAegc,oBAC1ByD,EAAgBzD,qBAA1C,OAAOuD,IAA0C3X,SAPlC,oCCXXmU,GAAQ,CACZH,YAAY,YCDE8D,GAAUN,GACtB,OAAOnZ,GAAO,gBAAiB,SAAAkZ,UAC3Bhf,MAAMF,QAAQkf,GAAcA,EAAW9c,KAAK+c,GAAM,CAACA,SCFrDrD,GAAQ,CACZvS,UAAU,GCDNuS,GAAQ,CACZvT,OAAO,GCCHmX,GAA0B,4LCAR1S,EAASrF,GAC/B,OAAOD,GAAK,CAACkI,GAAW5C,IAAWrF,GAAMrC,KAAK6K,oBCC5B7N,EAAOE,GACzB,MAAO,CAACF,MAAAA,EAAOE,MAAAA,oBALIiZ,GACnB,gBADmBA,IAAAA,EAAK,IACjBlW,EAAKkW,EAAG5S,IAAIpG,8BCASmM,GAC5B,OAAOrJ,EAAK,CACV,SAAAzE,GAEE,OADAA,EAAG2N,MAAMG,OAASA,EACX/N,EAAGC,IAEZ2e,GAAU,SAAC3e,SAAKD,IAAAA,GAAIG,IAAAA,IAClB,MAAiC,kBAAtBF,EAAG2N,MAAMqE,SAA+B9R,EAAIF,EAAI,qDACvDA,EAAG2N,MAAM/C,GAAW1K,EAAIF,EAAI,qDACzBD,EAAGC,6BCTU4K,GACxB,OAAOnG,EAAK,CACV,SAAAzE,GAEE,OADAA,EAAG2N,MAAM/C,GAAKA,EACP7K,EAAGC,IAEZ2e,GAAU,SAAC3e,SAAKD,IAAAA,GAAIG,IAAAA,IAClB,OAAI+C,EAAajD,GAAYE,EAAIF,EAAI,gEACJ,kBAAtBA,EAAG2N,MAAMqE,SAA+B9R,EAAIF,EAAI,iDACvDA,EAAG2N,MAAMG,OAAe5N,EAAIF,EAAI,qDAC7BD,EAAGC,wBRGhB,SAA8BW,EAAMI,EAAiBH,EAAOC,GAC1D,MAAO,CAACF,KAAAA,EAAMI,gBAAAA,EAAiBH,MAAAA,EAAOC,YAAAA,8BAXT8Z,GAC7B,gBAD6BA,IAAAA,EAAK,IAC3BlW,EACLkW,EAAG5S,IAAI,SAAC8W,GACN,O3B4IyBre,E2B5ID,mBAAVqe,EACK,CAAC7d,QAAS6d,EAAO5d,KAAM+Z,GAAOA,MAAAA,SAC1B6D,GAAO5d,KAAM+Z,GAAOA,MAAAA,c3B0IRhb,GACvC,IAAIS,EAASb,IAEb,OADAI,EAAG8H,eAAexG,KAAKb,GAChBV,EAAG0E,EAAKzE,EAAI,CAACO,EAAYC,EAAMC,OAHV,IAACD,mCoClJF6E,8BACMiP,WAASkE,MAAM,6BAA1CsG,GACN,IAAM/J,EAAWlW,OAAO4Z,QAAQqG,GAAoB/W,IAClD,gBAAEgX,OAASrd,OAET,MAAO,CADPqd,MAAcA,EAAQ7M,QAAQ,aAAc,SAC3BxQ,KAIrB,OAAOuW,GAAe5S,EAAUxG,OAAOmgB,YAAYjK,MATrD,8CpCmRuB,SAACxT,mBAASvB,GAE/B,cADOA,EAAGgF,QAAQzD,GACXxB,EAAGC,wEqCtRqB8N,GAe/B,OAbA3E,QAAQ8V,ibAUN,2CAGKxa,EAAK,CACVlC,EACA,SAAAvC,GAEE,OADAA,EAAG2N,MAAMG,OAASA,EACX/N,EAAGC,+BCnBa4K,GAe3B,OAbAzB,QAAQ8V,yaAUN,2CAGKxa,EAAK,CACVnC,EACA,SAAAtC,GAEE,OADAA,EAAG2N,MAAMuR,IAAM,CAACtU,GACT7K,EAAGC,iCCnBegS,GAC7B,gBAD6BA,IAAAA,EAAW,MACjCvN,EAAK,CACV/B,EACA,SAAA1C,GAEE,OADAA,EAAG2N,MAAMqE,SAAWA,EACbjS,EAAGC,4BCLU6Q,EAAWJ,EAAOO,GAiB1C,YAfqB,IAAVP,QAAwC,IAARO,GACzC7H,QAAQ8V,mdAUN,2CAIGxa,EAAK,CACVrC,EACA,SAAApC,GAIE,OAHAA,EAAG8K,OAAO+F,UAAYA,EACtB7Q,EAAG8K,OAAO2F,MAAQA,EAClBzQ,EAAG8K,OAAOkG,IAAMA,EACTjR,EAAGC,8CCvB4B6Q,EAAWJ,EAAOO,GAC5D,OAAOvM,EAAK,CACVrC,EACA,SAAApC,GAIE,OAHAA,EAAG8K,OAAO+F,UAAYA,EACtB7Q,EAAG8K,OAAO2F,MAAQA,EAClBzQ,EAAG8K,OAAOkG,IAAMA,EACTjR,EAAGC,sCCPoBiR,GAClC,gBADkCA,IAAAA,EAAW,IACtCxM,EAAK,CACVrC,EACA,SAAApC,GAGE,OAFAA,EAAG8K,OAAO+F,UAAYA,UACtB7Q,EAAG8K,OAAOmG,SAAWA,EACdlR,EAAGC,iCCNegS,GAe7B,gBAf6BA,IAAAA,GAAW,GAExC7I,QAAQ8V,4aAUN,2CAGKxa,EAAK,CACVpC,EACA,SAAArC,GAEE,OADAA,EAAG2N,MAAMqE,SAAWA,EACbjS,EAAGC,iCCnBegK,GAC7B,OAAOvF,EAAK,CACVvC,EACA,SAAAlC,GAEE,OADAA,EAAG2K,YAAYC,GAAKZ,EACbjK,EAAGC,uCCLqBgK,GACnC,OAAOvF,EAAK,CACVxC,EACA,SAAAjC,GAEE,OADAA,EAAG2K,YAAYC,GAAKZ,EACbjK,EAAGC,4CCLAsY,QAAa2C,2BAC3B,GAAIA,EAAKtb,OAAS,EAAG,OACUsb,EAAtBkE,OAAW/d,OAClB,OAAOkX,EAAU,SAACtY,SAAUE,IAAAA,IAC1B,OAAOif,GAAYpf,IADGA,IACAC,GAAME,EAAIF,EAAIoB,KAJP,IAO1B+D,EAAM8V,KACb,gBAAOjb,UAAMmF,EAAGnF,EAAI,CAACD,GAAAA,EAAIG,IAAAA,2M9CsNA,SAACF,SAjNH,OAiNUA,EAAGC,6F+C5NPgb,2BACzBpU,EAAOoU,EAAK,KAA0B,iBAAZA,EAAK,GAAkBA,EAAK,QAAKmE,GAC3DpN,EAA8B,kBAAZiJ,EAAK,GAAmBA,EAAK,QAAKmE,EAiBxD,MAfuB,iBAAZnE,EAAK,IACd9R,QAAQ8V,ueAUN,2CAIGrY,GAAK,CAACyL,GAASL,IAAYnL,GAAMrC,KAAK6K,sBCrBzBjI,GACpB,OAAO3C,EAAK,CACV,SAAAzE,GAEE,OADAA,EAAGoB,QAAQgG,aAAeA,EACnBrH,EAAGC,wBCAMwB,EAAOE,EAAcH,GACzC,gBADyCA,IAAAA,EAAM,MACxC,CAACA,IAAAA,EAAKC,MAAAA,EAAOE,MAAO,yBALN2d,GACrB,gBADqBA,IAAAA,EAAK,IACnB5a,EAAK4a,EAAGtX,IAAI7G,anBGrB,SAAsB2d,GACpB,O9B0JwBre,E8B1JA,mBAAVqe,EACA,CAAC7d,QAAS6d,EAAO5d,KAAM+Z,GAAOA,MAAAA,SAC1B6D,GAAO5d,KAAM+Z,GAAOA,MAAAA,c9BwJJhb,GAClC,IAAIS,EAASb,IAEb,OADAI,EAAGyH,MAAQhH,EACJV,EAAG0E,EAAKzE,EAAI,CAACO,EAAYC,EAAMC,OAHf,IAACD,qBkD9JxB,OAAOgC,gCrBGsBqc,OAC7B,wB7BoJ2Bre,E6BpJH,mBAAVqe,EACG,CAAC7d,QAAS6d,EAAO5d,KAAM+Z,GAAOA,MAAAA,SAC1B6D,GAAO5d,KAAM+Z,GAAOA,MAAAA,c7BkJJhb,GACrC,IAAIS,EAASb,IAEb,OADAI,EAAGyI,SAAWhI,EACPV,EAAG0E,EAAKzE,EAAI,CAACO,EAAYC,EAAMC,S6BxJxC,kC7BqJ4B,IAACD,2BmDzJT8G,GAClB,OAAO7C,EAAK,CACV,SAAAzE,GAEE,OADAA,EAAGoB,QAAQkG,SAAWA,EACfvH,EAAGC,wFCJeA,GAc7B,OAbAmJ,QAAQD,waAUJ,2CAGGmP,GAAerY,iCCHU6G,GAChC,gBAAa7G,OACX,OAAK8C,EAAc9C,GACfA,EAAGoB,QAAQkG,yBAAiBvH,EAAGC,6BAXd6G,OACvB,IAAI7G,EADyB,uBAElByE,EAAKxF,IAAe,CAACoT,yBAFH,OAE7BrS,oBACW4G,GAAK5G,EAAI6G,qBAHS,OAG7B7G,oBACWiY,GAAejY,qBAC1B,OADAA,KACU4K,4CAQoB0U,CAASzY,qBAErC,OAFA7G,EAAGoB,QAAQkG,WAEJvH,EAAGC,qBALqBD,EAAGC,IADpC,uGCVA,OAAOyE,EAAK,CACV1C,EACAkD,GAAI,aAAcsa,yFvBEpB,OAAO9a,EAAK,CACVzC,EACAiD,GAAI,aAAcsa,mDAClB,SAAAvf,GAIE,OAHAA,EAAGoB,QAAQgG,aAAepH,EAAGoB,QAAQgG,cATb,GAUxBpH,EAAGoB,QAAQkG,SAAWtH,EAAGoB,QAAQkG,UARnB,KASdtH,EAAG8H,eAAiB9H,EAAG8H,gBAAkB8W,GAClC7e,EAAGC,wC/BmNW,SAACA,UAAOA,EAAGG"}