{"version":3,"file":"sdk.module.js","sources":["../src/interaction/interaction.js","../src/build/build.js","../src/response/response.js","../src/send/unary.js","../src/send/send-transaction.js","../src/send/send-get-transaction.js","../src/send/send-get-account.js","../src/send/send-get-latest-block.js","../src/send/send-get-block-by-id.js","../src/send/send-get-block-by-height.js","../src/send/sdk-send.js","../src/send/send-get-transaction-status.js","../src/send/send-execute-script.js","../src/send/send-get-events.js","../src/send/send-ping.js","../src/build/build-get-block.js","../src/build/build-get-account.js","../src/decode/decode.js","../src/resolve/resolve-ref-block-id.js","../src/resolve/resolve-cadence.js","../src/resolve/resolve-arguments.js","../src/resolve/resolve-accounts.js","../src/encode/encode.js","../src/resolve/resolve-signatures.js","../src/resolve/resolve-validators.js","../src/resolve/resolve.js","../src/resolve/resolve-final-normalization.js","../src/send/send.js","../src/decode/sdk-decode.js","../src/latest-block/latest-block.js","../src/account/account.js","../src/build/build-authorizations.js","../src/build/build-validator.js","../src/build/build-at-block-height.js","../src/build/build-at-block-id.js","../src/build/build-get-events.js","../src/build/build-get-events-at-block-height-range.js","../src/build/build-get-events-at-block-ids.js","../src/build/build-get-block-header.js","../src/build/build-get-latest-block.js","../src/build/build-get-block-by-id.js","../src/build/build-get-block-by-height.js","../src/build/build-get-transaction-status.js","../src/build/build-get-transaction.js","../src/build/build-limit.js","../src/build/build-params.js","../src/build/build-arguments.js","../src/build/build-proposer.js","../src/build/build-payer.js","../src/build/build-ping.js","../src/build/build-ref.js","../src/build/build-script.js","../src/build/build-transaction.js","../src/build/build-invariant.js","../src/resolve/resolve-params.js"],"sourcesContent":["export const UNKNOWN /*                       */ = \"UNKNOWN\"\nexport const SCRIPT /*                        */ = \"SCRIPT\"\nexport const TRANSACTION /*                   */ = \"TRANSACTION\"\nexport const GET_TRANSACTION_STATUS /*        */ = \"GET_TRANSACTION_STATUS\"\nexport const GET_ACCOUNT /*                   */ = \"GET_ACCOUNT\"\nexport const GET_EVENTS /*                    */ = \"GET_EVENTS\"\nexport const GET_LATEST_BLOCK /*              */ = \"GET_LATEST_BLOCK\"\nexport const PING /*                          */ = \"PING\"\nexport const GET_TRANSACTION /*               */ = \"GET_TRANSACTION\"\nexport const GET_BLOCK_BY_ID /*               */ = \"GET_BLOCK_BY_ID\"\nexport const GET_BLOCK_BY_HEIGHT /*           */ = \"GET_BLOCK_BY_HEIGHT\"\nexport const GET_BLOCK /*                     */ = \"GET_BLOCK\"\nexport const GET_BLOCK_HEADER /*              */ = \"GET_BLOCK_HEADER\"\n\nexport const BAD /* */ = \"BAD\"\nexport const OK /*  */ = \"OK\"\n\nexport const ACCOUNT /* */ = \"ACCOUNT\"\nexport const PARAM /*   */ = \"PARAM\"\nexport const ARGUMENT /**/ = \"ARGUMENT\"\n\nconst ACCT = `{\n  \"kind\":\"${ACCOUNT}\",\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":\"${PARAM}\",\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":\"${ARGUMENT}\",\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst IX = `{\n  \"tag\":\"${UNKNOWN}\",\n  \"assigns\":{},\n  \"status\":\"${OK}\",\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":null,\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null,\n    \"blockIds\":[]\n  },\n  \"transaction\": {\n    \"id\":null\n  },\n  \"block\": {\n    \"id\":null,\n    \"height\":null,\n    \"isSealed\":null\n  },\n  \"account\": {\n    \"addr\":null\n  }\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nconst isArray = (d) => Array.isArray(d)\nconst isObj = (d) => typeof d === \"object\"\nconst isNull = (d) => d == null\nconst isNumber = (d) => d === \"number\"\nconst isFn = (d) => typeof d === \"function\"\n\nconst CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\")\nconst randChar = () => CHARS[~~(Math.random() * CHARS.length)]\nexport const uuid = () => Array.from({length: 10}, randChar).join(\"\")\n\nexport const isInteraction = (ix) => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = (ix) => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = (wat) => (ix) => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nconst makeAccount = (acct, tempId) => (ix) => {\n  ix.accounts[tempId] = JSON.parse(ACCT)\n  ix.accounts[tempId].tempId = tempId\n  ix.accounts[tempId].addr = acct.addr\n  ix.accounts[tempId].keyId = acct.keyId\n  ix.accounts[tempId].sequenceNum = acct.sequenceNum\n  ix.accounts[tempId].signature = acct.signature\n  ix.accounts[tempId].signingFunction = acct.signingFunction\n  ix.accounts[tempId].resolve = acct.resolve\n  ix.accounts[tempId].role = {\n    ...ix.accounts[tempId].role,\n    ...acct.role,\n  }\n  return Ok(ix)\n}\n\nexport const makeAuthorizer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.authorizations.push(tempId)\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makeProposer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.proposer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n}\n\nexport const makePayer = (acct) => (ix) => {\n  let tempId = uuid()\n  ix.payer = tempId\n  return Ok(pipe(ix, [makeAccount(acct, tempId)]))\n} \n\nexport const makeParam = (param) => (ix) => {\n  let tempId = uuid()\n  ix.message.params.push(tempId)\n\n  ix.params[tempId] = JSON.parse(PRM)\n  ix.params[tempId].tempId = tempId\n  ix.params[tempId].key = param.key\n  ix.params[tempId].value = param.value\n  ix.params[tempId].asParam = param.asParam\n  ix.params[tempId].xform = param.xform\n  ix.params[tempId].resolve = param.resolve\n  return Ok(ix)\n}\n\nexport const makeArgument = (arg) => (ix) => {\n  let tempId = uuid()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  return Ok(ix)\n}\n\nexport const makeUnknown /*                 */ = makeIx(UNKNOWN)\nexport const makeScript /*                  */ = makeIx(SCRIPT)\nexport const makeTransaction /*             */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*    */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetTransaction /*          */ = makeIx(GET_TRANSACTION)\nexport const makeGetAccount /*              */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*               */ = makeIx(GET_EVENTS)\nexport const makeGetLatestBlock /*          */ = makeIx(GET_LATEST_BLOCK)\nexport const makeGetBlockById /*            */ = makeIx(GET_BLOCK_BY_ID)\nexport const makeGetBlockByHeight /*        */ = makeIx(GET_BLOCK_BY_HEIGHT)\nexport const makePing /*                    */ = makeIx(PING)\nexport const makeGetBlock /*                */ = makeIx(GET_BLOCK)\nexport const makeGetBlockHeader /*          */ = makeIx(GET_BLOCK_HEADER)\n\nconst is = (wat) => (ix) => ix.tag === wat\n\nexport const isUnknown /*                 */ = is(UNKNOWN)\nexport const isScript /*                  */ = is(SCRIPT)\nexport const isTransaction /*             */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*    */ = is(GET_TRANSACTION_STATUS)\nexport const isGetTransaction /*          */ = is(GET_TRANSACTION)\nexport const isGetAccount /*              */ = is(GET_ACCOUNT)\nexport const isGetEvents /*               */ = is(GET_EVENTS)\nexport const isGetLatestBlock /*          */ = is(GET_LATEST_BLOCK)\nexport const isGetBlockById /*            */ = is(GET_BLOCK_BY_ID)\nexport const isGetBlockByHeight /*        */ = is(GET_BLOCK_BY_HEIGHT)\nexport const isPing /*                    */ = is(PING)\nexport const isGetBlock /*                */ = is(GET_BLOCK)\nexport const isGetBlockHeader /*          */ = is(GET_BLOCK_HEADER)\n\nexport const isOk /*  */ = (ix) => ix.status === OK\nexport const isBad /* */ = (ix) => ix.status === BAD\nexport const why /*   */ = (ix) => ix.reason\n\nexport const isAccount /*  */ = (account) => account.kind === ACCOUNT\nexport const isParam /*    */ = (param) => param.kind === PARAM\nexport const isArgument /* */ = (argument) => argument.kind === ARGUMENT\n\nconst hardMode = (ix) => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  try {\n    ix = hardMode(await ix)\n    if (isBad(ix)) throw new Error(`Interaction Error: ${ix.reason}`)\n    if (!fns.length) return ix\n    const [hd, ...rest] = fns\n    const cur = await hd\n    if (isFn(cur)) return recPipe(cur(ix), rest)\n    if (isNull(cur) || !cur) return recPipe(ix, rest)\n    if (isInteraction(cur)) return recPipe(cur, rest)\n    throw new Error(\"Invalid Interaction Composition\")\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return (d) => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = (v) => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => (ix) => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => (ix) => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = (key) => (ix) => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n","import {pipe, interaction} from \"../interaction/interaction.js\"\n\nexport function build(fns = []) {\n  return pipe(interaction(), fns)\n}\n","const DEFAULT_RESPONSE =\n'{\"tag\": 0, \"transaction\":null, \"transactionId\":null, \"encodedData\":null, \"events\": null, \"account\": null}'\n\nexport const response = () => JSON.parse(DEFAULT_RESPONSE)\n","import {grpc} from \"@improbable-eng/grpc-web\"\nimport {NodeHttpTransport} from \"@improbable-eng/grpc-web-node-http-transport\"\n\ngrpc.setDefaultTransport(NodeHttpTransport())\n\nexport async function unary(host, method, request) {\n  return new Promise((resolve, reject) => {\n    grpc.unary(method, {\n      request: request,\n      host: host,\n      onEnd: ({status, statusMessage, message}) => {\n        if (status === grpc.Code.OK) {\n          resolve(message)\n        } else {\n          reject(new Error(statusMessage))\n        }\n      },\n    })\n  })\n}\n","import {AccessAPI, Transaction, SendTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nexport async function sendTransaction(ix, opts = {}) {\n  ix = await ix\n\n  const tx = new Transaction()\n  tx.setScript(scriptBuffer(ix.message.cadence))\n  tx.setGasLimit(ix.message.computeLimit)\n  tx.setReferenceBlockId(\n    ix.message.refBlock ? hexBuffer(ix.message.refBlock) : null\n  )\n  tx.setPayer(addressBuffer(sansPrefix(ix.accounts[ix.payer].addr)))\n  ix.message.arguments.forEach(arg =>\n    tx.addArguments(argumentBuffer(ix.arguments[arg].asArgument))\n  )\n  ix.authorizations\n    .map(tempId => ix.accounts[tempId].addr)\n    .reduce((prev, current) => {\n      return prev.find(item => item === current) ? prev : [...prev, current]\n    }, [])\n    .forEach(addr => tx.addAuthorizers(addressBuffer(sansPrefix(addr))))\n\n  const proposalKey = new Transaction.ProposalKey()\n  proposalKey.setAddress(\n    addressBuffer(sansPrefix(ix.accounts[ix.proposer].addr))\n  )\n  proposalKey.setKeyId(ix.accounts[ix.proposer].keyId)\n  proposalKey.setSequenceNumber(ix.accounts[ix.proposer].sequenceNum)\n\n  tx.setProposalKey(proposalKey)\n\n  // Apply Non Payer Signatures to Payload Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (!acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addPayloadSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying payload signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  // Apply Payer Signatures to Envelope Signatures\n  for (let acct of Object.values(ix.accounts)) {\n    try {\n      if (acct.role.payer && acct.signature != null) {\n        const sig = new Transaction.Signature()\n        sig.setAddress(addressBuffer(sansPrefix(acct.addr)))\n        sig.setKeyId(acct.keyId)\n        sig.setSignature(hexBuffer(acct.signature))\n        tx.addEnvelopeSignatures(sig)\n      }\n    } catch (error) {\n      console.error(\"Trouble applying envelope signature\", {acct, ix})\n      throw error\n    }\n  }\n\n  const req = new SendTransactionRequest()\n  req.setTransaction(tx)\n\n  var t1 = Date.now()\n  const res = await unary(opts.node, AccessAPI.SendTransaction, req)\n  var t2 = Date.now()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transactionId = u8ToHex(res.getId_asU8())\n\n  if (typeof window !== \"undefined\") {\n    window.dispatchEvent(\n      new CustomEvent(\"FLOW::TX\", {\n        detail: {txId: ret.transactionId, delta: t2 - t1},\n      })\n    )\n  }\n\n  return ret\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransaction(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransaction, req)\n\n  let events = res.getEventsList()\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const unwrapKey = key => ({\n    address: u8ToHex(key.getAddress_asU8()),\n    keyId: key.getKeyId(),\n    sequenceNumber: key.getSequenceNumber()\n  })\n\n  const unwrapSignature = sig => ({\n    address: u8ToHex(key.getAddress_asU8()),\n    keyId: key.getKeyId(),\n    signature: u8ToHex(key.getSequenceNumber_asU8())\n  })\n\n  let transaction = ret.getTransaction()\n  ret.transaction = {\n      script: u8ToHex(transaction.getScript_asU8()),\n      arguments: (transaction.getArgumentsList()).map(u8ToHex),\n      referenceBlockId: u8ToHex(transaction.getReferenceBlockId_asU8()),\n      gasLimit: transaction.getGasLimit(),\n      proposalKey: unwrapKey(transaction.getProposalKey()),\n      payer: u8ToHex(transaction.getPayer_asU8()),\n      authorizers: (transaction.getAuthorizersList()).map(u8ToHex),\n      payloadSignatures: (transaction.getPayloadSignaturesList()).map(unwrapSignature),\n      envelopeSignatures: (transaction.getEnvelopeSignaturesList()).map(unwrapSignature)\n  }\n\n//   ret.transaction = {\n//     status: res.getStatus(),\n//     statusCode: res.getStatusCode(),\n//     errorMessage: res.getErrorMessage(),\n//     events: events.map(event => ({\n//       type: event.getType(),\n//       transactionId: u8ToHex(event.getTransactionId_asU8()),\n//       transactionIndex: event.getTransactionIndex(),\n//       eventIndex: event.getEventIndex(),\n//       payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n//     })),\n//   }\n\n  return ret\n}\n\n// enum TransactionStatus {\n//     UNKNOWN = 0;\n//     PENDING = 1;\n//     FINALIZED = 2;\n//     EXECUTED = 3;\n//     SEALED = 4;\n//     EXPIRED = 5;\n//   }\n  \n//   message Transaction {\n//     message ProposalKey {\n//       bytes address = 1;\n//       uint32 key_id = 2;\n//       uint64 sequence_number = 3;\n//     }\n    \n//     message Signature {\n//       bytes address = 1;\n//       uint32 key_id = 2;\n//       bytes signature = 3;\n//     }\n  \n//     bytes script = 1;\n//     repeated bytes arguments = 2;\n//     bytes reference_block_id = 3;\n//     uint64 gas_limit = 4;\n//     ProposalKey proposal_key = 5;\n//     bytes payer = 6;\n//     repeated bytes authorizers = 7;\n//     repeated Signature payload_signatures = 8;\n//     repeated Signature envelope_signatures = 9;\n//   }\n","import {GetAccountAtLatestBlockRequest, GetAccountAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst paddedHexBuffer = (hex, pad) =>\n  Buffer.from(hex.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\n\nexport async function sendGetAccount(ix, opts = {}) {\n  ix = await ix\n\n  const req = ix.block.height ? new GetAccountAtBlockHeightRequest() : new GetAccountAtLatestBlockRequest()\n  if (ix.block.height) req.setHeight(Number(ix.block.height))\n  req.setAddress(addressBuffer(sansPrefix(ix.account.addr)))\n\n  const res = await unary(opts.node, AccessAPI.GetAccount, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const account = res.getAccount()\n\n  let contractsMap;\n  const contracts = (contractsMap = account.getContractsMap()) ? contractsMap.getEntryList().reduce((acc, contract) => ({\n    ...acc,\n    [contract[0]]: new TextDecoder(\"utf-8\").decode(contract[1] || new UInt8Array())\n  }), {}) : {}\n\n  ret.account = {\n    address: withPrefix(u8ToHex(account.getAddress_asU8())),\n    balance: account.getBalance(),\n    code: new TextDecoder(\"utf-8\").decode(account.getCode_asU8() || new UInt8Array()),\n    contracts,\n    keys: account.getKeysList().map(publicKey => ({\n      index: publicKey.getIndex(),\n      publicKey: u8ToHex(publicKey.getPublicKey_asU8()),\n      signAlgo: publicKey.getSignAlgo(),\n      hashAlgo: publicKey.getHashAlgo(),\n      weight: publicKey.getWeight(),\n      sequenceNumber: publicKey.getSequenceNumber(),\n      revoked: publicKey.getRevoked(),\n    })),\n  }\n\n  return ret\n}\n","import {GetLatestBlockRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nconst latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/send Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the interaction object is deprecated and will no longer be recognized in future releases of @onflow/send.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/send/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nexport async function sendGetLatestBlock(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetLatestBlockRequest()\n\n  if (ix.latestBlock && ix.latestBlock.isSealed) {\n    req.setIsSealed(ix.latestBlock.isSealed)\n    latestBlockDeprecationNotice()\n  }\n\n  if (ix.block && ix.block.isSealed) {\n    req.setIsSealed(ix.block.isSealed)\n  }\n\n  const res = await unary(opts.node, AccessAPI.GetLatestBlock, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByIDRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetBlockById(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByIDRequest()\n  req.setId(hexBuffer(ix.block.id))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByID, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {GetBlockByHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\n\nexport async function sendGetBlockByHeight(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetBlockByHeightRequest()\n  req.setHeight(Number(ix.block.height))\n\n  const res = await unary(opts.node, AccessAPI.GetBlockByHeight, req)\n\n  const block = res.getBlock()\n\n  const collectionGuarantees = block.getCollectionGuaranteesList()\n  const blockSeals = block.getBlockSealsList()\n  const signatures = block.getSignaturesList()\n\n  const ret = response()\n  ret.tag = ix.tag\n  ret.block = {\n    id: u8ToHex(block.getId_asU8()),\n    parentId: u8ToHex(block.getParentId_asU8()),\n    height: block.getHeight(),\n    timestamp: block.getTimestamp(),\n    collectionGuarantees: collectionGuarantees.map(collectionGuarantee => ({\n      collectionId: u8ToHex(collectionGuarantee.getCollectionId_asU8()),\n      signatures: collectionGuarantee.getSignaturesList(),\n    })),\n    blockSeals: blockSeals.map(blockSeal => ({\n      blockId: u8ToHex(blockSeal.getBlockId_asU8()),\n      executionReceiptId: u8ToHex(blockSeal.getExecutionReceiptId_asU8()),\n      executionReceiptSignatures: blockSeal.getExecutionReceiptSignaturesList(),\n      resultApprovalSignatures: blockSeal.getResultApprovalSignaturesList(),\n    })),\n    signatures: signatures,\n  }\n\n  return ret\n}\n","import {\n    isTransaction,\n    isGetTransaction,\n    isGetTransactionStatus,\n    isScript,\n    isGetAccount,\n    isGetEvents,\n    isGetBlock,\n    isGetLatestBlock,\n    isGetBlockById,\n    isGetBlockByHeight,\n    isPing,\n} from \"../interaction/interaction.js\"\nimport {sendTransaction} from \"./send-transaction.js\"\nimport {sendGetTransactionStatus} from \"./send-get-transaction-status.js\"\nimport {sendGetTransaction} from \"./send-get-transaction.js\"\nimport {sendExecuteScript} from \"./send-execute-script.js\"\nimport {sendGetAccount} from \"./send-get-account.js\"\nimport {sendGetEvents} from \"./send-get-events.js\"\nimport {sendGetLatestBlock} from \"./send-get-latest-block.js\"\nimport {sendGetBlockById} from \"./send-get-block-by-id.js\"\nimport {sendGetBlockByHeight} from \"./send-get-block-by-height.js\"\nimport {sendPing} from \"./send-ping.js\"\nimport {config} from \"@onflow/config\"\n\nexport const send = async (ix, opts = {}) => {\n    opts.node = opts.node || (await config().get(\"accessNode.api\"))\n    ix = await ix\n\n    switch (true) {\n        case isTransaction(ix):\n            return sendTransaction(ix, opts)\n        case isGetTransactionStatus(ix):\n            return sendGetTransactionStatus(ix, opts)\n        case isGetTransaction(ix):\n            return sendGetTransaction(ix, opts)\n        case isScript(ix):\n            return sendExecuteScript(ix, opts)\n        case isGetAccount(ix):\n            return sendGetAccount(ix, opts)\n        case isGetEvents(ix):\n            return sendGetEvents(ix, opts)\n        case isGetLatestBlock(ix):\n            return sendGetLatestBlock(ix, opts)\n        case isGetBlock(ix):\n            return sendGetLatestBlock(ix, opts)\n        case isGetBlockById(ix):\n            return sendGetBlockById(ix, opts)\n        case isGetBlockByHeight(ix):\n            return sendGetBlockByHeight(ix, opts)\n        case isPing(ix):\n            return sendPing(ix, opts)\n        default:\n            return ix\n    }\n}\n","import {AccessAPI, GetTransactionRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetTransactionStatus(ix, opts = {}) {\n  ix = await ix\n\n  const req = new GetTransactionRequest()\n  req.setId(hexBuffer(ix.transaction.id))\n\n  const res = await unary(opts.node, AccessAPI.GetTransactionResult, req)\n\n  let events = res.getEventsList()\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.transaction = {\n    status: res.getStatus(),\n    statusCode: res.getStatusCode(),\n    errorMessage: res.getErrorMessage(),\n    events: events.map(event => ({\n      type: event.getType(),\n      transactionId: u8ToHex(event.getTransactionId_asU8()),\n      transactionIndex: event.getTransactionIndex(),\n      eventIndex: event.getEventIndex(),\n      payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n    })),\n  }\n\n  return ret\n}\n","import {ExecuteScriptAtLatestBlockRequest, ExecuteScriptAtBlockIDRequest, ExecuteScriptAtBlockHeightRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst argumentBuffer = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendExecuteScript(ix, opts = {}) {\n  ix = await ix\n\n  let req\n  if (ix.block.id) {\n    req = new ExecuteScriptAtBlockIDRequest()\n    req.setBlockId(hexBuffer(ix.block.id))\n  } else if (ix.block.height) {\n    req = new ExecuteScriptAtBlockHeightRequest()\n    req.setBlockHeight(Number(ix.block.height))\n  } else {\n    req = new ExecuteScriptAtLatestBlockRequest()\n  }\n\n  const code = Buffer.from(ix.message.cadence, \"utf8\")\n  ix.message.arguments.forEach(arg => req.addArguments(argumentBuffer(ix.arguments[arg].asArgument)))\n  req.setScript(code)\n\n  const res = await unary(opts.node, AccessAPI.ExecuteScriptAtLatestBlock, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n  ret.encodedData = JSON.parse(Buffer.from(res.getValue_asU8()).toString(\"utf8\"))\n\n  return ret\n}\n","import {GetEventsForHeightRangeRequest, GetEventsForBlockIDsRequest, AccessAPI} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nconst u8ToHex = u8 => Buffer.from(u8).toString(\"hex\")\nconst hexBuffer = hex => Buffer.from(hex, \"hex\")\n\nexport async function sendGetEvents(ix, opts = {}) {\n  ix = await ix\n \n  const req = ix.events.start ? new GetEventsForHeightRangeRequest() : new GetEventsForBlockIDsRequest()\n  req.setType(ix.events.eventType)\n  \n  if (ix.events.start) {\n    req.setStartHeight(Number(ix.events.start))\n    req.setEndHeight(Number(ix.events.end))\n  } else {\n    ix.events.blockIds.forEach(id =>\n      req.addBlockIds(hexBuffer(id))\n    )\n  }\n\n  const res = await unary(opts.node, AccessAPI.GetEventsForHeightRange, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  const results = res.getResultsList()\n  ret.events = results.reduce((blocks, result) => {\n    const blockId = result.getBlockId()\n    const blockHeight = result.getBlockHeight()\n    const blockTimestamp = result.getBlockTimestamp()\n    const events = result.getEventsList()\n    events.forEach(event => {\n      blocks.push({\n        blockId,\n        blockHeight,\n        blockTimestamp,\n        type: event.getType(),\n        transactionId: u8ToHex(event.getTransactionId_asU8()),\n        transactionIndex: event.getTransactionIndex(),\n        eventIndex: event.getEventIndex(),\n        payload: JSON.parse(Buffer.from(event.getPayload_asU8()).toString(\"utf8\")),\n      })\n    })\n    return blocks\n  }, [])\n\n  return ret\n}\n","import {AccessAPI, PingRequest} from \"@onflow/protobuf\"\nimport {response} from \"../response/response.js\"\nimport {unary} from \"./unary\"\n\nexport async function sendPing(ix, opts = {}) {\n  ix = await ix\n\n  const req = new PingRequest()\n\n  const res = await unary(opts.node, AccessAPI.Ping, req)\n\n  let ret = response()\n  ret.tag = ix.tag\n\n  return ret\n}\n","import {pipe, Ok, makeGetBlock} from \"../interaction/interaction.js\"\n\nexport function getBlock(isSealed = null) {\n  return pipe([\n    makeGetBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeGetAccount, Ok} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\nexport function getAccount(addr) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.account.addr = sansPrefix(addr)\n      return Ok(ix)\n    }\n  ])\n}\n","const latestBlockDeprecationNotice = () => {\n  console.error(\n    `\n          %c@onflow/decode Deprecation Notice\n          ========================\n\n          Operating upon data of the latestBlock field of the response object is deprecated and will no longer be recognized in future releases of @onflow/decode.\n          Find out more here: https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\n\n          =======================\n        `\n      .replace(/\\n\\s+/g, \"\\n\")\n      .trim(),\n    \"font-weight:bold;font-family:monospace;\"\n  )\n}\n\nconst decodeNumber = async (num, _, stack) => {\n  try {\n    return Number(num)\n  } catch (e) {\n    throw new Error(`Decode Number Error : ${stack.join(\".\")}`)\n  }\n}\n\nconst decodeImplicit = async (i) => i\n\nconst decodeVoid = async () => null\n\nconst decodeOptional = async (optional, decoders, stack) =>\n  optional ? await recurseDecode(optional, decoders, stack) : null\n\nconst decodeReference = async (v) => ({address: v.address, type: v.type})\n\nconst decodeArray = async (array, decoders, stack) =>\n  await Promise.all(\n    array.map(\n      (v) =>\n        new Promise(async (res) =>\n          res(await recurseDecode(v, decoders, [...stack, v.type]))\n        )\n    )\n  )\n\nconst decodeDictionary = async (dictionary, decoders, stack) =>\n  await dictionary.reduce(async (acc, v) => {\n    acc = await acc\n    acc[\n      await recurseDecode(v.key, decoders, [...stack, v.key])\n    ] = await recurseDecode(v.value, decoders, [...stack, v.key])\n    return acc\n  }, Promise.resolve({}))\n\nconst decodeComposite = async (composite, decoders, stack) => {\n  const decoded = await composite.fields.reduce(async (acc, v) => {\n    acc = await acc\n    acc[v.name] = await recurseDecode(v.value, decoders, [...stack, v.name])\n    return acc\n  }, Promise.resolve({}))\n  const decoder = composite.id && decoderLookup(decoders, composite.id)\n  return decoder ? await decoder(decoded) : decoded\n}\n\nconst defaultDecoders = {\n  UInt: decodeNumber,\n  Int: decodeNumber,\n  UInt8: decodeNumber,\n  Int8: decodeNumber,\n  UInt16: decodeNumber,\n  Int16: decodeNumber,\n  UInt32: decodeNumber,\n  Int32: decodeNumber,\n  UInt64: decodeNumber,\n  Int64: decodeNumber,\n  UInt128: decodeNumber,\n  Int128: decodeNumber,\n  UInt256: decodeNumber,\n  Int256: decodeNumber,\n  Word8: decodeNumber,\n  Word16: decodeNumber,\n  Word32: decodeNumber,\n  Word64: decodeNumber,\n  UFix64: decodeImplicit,\n  Fix64: decodeImplicit,\n  String: decodeImplicit,\n  Character: decodeImplicit,\n  Bool: decodeImplicit,\n  Address: decodeImplicit,\n  Void: decodeVoid,\n  Optional: decodeOptional,\n  Reference: decodeReference,\n  Array: decodeArray,\n  Dictionary: decodeDictionary,\n  Event: decodeComposite,\n  Resource: decodeComposite,\n  Struct: decodeComposite,\n}\n\nconst decoderLookup = (decoders, lookup) => {\n  const found = Object.keys(decoders).find((decoder) => {\n    if (/^\\/.*\\/$/.test(decoder)) {\n      const reg = new RegExp(decoder.substring(1, decoder.length - 1))\n      return reg.test(lookup)\n    }\n    return decoder === lookup\n  })\n  return lookup && found && decoders[found]\n}\n\nconst recurseDecode = async (decodeInstructions, decoders, stack) => {\n  let decoder = decoderLookup(decoders, decodeInstructions.type)\n  if (!decoder)\n    throw new Error(\n      `Undefined Decoder Error: ${decodeInstructions.type}@${stack.join(\".\")}`\n    )\n  return await decoder(decodeInstructions.value, decoders, stack)\n}\n\nexport const decode = async (\n  decodeInstructions,\n  customDecoders = {},\n  stack = []\n) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n  return await recurseDecode(decodeInstructions, decoders, stack)\n}\n\nexport const decodeResponse = async (response, customDecoders = {}) => {\n  let decoders = {...defaultDecoders, ...customDecoders}\n\n  if (response.encodedData) {\n    return await decode(response.encodedData, decoders)\n  } else if (response.transaction) {\n    return {\n      ...response.transaction,\n      events: await Promise.all(\n        response.transaction.events.map(async function decodeEvents(e) {\n          return {\n            type: e.type,\n            transactionId: e.transactionId,\n            transactionIndex: e.transactionIndex,\n            eventIndex: e.eventIndex,\n            data: await decode(e.payload, decoders),\n          }\n        })\n      ),\n    }\n  } else if (response.events) {\n    return await Promise.all(\n      response.events.map(async function decodeEvents(e) {\n        return {\n          type: e.type,\n          transactionId: e.transactionId,\n          transactionIndex: e.transactionIndex,\n          eventIndex: e.eventIndex,\n          data: await decode(e.payload, decoders),\n        }\n      })\n    )\n  } else if (response.account) {\n    return response.account\n  } else if (response.block) {\n    return response.block\n  } else if (response.blockHeader) {\n    return response.blockHeader\n  } else if (response.latestBlock) {\n    latestBlockDeprecationNotice()\n    return response.latestBlock\n  } else if (response.transactionId) {\n    return response.transactionId\n  }\n\n  return null\n}\n","import {isTransaction, Ok, interaction, pipe} from \"../interaction/interaction.js\"\nimport {send} from \"../send/sdk-send.js\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\n\nasync function getRefId (opts) {\n  var ix\n  ix = await pipe(interaction(), [getBlock()])\n  ix = await send(ix, opts)\n  ix = await decodeResponse(ix)\n  return ix.id\n}\n\nexport function resolveRefBlockId(opts) {\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.message.refBlock) return Ok(ix)\n\n    ix.message.refBlock = await getRefId(opts)\n\n    return Ok(ix)\n  }\n}\n","import {isTransaction, isScript, get} from \"../interaction/interaction.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"@onflow/config\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nexport async function resolveCadence(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    var cadence = get(ix, \"ix.cadence\")\n    invariant(\n      isFn(cadence) || isString(cadence),\n      \"Cadence needs to be a function or a string.\"\n    )\n    if (isFn(cadence)) cadence = await cadence({})\n    invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n    ix.message.cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce(\n          (cadence, [key, value]) => cadence.replace(key, value),\n          cadence\n        )\n      )\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      ix.arguments[id].asArgument = cast(arg)\n    }\n  }\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.0\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function collectAccounts(ix, accounts, last, depth = 3) {\n  invariant(depth, \"Account Resolve Recursion Limit Exceeded\", {ix, accounts})\n\n  let authorizations = []\n  for (let ax of accounts) {\n    var old = last || ax\n    if (isFn(ax.resolve)) ax = await ax.resolve(ax, buildPreSignable(ax, ix))\n\n    if (Array.isArray(ax)) {\n      await collectAccounts(ix, ax, old, depth - 1)\n    } else {\n      ix.accounts[ax.tempId] = ix.accounts[ax.tempId] || ax\n      ix.accounts[ax.tempId].role.proposer =\n        ix.accounts[ax.tempId].role.proposer || ax.role.proposer\n      ix.accounts[ax.tempId].role.payer =\n        ix.accounts[ax.tempId].role.payer || ax.role.payer\n      ix.accounts[ax.tempId].role.authorizer =\n        ix.accounts[ax.tempId].role.authorizer || ax.role.authorizer\n\n      if (ix.accounts[ax.tempId].role.proposer && ix.proposer === old.tempId) {\n        ix.proposer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.payer && ix.payer === old.tempId) {\n        ix.payer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.authorizer) {\n        if (last) {\n          // do group replacement\n          authorizations = [...authorizations, ax.tempId]\n        } else {\n          // do 1-1 replacement\n          ix.authorizations = ix.authorizations.map(d =>\n            d === old.tempId ? ax.tempId : d\n          )\n        }\n      }\n    }\n    if (old.tempId != ax.tempId) delete ix.accounts[old.tempId]\n  }\n\n  if (last) {\n    // complete (flatmap) group replacement\n    ix.authorizations = ix.authorizations\n      .map(d => (d === last.tempId ? authorizations : d))\n      .reduce(\n        (prev, curr) =>\n          Array.isArray(curr) ? [...prev, ...curr] : [...prev, curr],\n        []\n      )\n  }\n}\n\nexport async function resolveAccounts(ix) {\n  if (isTransaction(ix)) {\n    try {\n      await collectAccounts(ix, Object.values(ix.accounts))\n      await collectAccounts(ix, Object.values(ix.accounts))\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import { encode } from '@onflow/rlp';\n\nexport const encodeTransactionPayload = tx => rlpEncode(preparePayload(tx))\nexport const encodeTransactionEnvelope = tx => rlpEncode(prepareEnvelope(tx))\n\nconst paddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, 0), \"hex\")\n\nconst addressBuffer = addr => paddedHexBuffer(addr, 8)\n\nconst blockBuffer = block => paddedHexBuffer(block, 32)\n\nconst argumentToString = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst signatureBuffer = signature => Buffer.from(signature, \"hex\")\n\nconst rlpEncode = v => {\n  return encode(v).toString(\"hex\")\n}\n\nconst preparePayload = tx => {\n  validatePayload(tx)\n\n  return [\n    scriptBuffer(tx.script),\n    tx.arguments.map(argumentToString),\n    blockBuffer(tx.refBlock),\n    tx.gasLimit,\n    addressBuffer(tx.proposalKey.address),\n    tx.proposalKey.keyId,\n    tx.proposalKey.sequenceNum,\n    addressBuffer(tx.payer),\n    tx.authorizers.map(addressBuffer),\n  ]\n}\n\nconst prepareEnvelope = tx => {\n  validateEnvelope(tx)\n\n  return [preparePayload(tx), preparePayloadSignatures(tx)]\n}\n\nconst preparePayloadSignatures = tx => {\n  const signers = collectSigners(tx)\n\n  return tx.payloadSigs\n    .map(sig => {\n      return {\n        signerIndex: signers.get(sig.address),\n        keyId: sig.keyId,\n        sig: sig.sig,\n      }\n    })\n    .sort((a, b) => {\n      if (a.signerIndex > b.signerIndex) return 1\n      if (a.signerIndex < b.signerIndex) return -1\n\n      if (a.keyId > b.keyId) return 1\n      if (a.keyId < b.keyId) return -1\n    })\n    .map(sig => {\n      return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n    })\n}\n\nconst collectSigners = tx => {\n  const signers = new Map()\n  let i = 0\n\n  const addSigner = addr => {\n    if (!signers.has(addr)) {\n      signers.set(addr, i)\n      i++\n    }\n  }\n\n  addSigner(tx.proposalKey.address)\n  addSigner(tx.payer)\n  tx.authorizers.forEach(addSigner)\n\n  return signers\n}\n\nconst validatePayload = tx => {\n  payloadFields.forEach(field => checkField(tx, field))\n  proposalKeyFields.forEach(field =>\n    checkField(tx.proposalKey, field, \"proposalKey\")\n  )\n}\n\nconst validateEnvelope = tx => {\n  envelopeFields.forEach(field => checkField(tx, field))\n  tx.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n}\n\nconst isNumber = v => typeof v === \"number\"\nconst isString = v => typeof v === \"string\"\nconst isObject = v => v !== null && typeof v === \"object\"\nconst isArray = v => isObject(v) && v instanceof Array\n\nconst payloadFields = [\n  {name: \"script\", check: isString},\n  {name: \"arguments\", check: isArray},\n  {name: \"refBlock\", check: isString, defaultVal: \"0\"},\n  {name: \"gasLimit\", check: isNumber},\n  {name: \"proposalKey\", check: isObject},\n  {name: \"payer\", check: isString},\n  {name: \"authorizers\", check: isArray},\n]\n\nconst proposalKeyFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sequenceNum\", check: isNumber},\n]\n\nconst envelopeFields = [{name: \"payloadSigs\", check: isArray}]\n\nconst payloadSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst checkField = (obj, field, base, index) => {\n  const {name, check, defaultVal} = field\n  if (obj[name] == null && defaultVal != null) obj[name] = defaultVal\n  if (obj[name] == null) throw missingFieldError(name, base, index)\n  if (!check(obj[name])) throw invalidFieldError(name, base, index)\n}\n\nconst printFieldName = (field, base, index) => {\n  if (!!base)\n    return index == null ? `${base}.${field}` : `${base}.${index}.${field}`\n  return field\n}\n\nconst missingFieldError = (field, base, index) =>\n  new Error(`Missing field ${printFieldName(field, base, index)}`)\nconst invalidFieldError = (field, base, index) =>\n  new Error(`Invalid field ${printFieldName(field, base, index)}`)\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"../encode/encode.js\"\n\nexport async function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature,\n        })),\n      })\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nfunction findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  inside.add(ix.proposer)\n  inside.delete(ix.payer)\n  return Array.from(inside)\n}\n\nfunction findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set([ix.payer])\n  return Array.from(outside)\n}\n\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    // if (!acct.role.proposer) {\n    //   ix.accounts[id].keyId = keyId\n    // }\n    ix.accounts[id].signature = signature\n  }\n}\n\nfunction buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.0\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix) {\n  return {\n    script: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    gasLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: sansPrefix(ix.accounts[ix.payer].addr),\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import { get, pipe, Ok, Bad } from \"../interaction/interaction.js\"\n\nexport async function resolveValidators(ix) {\n  const validators = get(ix, 'ix.validators', [])\n  return pipe(ix, validators.map(cb => ix => cb(ix, { Ok, Bad })))\n}   \n","import {pipe, isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nimport {send} from \"../send/sdk-send.js\"\nimport {build} from \"../build/build.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nimport {resolveRefBlockId} from \"./resolve-ref-block-id.js\"\nimport {resolveCadence} from \"./resolve-cadence.js\"\nimport {resolveArguments} from \"./resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolve-accounts.js\"\nimport {resolveSignatures} from \"./resolve-signatures.js\"\nimport {resolveValidators} from \"./resolve-validators.js\"\nimport {resolveFinalNormalization} from \"./resolve-final-normalization.js\"\n\n// export const resolve = pipe([\n//   resolveCadence,\n//   resolveArguments,\n//   resolveAccounts,\n//   resolveRefBlockId(opts),\n//   resolveSignatures,\n//   resolveValidators,\n// ])\n\nexport const resolve = pipe([\n    resolveCadence,\n    resolveArguments,\n    resolveAccounts,\n    /* special */ execFetchRef,\n    /* special */ execFetchSequenceNumber,\n    resolveSignatures,\n    resolveFinalNormalization,\n    resolveValidators,\n])\n\nasync function execFetchRef(ix) {\n    if (isTransaction(ix) && ix.message.refBlock == null) {\n        ix.message.refBlock = (await send([getBlock()], opts).then(decode)).id\n    }\n    return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\nif (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n    ix.accounts[acct.tempId].sequenceNum = await send(await build([getAccount(acct.addr)])).then(decode)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n}\nreturn ix\n}\n  ","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {\n  interaction,\n  pipe,\n} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {resolve as defaultResolve} from \"../resolve/resolve.js\"\nimport {send as defaultSend} from \"./sdk-send.js\"\n\n// import {interaction, pipe} from \"@onflow/interaction\"\n// import {send as defaultSend} from \"@onflow/send\"\n// import {resolve as defaultResolve} from \"@onflow/sdk-resolve\"\n// import {config} from \"@onflow/config\"\n\nexport const send = async (args = [], opts = {}) => {\n  const sendFunction = await config().get(\"sdk.send\", opts.send || defaultSend)\n  const resolveFunction = await config().get(\n    \"sdk.resolve\",\n    opts.resolve || defaultResolve\n  )\n  if (Array.isArray(args)) args = pipe(interaction(), args)\n  return sendFunction(await resolveFunction(args), opts)\n}\n\n","import {decodeResponse} from \"./decode.js\"\nimport {config} from \"@onflow/config\"\n\nexport async function decode(response) {\n  const decodersFromConfig = await config().where(/^decoder\\./)\n  const decoders = Object.entries(decodersFromConfig).map(\n    ([pattern, xform]) => {\n      pattern = `/${pattern.replace(/^decoder\\./, \"\")}$/`\n      return [pattern, xform]\n    }\n  )\n\n  return decodeResponse(response, Object.fromEntries(decoders))\n}\n","import {send} from \"../send/send.js\"\nimport {getBlock} from \"../build/build-get-block\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nexport function latestBlock(...args) {\n  let opts = args[1] || (typeof args[0] === \"object\" ? args[0] : undefined)\n  let isSealed = typeof args[0] === \"boolean\" ? args[0] : undefined\n\n  if (typeof args[0] !== \"object\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing options as the first arguement to the latestBlock function has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0007-deprecate-opts-first-arg-latest-block\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n  }\n\n  return send([getBlock(isSealed)], opts).then(decode)\n}\n","import {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {send} from \"../send/send.js\"\n\nexport function account(address, opts) {\n  return send([getAccount(address)], opts).then(decode)\n}\n","import {pipe, makeAuthorizer} from \"../interaction/interaction.js\"\n\nconst roles = {\n  authorizer: true,\n}\n\nexport function authorizations(ax = []) {\n  return pipe(\n    ax.map((authz) => {\n      return typeof authz === \"function\"\n        ? makeAuthorizer({resolve: authz, role: roles, roles})\n        : makeAuthorizer({...authz, role: roles, roles})\n    })\n  )\n}\n\nexport function authorization(addr, signingFunction, keyId, sequenceNum) {\n  return {addr, signingFunction, keyId, sequenceNum}\n}\n","import {update} from \"../interaction/interaction.js\"\n\nexport function validator(cb) {\n    return update('ix.validators', validators => \n        Array.isArray(validators) ? validators.push(cb) : [cb]\n    )\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockHeight(height) {\n  return pipe([\n    ix => {\n      ix.block.height = height\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (typeof ix.block.isSealed === \"boolean\") return Bad(ix, \"Unable to specify both block height and isSealed.\")\n      if (ix.block.id) return Bad(ix, \"Unable to specify both block height and block id.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {isGetAccount, pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockId(id) {\n  return pipe([\n    ix => {\n      ix.block.id = id\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (isGetAccount(ix)) return Bad(ix, \"Unable to specify a block id with a Get Account interaction.\")\n      if (typeof ix.block.isSealed === \"boolean\") return Bad(ix, \"Unable to specify both block id and isSealed.\")\n      if (ix.block.height) return Bad(ix, \"Unable to specify both block id and block height.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEvents(eventType, start, end) {\n\n  if (typeof start !== \"undefined\" || typeof end !== \"undefined\") {\n    console.warn(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n  \n      Passing a start and end into getEnvents has been deprecated and will not be supported in future versions of the Flow JS-SDK/FCL.\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\n  \n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )  \n  }\n\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockHeightRange(eventType, start, end) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\nexport function getEventsAtBlockIds(blockIds = []) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.blockIds = blockIds\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetBlockHeader} from \"../interaction/interaction.js\"\n\nexport function getBlockHeader(isSealed = null) {\n  return pipe([\n    makeGetBlockHeader,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetLatestBlock} from \"../interaction/interaction.js\"\n\nexport function getLatestBlock(isSealed = false) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getLatestBlock builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0006-deprecate-get-latest-block-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetLatestBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockById} from \"../interaction/interaction.js\"\n\nexport function getBlockById(id) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockById builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0004-deprecate-get-block-by-id-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockById,\n    ix => {\n      ix.block.ids = [id]\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetBlockByHeight} from \"../interaction/interaction.js\"\n\nexport function getBlockByHeight(height) {\n\n  console.warn(\n    `\n    %cFCL/SDK Deprecation Notice\n    ============================\n\n    The getBlockByHeight builder has been deprecated and will be removed in future versions of the Flow JS-SDK/FCL.\n    You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0003-deprecate-get-block-by-height-builder\n\n    ============================\n  `,\n    \"font-weight:bold;font-family:monospace;\"\n  )\n\n  return pipe([\n    makeGetBlockByHeight,\n    ix => {\n      ix.block.height = height\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"../interaction/interaction.js\"\n\nexport function getTransactionStatus(transactionId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, makeGetTransaction} from \"../interaction/interaction.js\"\n\nexport function getTransaction(transactionId) {\n  return pipe([\n    makeGetTransaction,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function limit(computeLimit) {\n  return pipe([\n    ix => {\n      ix.message.computeLimit = computeLimit\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, makeParam} from \"../interaction/interaction.js\"\n\nexport function params(px = []) {\n  return pipe(px.map(makeParam))\n}\n\nexport function param(value, xform = null, key = null) {\n  return {key, value, xform: null}\n}\n","import {pipe, makeArgument} from \"../interaction/interaction.js\"\n\nexport function args(ax = []) {\n  return pipe(ax.map(makeArgument))\n}\n\nexport function arg(value, xform) {\n  return {value, xform}\n}\n","import {pipe, makeProposer} from \"../interaction/interaction.js\"\n\nconst roles = {\n  proposer: true,\n}\n\nexport async function proposer(authz) {\n  return typeof authz === \"function\"\n    ? makeProposer({resolve: authz, role: roles, roles})\n    : makeProposer({...authz, role: roles, roles})\n}\n","import {pipe, makePayer} from \"../interaction/interaction.js\"\n\nconst roles = {\n  payer: true\n}\n\nexport function payer(authz) {\n  return typeof authz === \"function\"\n    ? makePayer({resolve: authz, role: roles, roles})\n    : makePayer({...authz, role: roles, roles})\n}\n","import {makePing} from \"../interaction/interaction.js\"\n\nexport function ping() {\n  return makePing\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function ref(refBlock) {\n  return pipe([\n    ix => {\n      ix.message.refBlock = refBlock\n      return Ok(ix)\n    }\n  ])\n}\n","import {pipe, Ok, put, makeScript} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nexport function script(...args) {\n  return pipe([\n    makeScript,\n    put(\"ix.cadence\", template(...args))\n  ])\n}\n","import {pipe, put, Ok, makeTransaction} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nconst DEFAULT_COMPUTE_LIMIT = 10\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.cadence\", template(...args)),\n    ix => {\n      ix.message.computeLimit = ix.message.computeLimit || DEFAULT_COMPUTE_LIMIT\n      ix.message.refBlock = ix.message.refBlock || DEFUALT_REF\n      ix.authorizations = ix.authorizations || DEFAULT_SCRIPT_ACCOUNTS\n      return Ok(ix)\n    },\n  ])\n}\n","import { Ok, Bad } from \"../interaction/interaction.js\"\n\nexport function invariant(...args) {\n  if (args.length > 1) {\n    const [predicate, message] = args\n    return invariant((ix, { Ok, Bad }) => {\n      return predicate ? Ok(ix) : Bad(ix, message)\n    })\n  }\n  const [fn] = args\n  return ix => fn(ix, {Ok, Bad})\n}\n","import {resolveCadence} from \"./resolve-cadence.js\"\n\nexport function resolveParams (ix) {\n  console.error(\n      `\n      %cFCL/SDK Deprecation Notice\n      ============================\n\n      The resolver sdk.resolveParams is being replaced with the package @onflow/sdk-resolve-cadence\n      You can learn more (including a guide on common transition paths) here: https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0002-deprecate-resolve-params-resolver\n\n      ============================\n    `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n\n  return resolveCadence(ix)\n}\n"],"names":["IX","KEYS","Set","Object","keys","JSON","parse","interaction","isArray","d","Array","isNull","CHARS","split","randChar","Math","random","length","uuid","from","join","Ok","ix","status","Bad","reason","makeIx","wat","tag","makeAccount","acct","tempId","accounts","addr","keyId","sequenceNum","signature","signingFunction","resolve","role","makeParam","param","message","params","push","key","value","asParam","xform","makeArgument","arg","arguments","asArgument","makeScript","makeTransaction","makeGetTransactionStatus","makeGetTransaction","makeGetAccount","makeGetEvents","makeGetLatestBlock","makeGetBlockById","makeGetBlockByHeight","makePing","makeGetBlock","makeGetBlockHeader","is","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetTransaction","isGetAccount","isGetEvents","isGetLatestBlock","isGetBlockById","isGetBlockByHeight","isPing","isGetBlock","isGetBlockHeader","isOk","isBad","why","recPipe","fns","body","recover","result","has","Error","hardMode","hd","rest","cur","hasOwnProperty","isInteraction","e","then","pipe","arg1","arg2","identity","v","get","fallback","assigns","put","update","fn","destroy","build","response","unary","host","method","request","Promise","reject","grpc","onEnd","statusMessage","Code","OK","setDefaultTransport","NodeHttpTransport","hexBuffer","hex","Buffer","addressBuffer","padStart","pad","u8ToHex","u8","toString","send","opts","node","tx","Transaction","setScript","script","scriptBuffer","cadence","setGasLimit","computeLimit","setReferenceBlockId","refBlock","setPayer","sansPrefix","payer","forEach","addArguments","stringify","argumentBuffer","authorizations","map","reduce","prev","current","find","item","addAuthorizers","proposalKey","ProposalKey","setAddress","proposer","setKeyId","setSequenceNumber","setProposalKey","values","sig","Signature","setSignature","addPayloadSignatures","error","console","addEnvelopeSignatures","req","SendTransactionRequest","setTransaction","t1","Date","now","AccessAPI","SendTransaction","res","t2","ret","transactionId","getId_asU8","window","dispatchEvent","CustomEvent","detail","txId","delta","sendTransaction","GetTransactionRequest","setId","transaction","id","GetTransactionResult","events","getEventsList","getStatus","statusCode","getStatusCode","errorMessage","getErrorMessage","event","type","getType","getTransactionId_asU8","transactionIndex","getTransactionIndex","eventIndex","getEventIndex","payload","getPayload_asU8","sendGetTransactionStatus","GetTransaction","unwrapSignature","address","getAddress_asU8","getKeyId","getSequenceNumber_asU8","getTransaction","getScript_asU8","_arguments2","getArgumentsList","referenceBlockId","getReferenceBlockId_asU8","gasLimit","getGasLimit","sequenceNumber","getSequenceNumber","unwrapKey","getProposalKey","getPayer_asU8","authorizers","getAuthorizersList","payloadSignatures","getPayloadSignaturesList","envelopeSignatures","getEnvelopeSignaturesList","sendGetTransaction","block","ExecuteScriptAtBlockIDRequest","setBlockId","height","ExecuteScriptAtBlockHeightRequest","setBlockHeight","Number","ExecuteScriptAtLatestBlockRequest","code","ExecuteScriptAtLatestBlock","encodedData","getValue_asU8","sendExecuteScript","GetAccountAtBlockHeightRequest","GetAccountAtLatestBlockRequest","setHeight","account","GetAccount","contractsMap","getAccount","contracts","getContractsMap","getEntryList","acc","contract","TextDecoder","decode","UInt8Array","withPrefix","balance","getBalance","getCode_asU8","getKeysList","publicKey","index","getIndex","getPublicKey_asU8","signAlgo","getSignAlgo","hashAlgo","getHashAlgo","weight","getWeight","revoked","getRevoked","sendGetAccount","start","GetEventsForHeightRangeRequest","GetEventsForBlockIDsRequest","setType","eventType","setStartHeight","setEndHeight","end","blockIds","addBlockIds","GetEventsForHeightRange","results","getResultsList","blocks","blockId","getBlockId","blockHeight","getBlockHeight","blockTimestamp","getBlockTimestamp","sendGetEvents","GetLatestBlockRequest","latestBlock","isSealed","setIsSealed","replace","trim","GetLatestBlock","getBlock","collectionGuarantees","getCollectionGuaranteesList","blockSeals","getBlockSealsList","signatures","getSignaturesList","parentId","getParentId_asU8","getHeight","timestamp","getTimestamp","collectionGuarantee","collectionId","getCollectionId_asU8","blockSeal","getBlockId_asU8","executionReceiptId","getExecutionReceiptId_asU8","executionReceiptSignatures","getExecutionReceiptSignaturesList","resultApprovalSignatures","getResultApprovalSignaturesList","sendGetLatestBlock","GetBlockByIDRequest","GetBlockByID","sendGetBlockById","GetBlockByHeightRequest","GetBlockByHeight","sendGetBlockByHeight","PingRequest","Ping","sendPing","config","decodeNumber","num","_","stack","decodeImplicit","i","decodeComposite","composite","decoders","fields","recurseDecode","name","decoded","decoder","decoderLookup","defaultDecoders","UInt","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","UFix64","Fix64","String","Character","Bool","Address","Void","Optional","optional","Reference","array","all","Dictionary","dictionary","Event","Resource","Struct","lookup","found","test","RegExp","substring","decodeInstructions","customDecoders","decodeResponse","data","blockHeader","_exit2","resolveRefBlockId","getRefId","resolveCadence","invariant","isString","where","entries","isFn","resolveArguments","cast","Symbol","iterator","pact","state","s","o","_settle","bind","observer","_Pact","prototype","onFulfilled","onRejected","this","callback","_this","thenable","resolveAccounts","collectAccounts","last","depth","curr","target","check","step","_cycle","next","done","_isSettledPact","_fixup","TypeError","ax","old","authorizer","f_type","f_vsn","roles","args","buildPreSignable","paddedHexBuffer","argumentToString","rlpEncode","encode","preparePayload","validatePayload","preparePayloadSignatures","signers","collectSigners","payloadSigs","signerIndex","sort","a","b","Map","addSigner","set","payloadFields","field","checkField","proposalKeyFields","isNumber","isObject","defaultVal","envelopeFields","payloadSigFields","obj","base","missingFieldError","invalidFieldError","printFieldName","resolveSignatures","insideSigners","inside","add","findInsideSigners","prepForEncoding","insidePayload","fetchSignature","outsideSigners","outside","findOutsideSigners","outsidePayload","validateEnvelope","prepareEnvelope","encodeOutsideMessage","buildSignable","cid","resolveValidators","validators","cb","_send$then","defaultSend","sendFunction","defaultResolve","resolveFunction","decodersFromConfig","pattern","fromEntries","undefined","warn","authz","authorization","validator","atBlockHeight","atBlockId","getEvents","getEventsAtBlockHeightRange","getEventsAtBlockIds","getBlockHeader","getLatestBlock","getBlockById","ids","getBlockByHeight","getTransactionStatus","limit","px","ping","ref","template","DEFAULT_SCRIPT_ACCOUNTS","predicate","resolveParams"],"mappings":"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"}